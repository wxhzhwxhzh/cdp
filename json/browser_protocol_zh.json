{
  "version": {
    "major": "1",
    "minor": "3"
  },
  "domains": [
    {
      "domain": "Accessibility",
      "experimental": true,
      "dependencies": [
        "DOM"
      ],
      "types": [
        {
          "id": "AXNodeId",
          "description": "唯一的可访问性节点标识符。",
          "type": "string"
        },
        {
          "id": "AXValueType",
          "description": "可能的属性类型的枚举。",
          "type": "string",
          "enum": [
            "boolean",
            "tristate",
            "booleanOrUndefined",
            "idref",
            "idrefList",
            "integer",
            "node",
            "nodeList",
            "number",
            "string",
            "computedString",
            "token",
            "tokenList",
            "domRelation",
            "role",
            "internalRole",
            "valueUndefined"
          ]
        },
        {
          "id": "AXValueSourceType",
          "description": "可能的属性源的枚举。",
          "type": "string",
          "enum": [
            "attribute",
            "implicit",
            "style",
            "contents",
            "placeholder",
            "relatedElement"
          ]
        },
        {
          "id": "AXValueNativeSourceType",
          "description": "可能的本机属性源的枚举（作为特定 AXValueSourceType 的子类型）。",
          "type": "string",
          "enum": [
            "description",
            "figcaption",
            "label",
            "labelfor",
            "labelwrapped",
            "legend",
            "rubyannotation",
            "tablecaption",
            "title",
            "other"
          ]
        },
        {
          "id": "AXValueSource",
          "description": "计算 AX 属性的单一来源。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "这是什么类型的源。",
              "$ref": "AXValueSourceType"
            },
            {
              "name": "value",
              "description": "该财产的价值来源。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "attribute",
              "description": "相关属性的名称（如果有）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "attributeValue",
              "description": "相关属性的值（如果有）。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "superseded",
              "description": "该源是否被更高优先级的源取代。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "nativeSource",
              "description": "该值的本机标记源，例如一个“<label>”元素。",
              "optional": true,
              "$ref": "AXValueNativeSourceType"
            },
            {
              "name": "nativeSourceValue",
              "description": "本机源的值，例如节点或节点列表。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "invalid",
              "description": "该属性的值是否无效。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "invalidReason",
              "description": "该值无效的原因（如果无效）。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "AXRelatedNode",
          "type": "object",
          "properties": [
            {
              "name": "backendDOMNodeId",
              "description": "相关 DOM 节点的 BackendNodeId。",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "idref",
              "description": "提供的 IDRef 值（如果有）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "text",
              "description": "当前上下文中该节点的替代文本。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "AXProperty",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "该属性的名称。",
              "$ref": "AXPropertyName"
            },
            {
              "name": "value",
              "description": "该房产的价值。",
              "$ref": "AXValue"
            }
          ]
        },
        {
          "id": "AXValue",
          "description": "单个计算的 AX 属性。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "该值的类型。",
              "$ref": "AXValueType"
            },
            {
              "name": "value",
              "description": "该属性的计算值。",
              "optional": true,
              "type": "any"
            },
            {
              "name": "relatedNodes",
              "description": "一个或多个相关节点（如果适用）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AXRelatedNode"
              }
            },
            {
              "name": "sources",
              "description": "有助于计算该属性的来源。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AXValueSource"
              }
            }
          ]
        },
        {
          "id": "AXPropertyName",
          "description": "AXProperty 名称的值：\n- 从“忙”到“角色描述”：适用于每个 AX 节点的状态\n- 从“live”到“root”：适用于活动区域中节点的属性\n- 从“自动完成”到“valuetext”：适用于小部件的属性\n- 从“已检查”到“已选择”：适用于小部件的状态\n- 从“activedescendant”到“owns”：除父/子/兄弟之外的元素之间的关系\n- 从“activeFullscreenElement”到“无趣”：隐藏此 noode 的原因",
          "type": "string",
          "enum": [
            "actions",
            "busy",
            "disabled",
            "editable",
            "focusable",
            "focused",
            "hidden",
            "hiddenRoot",
            "invalid",
            "keyshortcuts",
            "settable",
            "roledescription",
            "live",
            "atomic",
            "relevant",
            "root",
            "autocomplete",
            "hasPopup",
            "level",
            "multiselectable",
            "orientation",
            "multiline",
            "readonly",
            "required",
            "valuemin",
            "valuemax",
            "valuetext",
            "checked",
            "expanded",
            "modal",
            "pressed",
            "selected",
            "activedescendant",
            "controls",
            "describedby",
            "details",
            "errormessage",
            "flowto",
            "labelledby",
            "owns",
            "url",
            "activeFullscreenElement",
            "activeModalDialog",
            "activeAriaModalDialog",
            "ariaHiddenElement",
            "ariaHiddenSubtree",
            "emptyAlt",
            "emptyText",
            "inertElement",
            "inertSubtree",
            "labelContainer",
            "labelFor",
            "notRendered",
            "notVisible",
            "presentationalRole",
            "probablyPresentational",
            "inactiveCarouselTabContent",
            "uninteresting"
          ]
        },
        {
          "id": "AXNode",
          "description": "可访问性树中的节点。",
          "type": "object",
          "properties": [
            {
              "name": "nodeId",
              "description": "该节点的唯一标识符。",
              "$ref": "AXNodeId"
            },
            {
              "name": "ignored",
              "description": "是否为了可访问性而忽略此节点",
              "type": "boolean"
            },
            {
              "name": "ignoredReasons",
              "description": "该节点隐藏原因的集合。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AXProperty"
              }
            },
            {
              "name": "role",
              "description": "这个“Node”的角色，无论是显式的还是隐式的。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "chromeRole",
              "description": "这个“Node”是 Chrome 的原始角色。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "name",
              "description": "此“节点”的可访问名称。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "description",
              "description": "此“节点”的可访问描述。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "value",
              "description": "此“节点”的值。",
              "optional": true,
              "$ref": "AXValue"
            },
            {
              "name": "properties",
              "description": "所有其他属性",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AXProperty"
              }
            },
            {
              "name": "parentId",
              "description": "该节点的父节点的 ID。",
              "optional": true,
              "$ref": "AXNodeId"
            },
            {
              "name": "childIds",
              "description": "该节点的每个子节点的 ID。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AXNodeId"
              }
            },
            {
              "name": "backendDOMNodeId",
              "description": "关联 DOM 节点的后端 ID（如果有）。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "frameId",
              "description": "与该节点文档关联的帧的帧 ID。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用可访问域。"
        },
        {
          "name": "enable",
          "description": "启用可访问性域，这会导致“AXNodeId”在方法调用之间保持一致。\n这会打开页面的可访问性，这可能会影响性能，直到禁用可访问性为止。"
        },
        {
          "name": "getPartialAXTree",
          "description": "获取此 DOM 节点的可访问性节点和部分可访问性树（如果存在）。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取其部分可访问性树的节点的标识符。",
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "要获取其部分可访问性树的后端节点的标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "用于获取部分可访问性树的节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "fetchRelatives",
              "description": "是否获取该节点的祖先、兄弟姐妹和子节点。默认为 true。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "description": "该 DOM 节点的 `Accessibility.AXNode`（如果存在），加上它的祖先、兄弟节点和\n儿童（如有要求）。",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        },
        {
          "name": "getFullAXTree",
          "description": "获取根文档的整个辅助功能树",
          "experimental": true,
          "parameters": [
            {
              "name": "depth",
              "description": "应检索根节点后代的最大深度。\n如果省略，则返回完整的树。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "frameId",
              "description": "应检索其文档 AX 树的框架。\n如果省略，则使用根框架。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        },
        {
          "name": "getRootAXNode",
          "description": "获取根节点。\n需要之前调用过“enable()”。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "节点所在文档的框架。\n如果省略，则使用根框架。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "node",
              "$ref": "AXNode"
            }
          ]
        },
        {
          "name": "getAXNodeAndAncestors",
          "description": "获取一个节点和所有祖先直到并包括根。\n需要之前调用过“enable()”。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取的节点的标识符。",
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "要获取的后端节点的标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "要获取的节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        },
        {
          "name": "getChildAXNodes",
          "description": "通过 AXNodeId 获取特定的可访问性节点。\n需要之前调用过“enable()”。",
          "experimental": true,
          "parameters": [
            {
              "name": "id",
              "$ref": "AXNodeId"
            },
            {
              "name": "frameId",
              "description": "节点所在文档的框架。\n如果省略，则使用根框架。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        },
        {
          "name": "queryAXTree",
          "description": "查询 DOM 节点的可访问性子树以获取可访问名称和角色。\n此命令计算子树中所有节点的名称和角色，包括那些\n忽略可访问性，并返回与指定名称和角色匹配的内容。如果没有 DOM\n指定节点，或者 DOM 节点不存在，该命令返回错误。如果两者都不是\n指定`accessibleName`或`role`，它返回子树中的所有可访问性节点。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "要查询的根节点的标识符。",
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "供根查询的后端节点的标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "要查询的根节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "accessibleName",
              "description": "查找具有此计算名称的节点。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "role",
              "description": "查找具有此计算角色的节点。",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "description": "与指定属性匹配的“Accessibility.AXNode”列表，\n包括在可访问性方面被忽略的节点。",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "loadComplete",
          "description": "loadComplete 事件反映了浏览器发送给辅助程序的加载完成事件\n网页加载完成时的技术。",
          "experimental": true,
          "parameters": [
            {
              "name": "root",
              "description": "新文档根节点。",
              "$ref": "AXNode"
            }
          ]
        },
        {
          "name": "nodesUpdated",
          "description": "每当先前请求的节点更改树中时，都会发送nodesUpdated 事件。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodes",
              "description": "更新了节点数据。",
              "type": "array",
              "items": {
                "$ref": "AXNode"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Animation",
      "experimental": true,
      "dependencies": [
        "Runtime",
        "DOM"
      ],
      "types": [
        {
          "id": "Animation",
          "description": "动画实例。",
          "type": "object",
          "properties": [
            {
              "name": "id",
              "description": "`动画`的 id。",
              "type": "string"
            },
            {
              "name": "name",
              "description": "“动画”的名称。",
              "type": "string"
            },
            {
              "name": "pausedState",
              "description": "`Animation` 的内部暂停状态。",
              "type": "boolean"
            },
            {
              "name": "playState",
              "description": "`Animation` 的播放状态。",
              "type": "string"
            },
            {
              "name": "playbackRate",
              "description": "“动画”的播放速率。",
              "type": "number"
            },
            {
              "name": "startTime",
              "description": "`动画`的开始时间。\n基于时间的动画的毫秒数和\n滚动驱动动画的百分比 [0 - 100]\n（即当 viewOrScrollTimeline 存在时）。",
              "type": "number"
            },
            {
              "name": "currentTime",
              "description": "“动画”的当前时间。",
              "type": "number"
            },
            {
              "name": "type",
              "description": "动画类型“Animation”。",
              "type": "string",
              "enum": [
                "CSSTransition",
                "CSSAnimation",
                "WebAnimation"
              ]
            },
            {
              "name": "source",
              "description": "`Animation` 的源动画节点。",
              "optional": true,
              "$ref": "AnimationEffect"
            },
            {
              "name": "cssId",
              "description": "“Animation”的唯一 ID，表示触发此 CSS 的源\n动画/过渡。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "viewOrScrollTimeline",
              "description": "查看或滚动时间线",
              "optional": true,
              "$ref": "ViewOrScrollTimeline"
            }
          ]
        },
        {
          "id": "ViewOrScrollTimeline",
          "description": "时间轴实例",
          "type": "object",
          "properties": [
            {
              "name": "sourceNodeId",
              "description": "滚动容器节点",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "startOffset",
              "description": "表示时间线的起始滚动位置\n作为距滚动原点的长度偏移（以像素为单位）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "endOffset",
              "description": "代表时间线的结束滚动位置\n作为距滚动原点的长度偏移（以像素为单位）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "subjectNodeId",
              "description": "其主框可见性的元素\nscrollport 定义了时间线的进度。\n对于带有 ScrollTimeline 的动画不存在",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "axis",
              "description": "卷轴方向",
              "$ref": "DOM.ScrollOrientation"
            }
          ]
        },
        {
          "id": "AnimationEffect",
          "description": "动画效果实例",
          "type": "object",
          "properties": [
            {
              "name": "delay",
              "description": "`AnimationEffect` 的延迟。",
              "type": "number"
            },
            {
              "name": "endDelay",
              "description": "`AnimationEffect` 的结束延迟。",
              "type": "number"
            },
            {
              "name": "iterationStart",
              "description": "`AnimationEffect` 的迭代开始。",
              "type": "number"
            },
            {
              "name": "iterations",
              "description": "`AnimationEffect` 的迭代。",
              "type": "number"
            },
            {
              "name": "duration",
              "description": "`AnimationEffect` 的迭代持续时间。\n基于时间的动画的毫秒数和\n滚动驱动动画的百分比 [0 - 100]\n（即当 viewOrScrollTimeline 存在时）。",
              "type": "number"
            },
            {
              "name": "direction",
              "description": "`AnimationEffect` 的播放方向。",
              "type": "string"
            },
            {
              "name": "fill",
              "description": "`AnimationEffect` 的填充模式。",
              "type": "string"
            },
            {
              "name": "backendNodeId",
              "description": "`AnimationEffect` 的目标节点。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "keyframesRule",
              "description": "`AnimationEffect` 的关键帧。",
              "optional": true,
              "$ref": "KeyframesRule"
            },
            {
              "name": "easing",
              "description": "`AnimationEffect` 的计时函数。",
              "type": "string"
            }
          ]
        },
        {
          "id": "KeyframesRule",
          "description": "关键帧规则",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "CSS 关键帧动画的名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "keyframes",
              "description": "动画关键帧列表。",
              "type": "array",
              "items": {
                "$ref": "KeyframeStyle"
              }
            }
          ]
        },
        {
          "id": "KeyframeStyle",
          "description": "关键帧样式",
          "type": "object",
          "properties": [
            {
              "name": "offset",
              "description": "关键帧的时间偏移。",
              "type": "string"
            },
            {
              "name": "easing",
              "description": "`AnimationEffect` 的计时函数。",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用动画域通知。"
        },
        {
          "name": "enable",
          "description": "启用动画域通知。"
        },
        {
          "name": "getCurrentTime",
          "description": "返回动画的当前时间。",
          "parameters": [
            {
              "name": "id",
              "description": "动画的 ID。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "currentTime",
              "description": "页面的当前时间。",
              "type": "number"
            }
          ]
        },
        {
          "name": "getPlaybackRate",
          "description": "获取文档时间线的播放速率。",
          "returns": [
            {
              "name": "playbackRate",
              "description": "页面上动画的播放速率。",
              "type": "number"
            }
          ]
        },
        {
          "name": "releaseAnimations",
          "description": "释放一组不再被操纵的动画。",
          "parameters": [
            {
              "name": "animations",
              "description": "要查找的动画 ID 列表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "resolveAnimation",
          "description": "获取动画的远程对象。",
          "parameters": [
            {
              "name": "animationId",
              "description": "动画 ID。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "remoteObject",
              "description": "对应的远程对象。",
              "$ref": "Runtime.RemoteObject"
            }
          ]
        },
        {
          "name": "seekAnimations",
          "description": "查找每个动画中特定时间的一组动画。",
          "parameters": [
            {
              "name": "animations",
              "description": "要查找的动画 ID 列表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "currentTime",
              "description": "设置每个动画的当前时间。",
              "type": "number"
            }
          ]
        },
        {
          "name": "setPaused",
          "description": "设置一组动画的暂停状态。",
          "parameters": [
            {
              "name": "animations",
              "description": "设置暂停状态的动画。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "paused",
              "description": "要设置为的暂停状态。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setPlaybackRate",
          "description": "设置文档时间线的播放速率。",
          "parameters": [
            {
              "name": "playbackRate",
              "description": "页面动画的播放速率",
              "type": "number"
            }
          ]
        },
        {
          "name": "setTiming",
          "description": "设置动画节点的计时。",
          "parameters": [
            {
              "name": "animationId",
              "description": "动画 ID。",
              "type": "string"
            },
            {
              "name": "duration",
              "description": "动画的持续时间。",
              "type": "number"
            },
            {
              "name": "delay",
              "description": "动画延迟。",
              "type": "number"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "animationCanceled",
          "description": "动画被取消时的事件。",
          "parameters": [
            {
              "name": "id",
              "description": "已取消的动画的 ID。",
              "type": "string"
            }
          ]
        },
        {
          "name": "animationCreated",
          "description": "已创建的每个动画的事件。",
          "parameters": [
            {
              "name": "id",
              "description": "已创建动画的 ID。",
              "type": "string"
            }
          ]
        },
        {
          "name": "animationStarted",
          "description": "已开始的动画事件。",
          "parameters": [
            {
              "name": "animation",
              "description": "已开始的动画。",
              "$ref": "Animation"
            }
          ]
        },
        {
          "name": "animationUpdated",
          "description": "已更新的动画事件。",
          "parameters": [
            {
              "name": "animation",
              "description": "动画已更新。",
              "$ref": "Animation"
            }
          ]
        }
      ]
    },
    {
      "domain": "Audits",
      "description": "审核域允许调查页面违规和可能的改进。",
      "experimental": true,
      "dependencies": [
        "Network"
      ],
      "types": [
        {
          "id": "AffectedCookie",
          "description": "有关受检查器问题影响的 cookie 的信息。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "以下三个属性唯一标识一个cookie",
              "type": "string"
            },
            {
              "name": "path",
              "type": "string"
            },
            {
              "name": "domain",
              "type": "string"
            }
          ]
        },
        {
          "id": "AffectedRequest",
          "description": "有关受检查器问题影响的请求的信息。",
          "type": "object",
          "properties": [
            {
              "name": "requestId",
              "description": "唯一的请求 ID。",
              "optional": true,
              "$ref": "Network.RequestId"
            },
            {
              "name": "url",
              "type": "string"
            }
          ]
        },
        {
          "id": "AffectedFrame",
          "description": "有关受检查器问题影响的框架的信息。",
          "type": "object",
          "properties": [
            {
              "name": "frameId",
              "$ref": "Page.FrameId"
            }
          ]
        },
        {
          "id": "CookieExclusionReason",
          "type": "string",
          "enum": [
            "ExcludeSameSiteUnspecifiedTreatedAsLax",
            "ExcludeSameSiteNoneInsecure",
            "ExcludeSameSiteLax",
            "ExcludeSameSiteStrict",
            "ExcludeInvalidSameParty",
            "ExcludeSamePartyCrossPartyContext",
            "ExcludeDomainNonASCII",
            "ExcludeThirdPartyCookieBlockedInFirstPartySet",
            "ExcludeThirdPartyPhaseout",
            "ExcludePortMismatch",
            "ExcludeSchemeMismatch"
          ]
        },
        {
          "id": "CookieWarningReason",
          "type": "string",
          "enum": [
            "WarnSameSiteUnspecifiedCrossSiteContext",
            "WarnSameSiteNoneInsecure",
            "WarnSameSiteUnspecifiedLaxAllowUnsafe",
            "WarnSameSiteStrictLaxDowngradeStrict",
            "WarnSameSiteStrictCrossDowngradeStrict",
            "WarnSameSiteStrictCrossDowngradeLax",
            "WarnSameSiteLaxCrossDowngradeStrict",
            "WarnSameSiteLaxCrossDowngradeLax",
            "WarnAttributeValueExceedsMaxSize",
            "WarnDomainNonASCII",
            "WarnThirdPartyPhaseout",
            "WarnCrossSiteRedirectDowngradeChangesInclusion",
            "WarnDeprecationTrialMetadata",
            "WarnThirdPartyCookieHeuristic"
          ]
        },
        {
          "id": "CookieOperation",
          "type": "string",
          "enum": [
            "SetCookie",
            "ReadCookie"
          ]
        },
        {
          "id": "InsightType",
          "description": "代表 cookie 问题所属的洞察类别。",
          "type": "string",
          "enum": [
            "GitHubResource",
            "GracePeriod",
            "Heuristics"
          ]
        },
        {
          "id": "CookieIssueInsight",
          "description": "有关 cookie 问题的建议解决方案的信息。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "$ref": "InsightType"
            },
            {
              "name": "tableEntryUrl",
              "description": "链接到第三方 cookie 迁移准备列表中的表条目。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "CookieIssueDetails",
          "description": "这些信息目前是必要的，因为前端有一个困难\n寻找特定 cookie 的时间。这样，我们就可以传达具体的错误\n没有 cookie 的信息。",
          "type": "object",
          "properties": [
            {
              "name": "cookie",
              "description": "如果 AffectedCookie 未设置，则 rawCookieLine 包含原始\nSet-Cookie 标头字符串。这暗示了一个问题，即\ncookie 行在语法或语义上在某种程度上是错误的\n无法创建有效的 cookie。",
              "optional": true,
              "$ref": "AffectedCookie"
            },
            {
              "name": "rawCookieLine",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cookieWarningReasons",
              "type": "array",
              "items": {
                "$ref": "CookieWarningReason"
              }
            },
            {
              "name": "cookieExclusionReasons",
              "type": "array",
              "items": {
                "$ref": "CookieExclusionReason"
              }
            },
            {
              "name": "operation",
              "description": "可以选择标识 site-for-cookies 和 cookie url，其中\n可以被前端用作附加上下文。",
              "$ref": "CookieOperation"
            },
            {
              "name": "siteForCookies",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cookieUrl",
              "optional": true,
              "type": "string"
            },
            {
              "name": "request",
              "optional": true,
              "$ref": "AffectedRequest"
            },
            {
              "name": "insight",
              "description": "问题的推荐解决方案。",
              "optional": true,
              "$ref": "CookieIssueInsight"
            }
          ]
        },
        {
          "id": "MixedContentResolutionStatus",
          "type": "string",
          "enum": [
            "MixedContentBlocked",
            "MixedContentAutomaticallyUpgraded",
            "MixedContentWarning"
          ]
        },
        {
          "id": "MixedContentResourceType",
          "type": "string",
          "enum": [
            "AttributionSrc",
            "Audio",
            "Beacon",
            "CSPReport",
            "Download",
            "EventSource",
            "Favicon",
            "Font",
            "Form",
            "Frame",
            "Image",
            "Import",
            "JSON",
            "Manifest",
            "Ping",
            "PluginData",
            "PluginResource",
            "Prefetch",
            "Resource",
            "Script",
            "ServiceWorker",
            "SharedWorker",
            "SpeculationRules",
            "Stylesheet",
            "Track",
            "Video",
            "Worker",
            "XMLHttpRequest",
            "XSLT"
          ]
        },
        {
          "id": "MixedContentIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "resourceType",
              "description": "导致混合内容问题的资源类型（css、js、iframe、\n形式，...）。标记为可选，因为它映射到 from\n眨眼::mojom::RequestContextType，将被替换\n通过网络::mojom::RequestDestination",
              "optional": true,
              "$ref": "MixedContentResourceType"
            },
            {
              "name": "resolutionStatus",
              "description": "解决混合内容问题的方式。",
              "$ref": "MixedContentResolutionStatus"
            },
            {
              "name": "insecureURL",
              "description": "不安全的 http url 导致混合内容问题。",
              "type": "string"
            },
            {
              "name": "mainResourceURL",
              "description": "负责调用不安全 url 的 url。",
              "type": "string"
            },
            {
              "name": "request",
              "description": "混合内容请求。\n并不总是存在（例如，对于不安全的表单提交 URL）。",
              "optional": true,
              "$ref": "AffectedRequest"
            },
            {
              "name": "frame",
              "description": "可选，因为并非每个混合内容问题都必然与框架相关联。",
              "optional": true,
              "$ref": "AffectedFrame"
            }
          ]
        },
        {
          "id": "BlockedByResponseReason",
          "description": "指示响应被阻止的原因的枚举。这些原因是\n网络错误 BLOCKED_BY_RESPONSE 的改进。",
          "type": "string",
          "enum": [
            "CoepFrameResourceNeedsCoepHeader",
            "CoopSandboxedIFrameCannotNavigateToCoopPage",
            "CorpNotSameOrigin",
            "CorpNotSameOriginAfterDefaultedToSameOriginByCoep",
            "CorpNotSameOriginAfterDefaultedToSameOriginByDip",
            "CorpNotSameOriginAfterDefaultedToSameOriginByCoepAndDip",
            "CorpNotSameSite",
            "SRIMessageSignatureMismatch"
          ]
        },
        {
          "id": "BlockedByResponseIssueDetails",
          "description": "已使用 BLOCKED_BY_RESPONSE 阻止的请求的详细信息\n代码。目前仅用于 COEP/COOP，但可能会扩展至包括\n将来会出现一些 CSP 错误。",
          "type": "object",
          "properties": [
            {
              "name": "request",
              "$ref": "AffectedRequest"
            },
            {
              "name": "parentFrame",
              "optional": true,
              "$ref": "AffectedFrame"
            },
            {
              "name": "blockedFrame",
              "optional": true,
              "$ref": "AffectedFrame"
            },
            {
              "name": "reason",
              "$ref": "BlockedByResponseReason"
            }
          ]
        },
        {
          "id": "HeavyAdResolutionStatus",
          "type": "string",
          "enum": [
            "HeavyAdBlocked",
            "HeavyAdWarning"
          ]
        },
        {
          "id": "HeavyAdReason",
          "type": "string",
          "enum": [
            "NetworkTotalLimit",
            "CpuTotalLimit",
            "CpuPeakLimit"
          ]
        },
        {
          "id": "HeavyAdIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "resolution",
              "description": "解决状态，阻止内容或警告。",
              "$ref": "HeavyAdResolutionStatus"
            },
            {
              "name": "reason",
              "description": "广告被阻止的原因、总网络或 cpu 或峰值 cpu。",
              "$ref": "HeavyAdReason"
            },
            {
              "name": "frame",
              "description": "被挡住的框架。",
              "$ref": "AffectedFrame"
            }
          ]
        },
        {
          "id": "ContentSecurityPolicyViolationType",
          "type": "string",
          "enum": [
            "kInlineViolation",
            "kEvalViolation",
            "kURLViolation",
            "kSRIViolation",
            "kTrustedTypesSinkViolation",
            "kTrustedTypesPolicyViolation",
            "kWasmEvalViolation"
          ]
        },
        {
          "id": "SourceCodeLocation",
          "type": "object",
          "properties": [
            {
              "name": "scriptId",
              "optional": true,
              "$ref": "Runtime.ScriptId"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "lineNumber",
              "type": "integer"
            },
            {
              "name": "columnNumber",
              "type": "integer"
            }
          ]
        },
        {
          "id": "ContentSecurityPolicyIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "blockedURL",
              "description": "该 URL 未包含在允许的来源中。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "violatedDirective",
              "description": "违反特定指令，导致 CSP 问题。",
              "type": "string"
            },
            {
              "name": "isReportOnly",
              "type": "boolean"
            },
            {
              "name": "contentSecurityPolicyViolationType",
              "$ref": "ContentSecurityPolicyViolationType"
            },
            {
              "name": "frameAncestor",
              "optional": true,
              "$ref": "AffectedFrame"
            },
            {
              "name": "sourceCodeLocation",
              "optional": true,
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "violatingNodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        },
        {
          "id": "SharedArrayBufferIssueType",
          "type": "string",
          "enum": [
            "TransferIssue",
            "CreationIssue"
          ]
        },
        {
          "id": "SharedArrayBufferIssueDetails",
          "description": "因 SAB 实例化而引起的问题的详细信息，或\n转移到非跨源隔离的上下文。",
          "type": "object",
          "properties": [
            {
              "name": "sourceCodeLocation",
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "isWarning",
              "type": "boolean"
            },
            {
              "name": "type",
              "$ref": "SharedArrayBufferIssueType"
            }
          ]
        },
        {
          "id": "LowTextContrastIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "violatingNodeId",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "violatingNodeSelector",
              "type": "string"
            },
            {
              "name": "contrastRatio",
              "type": "number"
            },
            {
              "name": "thresholdAA",
              "type": "number"
            },
            {
              "name": "thresholdAAA",
              "type": "number"
            },
            {
              "name": "fontSize",
              "type": "string"
            },
            {
              "name": "fontWeight",
              "type": "string"
            }
          ]
        },
        {
          "id": "CorsIssueDetails",
          "description": "CORS 相关问题的详细信息，例如相关的警告或错误\nCORS RFC1918 强制执行。",
          "type": "object",
          "properties": [
            {
              "name": "corsErrorStatus",
              "$ref": "Network.CorsErrorStatus"
            },
            {
              "name": "isWarning",
              "type": "boolean"
            },
            {
              "name": "request",
              "$ref": "AffectedRequest"
            },
            {
              "name": "location",
              "optional": true,
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "initiatorOrigin",
              "optional": true,
              "type": "string"
            },
            {
              "name": "resourceIPAddressSpace",
              "optional": true,
              "$ref": "Network.IPAddressSpace"
            },
            {
              "name": "clientSecurityState",
              "optional": true,
              "$ref": "Network.ClientSecurityState"
            }
          ]
        },
        {
          "id": "AttributionReportingIssueType",
          "type": "string",
          "enum": [
            "PermissionPolicyDisabled",
            "UntrustworthyReportingOrigin",
            "InsecureContext",
            "InvalidHeader",
            "InvalidRegisterTriggerHeader",
            "SourceAndTriggerHeaders",
            "SourceIgnored",
            "TriggerIgnored",
            "OsSourceIgnored",
            "OsTriggerIgnored",
            "InvalidRegisterOsSourceHeader",
            "InvalidRegisterOsTriggerHeader",
            "WebAndOsHeaders",
            "NoWebOrOsSupport",
            "NavigationRegistrationWithoutTransientUserActivation",
            "InvalidInfoHeader",
            "NoRegisterSourceHeader",
            "NoRegisterTriggerHeader",
            "NoRegisterOsSourceHeader",
            "NoRegisterOsTriggerHeader",
            "NavigationRegistrationUniqueScopeAlreadySet"
          ]
        },
        {
          "id": "SharedDictionaryError",
          "type": "string",
          "enum": [
            "UseErrorCrossOriginNoCorsRequest",
            "UseErrorDictionaryLoadFailure",
            "UseErrorMatchingDictionaryNotUsed",
            "UseErrorUnexpectedContentDictionaryHeader",
            "WriteErrorCossOriginNoCorsRequest",
            "WriteErrorDisallowedBySettings",
            "WriteErrorExpiredResponse",
            "WriteErrorFeatureDisabled",
            "WriteErrorInsufficientResources",
            "WriteErrorInvalidMatchField",
            "WriteErrorInvalidStructuredHeader",
            "WriteErrorInvalidTTLField",
            "WriteErrorNavigationRequest",
            "WriteErrorNoMatchField",
            "WriteErrorNonIntegerTTLField",
            "WriteErrorNonListMatchDestField",
            "WriteErrorNonSecureContext",
            "WriteErrorNonStringIdField",
            "WriteErrorNonStringInMatchDestList",
            "WriteErrorNonStringMatchField",
            "WriteErrorNonTokenTypeField",
            "WriteErrorRequestAborted",
            "WriteErrorShuttingDown",
            "WriteErrorTooLongIdField",
            "WriteErrorUnsupportedType"
          ]
        },
        {
          "id": "SRIMessageSignatureError",
          "type": "string",
          "enum": [
            "MissingSignatureHeader",
            "MissingSignatureInputHeader",
            "InvalidSignatureHeader",
            "InvalidSignatureInputHeader",
            "SignatureHeaderValueIsNotByteSequence",
            "SignatureHeaderValueIsParameterized",
            "SignatureHeaderValueIsIncorrectLength",
            "SignatureInputHeaderMissingLabel",
            "SignatureInputHeaderValueNotInnerList",
            "SignatureInputHeaderValueMissingComponents",
            "SignatureInputHeaderInvalidComponentType",
            "SignatureInputHeaderInvalidComponentName",
            "SignatureInputHeaderInvalidHeaderComponentParameter",
            "SignatureInputHeaderInvalidDerivedComponentParameter",
            "SignatureInputHeaderKeyIdLength",
            "SignatureInputHeaderInvalidParameter",
            "SignatureInputHeaderMissingRequiredParameters",
            "ValidationFailedSignatureExpired",
            "ValidationFailedInvalidLength",
            "ValidationFailedSignatureMismatch",
            "ValidationFailedIntegrityMismatch"
          ]
        },
        {
          "id": "UnencodedDigestError",
          "type": "string",
          "enum": [
            "MalformedDictionary",
            "UnknownAlgorithm",
            "IncorrectDigestType",
            "IncorrectDigestLength"
          ]
        },
        {
          "id": "AttributionReportingIssueDetails",
          "description": "有关“归因报告 API”使用问题的详细信息。\n解释器：https://github.com/WICG/attribution-reporting-api",
          "type": "object",
          "properties": [
            {
              "name": "violationType",
              "$ref": "AttributionReportingIssueType"
            },
            {
              "name": "request",
              "optional": true,
              "$ref": "AffectedRequest"
            },
            {
              "name": "violatingNodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "invalidParameter",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "QuirksModeIssueDetails",
          "description": "有关 Quirks 模式中文档的问题的详细信息\n或影响页面布局的有限怪癖模式。",
          "type": "object",
          "properties": [
            {
              "name": "isLimitedQuirksMode",
              "description": "如果为 false，则意味着文档的模式是“怪异”\n而不是“有限的怪癖”。",
              "type": "boolean"
            },
            {
              "name": "documentNodeId",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "frameId",
              "$ref": "Page.FrameId"
            },
            {
              "name": "loaderId",
              "$ref": "Network.LoaderId"
            }
          ]
        },
        {
          "id": "NavigatorUserAgentIssueDetails",
          "deprecated": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "location",
              "optional": true,
              "$ref": "SourceCodeLocation"
            }
          ]
        },
        {
          "id": "SharedDictionaryIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "sharedDictionaryError",
              "$ref": "SharedDictionaryError"
            },
            {
              "name": "request",
              "$ref": "AffectedRequest"
            }
          ]
        },
        {
          "id": "SRIMessageSignatureIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "error",
              "$ref": "SRIMessageSignatureError"
            },
            {
              "name": "signatureBase",
              "type": "string"
            },
            {
              "name": "integrityAssertions",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "request",
              "$ref": "AffectedRequest"
            }
          ]
        },
        {
          "id": "UnencodedDigestIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "error",
              "$ref": "UnencodedDigestError"
            },
            {
              "name": "request",
              "$ref": "AffectedRequest"
            }
          ]
        },
        {
          "id": "GenericIssueErrorType",
          "type": "string",
          "enum": [
            "FormLabelForNameError",
            "FormDuplicateIdForInputError",
            "FormInputWithNoLabelError",
            "FormAutocompleteAttributeEmptyError",
            "FormEmptyIdAndNameAttributesForInputError",
            "FormAriaLabelledByToNonExistingId",
            "FormInputAssignedAutocompleteValueToIdOrNameAttributeError",
            "FormLabelHasNeitherForNorNestedInput",
            "FormLabelForMatchesNonExistingIdError",
            "FormInputHasWrongButWellIntendedAutocompleteValueError",
            "ResponseWasBlockedByORB"
          ]
        },
        {
          "id": "GenericIssueDetails",
          "description": "根据具体的错误类型，设置不同的属性。",
          "type": "object",
          "properties": [
            {
              "name": "errorType",
              "description": "具有相同错误类型的问题会聚合在前端。",
              "$ref": "GenericIssueErrorType"
            },
            {
              "name": "frameId",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "violatingNodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "violatingNodeAttribute",
              "optional": true,
              "type": "string"
            },
            {
              "name": "request",
              "optional": true,
              "$ref": "AffectedRequest"
            }
          ]
        },
        {
          "id": "DeprecationIssueDetails",
          "description": "此问题跟踪打印弃用消息所需的信息。\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/frame/third_party/blink/renderer/core/frame/deprecation/README.md",
          "type": "object",
          "properties": [
            {
              "name": "affectedFrame",
              "optional": true,
              "$ref": "AffectedFrame"
            },
            {
              "name": "sourceCodeLocation",
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "type",
              "description": "Third_party/blink/renderer/core/frame/deprecation/deprecation.json5 中的弃用名称之一",
              "type": "string"
            }
          ]
        },
        {
          "id": "BounceTrackingIssueDetails",
          "description": "此问题警告已完成导航的重定向链中的网站\n可能会被标记为跟踪器，如果不这样做，则其状态会被清除\n接收用户交互。请注意，在此上下文中，“网站”是指 eTLD+1。\n例如，如果 URL `https://example.test:80/bounce` 位于\n重定向链，报告的站点将是“example.test”。",
          "type": "object",
          "properties": [
            {
              "name": "trackingSites",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "CookieDeprecationMetadataIssueDetails",
          "description": "此问题警告正在访问 cookie 的第三方网站\n当前页面，并且由于拥有全局元数据授权而被允许。\n请注意，在此上下文中，“网站”是指 eTLD+1。例如，如果 URL\n该网站报告称，“https://example.test:80/web_page”正在访问 cookie\n将是“example.test”。",
          "type": "object",
          "properties": [
            {
              "name": "allowedSites",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "optOutPercentage",
              "type": "number"
            },
            {
              "name": "isOptOutTopLevel",
              "type": "boolean"
            },
            {
              "name": "operation",
              "$ref": "CookieOperation"
            }
          ]
        },
        {
          "id": "ClientHintIssueReason",
          "type": "string",
          "enum": [
            "MetaTagAllowListInvalidOrigin",
            "MetaTagModifiedHTML"
          ]
        },
        {
          "id": "FederatedAuthRequestIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "federatedAuthRequestIssueReason",
              "$ref": "FederatedAuthRequestIssueReason"
            }
          ]
        },
        {
          "id": "FederatedAuthRequestIssueReason",
          "description": "表示联合身份验证失败时的失败原因。\n应与 RequestIdTokenStatus 一起更新\nThird_party/blink/public/mojom/devtools/inspector_issue.mojom 包含\n除了成功之外的所有情况。",
          "type": "string",
          "enum": [
            "ShouldEmbargo",
            "TooManyRequests",
            "WellKnownHttpNotFound",
            "WellKnownNoResponse",
            "WellKnownInvalidResponse",
            "WellKnownListEmpty",
            "WellKnownInvalidContentType",
            "ConfigNotInWellKnown",
            "WellKnownTooBig",
            "ConfigHttpNotFound",
            "ConfigNoResponse",
            "ConfigInvalidResponse",
            "ConfigInvalidContentType",
            "ClientMetadataHttpNotFound",
            "ClientMetadataNoResponse",
            "ClientMetadataInvalidResponse",
            "ClientMetadataInvalidContentType",
            "IdpNotPotentiallyTrustworthy",
            "DisabledInSettings",
            "DisabledInFlags",
            "ErrorFetchingSignin",
            "InvalidSigninResponse",
            "AccountsHttpNotFound",
            "AccountsNoResponse",
            "AccountsInvalidResponse",
            "AccountsListEmpty",
            "AccountsInvalidContentType",
            "IdTokenHttpNotFound",
            "IdTokenNoResponse",
            "IdTokenInvalidResponse",
            "IdTokenIdpErrorResponse",
            "IdTokenCrossSiteIdpErrorResponse",
            "IdTokenInvalidRequest",
            "IdTokenInvalidContentType",
            "ErrorIdToken",
            "Canceled",
            "RpPageNotVisible",
            "SilentMediationFailure",
            "ThirdPartyCookiesBlocked",
            "NotSignedInWithIdp",
            "MissingTransientUserActivation",
            "ReplacedByActiveMode",
            "InvalidFieldsSpecified",
            "RelyingPartyOriginIsOpaque",
            "TypeNotMatching",
            "UiDismissedNoEmbargo",
            "CorsError",
            "SuppressedBySegmentationPlatform"
          ]
        },
        {
          "id": "FederatedAuthUserInfoRequestIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "federatedAuthUserInfoRequestIssueReason",
              "$ref": "FederatedAuthUserInfoRequestIssueReason"
            }
          ]
        },
        {
          "id": "FederatedAuthUserInfoRequestIssueReason",
          "description": "表示 getUserInfo() 调用失败时的失败原因。\n应与 FederatedAuthUserInfoRequestResult 一起更新\nThird_party/blink/public/mojom/devtools/inspector_issue.mojom。",
          "type": "string",
          "enum": [
            "NotSameOrigin",
            "NotIframe",
            "NotPotentiallyTrustworthy",
            "NoApiPermission",
            "NotSignedInWithIdp",
            "NoAccountSharingPermission",
            "InvalidConfigOrWellKnown",
            "InvalidAccountsResponse",
            "NoReturningUserFromFetchedAccounts"
          ]
        },
        {
          "id": "ClientHintIssueDetails",
          "description": "此问题跟踪客户端提示相关问题。它用于弃用旧的\n功能，鼓励使用新功能，并提供一般指导。",
          "type": "object",
          "properties": [
            {
              "name": "sourceCodeLocation",
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "clientHintIssueReason",
              "$ref": "ClientHintIssueReason"
            }
          ]
        },
        {
          "id": "FailedRequestInfo",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "加载失败的 URL。",
              "type": "string"
            },
            {
              "name": "failureMessage",
              "description": "失败请求的失败消息。",
              "type": "string"
            },
            {
              "name": "requestId",
              "optional": true,
              "$ref": "Network.RequestId"
            }
          ]
        },
        {
          "id": "PartitioningBlobURLInfo",
          "type": "string",
          "enum": [
            "BlockedCrossPartitionFetching",
            "EnforceNoopenerForNavigation"
          ]
        },
        {
          "id": "PartitioningBlobURLIssueDetails",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "加载失败的 BlobURL。",
              "type": "string"
            },
            {
              "name": "partitioningBlobURLInfo",
              "description": "有关分区 Blob URL 问题的其他信息。",
              "$ref": "PartitioningBlobURLInfo"
            }
          ]
        },
        {
          "id": "ElementAccessibilityIssueReason",
          "type": "string",
          "enum": [
            "DisallowedSelectChild",
            "DisallowedOptGroupChild",
            "NonPhrasingContentOptionChild",
            "InteractiveContentOptionChild",
            "InteractiveContentLegendChild",
            "InteractiveContentSummaryDescendant"
          ]
        },
        {
          "id": "ElementAccessibilityIssueDetails",
          "description": "此问题警告选择或摘要元素内容模型中存在错误。",
          "type": "object",
          "properties": [
            {
              "name": "nodeId",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "elementAccessibilityIssueReason",
              "$ref": "ElementAccessibilityIssueReason"
            },
            {
              "name": "hasDisallowedAttributes",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "StyleSheetLoadingIssueReason",
          "type": "string",
          "enum": [
            "LateImportRule",
            "RequestFailed"
          ]
        },
        {
          "id": "StylesheetLoadingIssueDetails",
          "description": "当无法加载引用的样式表时，此问题会发出警告。",
          "type": "object",
          "properties": [
            {
              "name": "sourceCodeLocation",
              "description": "引用失败样式表的源代码位置。",
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "styleSheetLoadingIssueReason",
              "description": "样式表无法加载的原因。",
              "$ref": "StyleSheetLoadingIssueReason"
            },
            {
              "name": "failedRequestInfo",
              "description": "包含因请求而失败时的附加信息。",
              "optional": true,
              "$ref": "FailedRequestInfo"
            }
          ]
        },
        {
          "id": "PropertyRuleIssueReason",
          "type": "string",
          "enum": [
            "InvalidSyntax",
            "InvalidInitialValue",
            "InvalidInherits",
            "InvalidName"
          ]
        },
        {
          "id": "PropertyRuleIssueDetails",
          "description": "此问题警告财产规则中的错误会导致财产\n注册被忽略。",
          "type": "object",
          "properties": [
            {
              "name": "sourceCodeLocation",
              "description": "属性规则的源代码位置。",
              "$ref": "SourceCodeLocation"
            },
            {
              "name": "propertyRuleIssueReason",
              "description": "放弃财产规则的原因。",
              "$ref": "PropertyRuleIssueReason"
            },
            {
              "name": "propertyValue",
              "description": "解析失败的属性规则属性的值",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "UserReidentificationIssueType",
          "type": "string",
          "enum": [
            "BlockedFrameNavigation",
            "BlockedSubresource",
            "NoisedCanvasReadback"
          ]
        },
        {
          "id": "UserReidentificationIssueDetails",
          "description": "此问题警告有关可能被视为滥用的 API 的使用\n重新识别用户。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "$ref": "UserReidentificationIssueType"
            },
            {
              "name": "request",
              "description": "适用于 BlockedFrameNavigation 和 BlockedSubresource 问题类型。",
              "optional": true,
              "$ref": "AffectedRequest"
            },
            {
              "name": "sourceCodeLocation",
              "description": "适用于 NoishedCanvasReadback 问题类型。",
              "optional": true,
              "$ref": "SourceCodeLocation"
            }
          ]
        },
        {
          "id": "InspectorIssueCode",
          "description": "问题类型的唯一标识符。每种类型都可以使用其中一种\nInspectorIssueDetails 中的可选字段可传达更具体的信息\n有关该问题类型的信息。",
          "type": "string",
          "enum": [
            "CookieIssue",
            "MixedContentIssue",
            "BlockedByResponseIssue",
            "HeavyAdIssue",
            "ContentSecurityPolicyIssue",
            "SharedArrayBufferIssue",
            "LowTextContrastIssue",
            "CorsIssue",
            "AttributionReportingIssue",
            "QuirksModeIssue",
            "PartitioningBlobURLIssue",
            "NavigatorUserAgentIssue",
            "GenericIssue",
            "DeprecationIssue",
            "ClientHintIssue",
            "FederatedAuthRequestIssue",
            "BounceTrackingIssue",
            "CookieDeprecationMetadataIssue",
            "StylesheetLoadingIssue",
            "FederatedAuthUserInfoRequestIssue",
            "PropertyRuleIssue",
            "SharedDictionaryIssue",
            "ElementAccessibilityIssue",
            "SRIMessageSignatureIssue",
            "UnencodedDigestIssue",
            "UserReidentificationIssue"
          ]
        },
        {
          "id": "InspectorIssueDetails",
          "description": "该结构包含带有附加信息的可选字段列表\n具体到问题的类型。添加新问题代码时，还请\n向此类型添加一个新的可选字段。",
          "type": "object",
          "properties": [
            {
              "name": "cookieIssueDetails",
              "optional": true,
              "$ref": "CookieIssueDetails"
            },
            {
              "name": "mixedContentIssueDetails",
              "optional": true,
              "$ref": "MixedContentIssueDetails"
            },
            {
              "name": "blockedByResponseIssueDetails",
              "optional": true,
              "$ref": "BlockedByResponseIssueDetails"
            },
            {
              "name": "heavyAdIssueDetails",
              "optional": true,
              "$ref": "HeavyAdIssueDetails"
            },
            {
              "name": "contentSecurityPolicyIssueDetails",
              "optional": true,
              "$ref": "ContentSecurityPolicyIssueDetails"
            },
            {
              "name": "sharedArrayBufferIssueDetails",
              "optional": true,
              "$ref": "SharedArrayBufferIssueDetails"
            },
            {
              "name": "lowTextContrastIssueDetails",
              "optional": true,
              "$ref": "LowTextContrastIssueDetails"
            },
            {
              "name": "corsIssueDetails",
              "optional": true,
              "$ref": "CorsIssueDetails"
            },
            {
              "name": "attributionReportingIssueDetails",
              "optional": true,
              "$ref": "AttributionReportingIssueDetails"
            },
            {
              "name": "quirksModeIssueDetails",
              "optional": true,
              "$ref": "QuirksModeIssueDetails"
            },
            {
              "name": "partitioningBlobURLIssueDetails",
              "optional": true,
              "$ref": "PartitioningBlobURLIssueDetails"
            },
            {
              "name": "navigatorUserAgentIssueDetails",
              "deprecated": true,
              "optional": true,
              "$ref": "NavigatorUserAgentIssueDetails"
            },
            {
              "name": "genericIssueDetails",
              "optional": true,
              "$ref": "GenericIssueDetails"
            },
            {
              "name": "deprecationIssueDetails",
              "optional": true,
              "$ref": "DeprecationIssueDetails"
            },
            {
              "name": "clientHintIssueDetails",
              "optional": true,
              "$ref": "ClientHintIssueDetails"
            },
            {
              "name": "federatedAuthRequestIssueDetails",
              "optional": true,
              "$ref": "FederatedAuthRequestIssueDetails"
            },
            {
              "name": "bounceTrackingIssueDetails",
              "optional": true,
              "$ref": "BounceTrackingIssueDetails"
            },
            {
              "name": "cookieDeprecationMetadataIssueDetails",
              "optional": true,
              "$ref": "CookieDeprecationMetadataIssueDetails"
            },
            {
              "name": "stylesheetLoadingIssueDetails",
              "optional": true,
              "$ref": "StylesheetLoadingIssueDetails"
            },
            {
              "name": "propertyRuleIssueDetails",
              "optional": true,
              "$ref": "PropertyRuleIssueDetails"
            },
            {
              "name": "federatedAuthUserInfoRequestIssueDetails",
              "optional": true,
              "$ref": "FederatedAuthUserInfoRequestIssueDetails"
            },
            {
              "name": "sharedDictionaryIssueDetails",
              "optional": true,
              "$ref": "SharedDictionaryIssueDetails"
            },
            {
              "name": "elementAccessibilityIssueDetails",
              "optional": true,
              "$ref": "ElementAccessibilityIssueDetails"
            },
            {
              "name": "sriMessageSignatureIssueDetails",
              "optional": true,
              "$ref": "SRIMessageSignatureIssueDetails"
            },
            {
              "name": "unencodedDigestIssueDetails",
              "optional": true,
              "$ref": "UnencodedDigestIssueDetails"
            },
            {
              "name": "userReidentificationIssueDetails",
              "optional": true,
              "$ref": "UserReidentificationIssueDetails"
            }
          ]
        },
        {
          "id": "IssueId",
          "description": "DevTools 检查器问题的唯一 ID。允许其他实体（例如\n异常、CDP 消息、控制台消息等）来引用问题。",
          "type": "string"
        },
        {
          "id": "InspectorIssue",
          "description": "从后端报告的检查员问题。",
          "type": "object",
          "properties": [
            {
              "name": "code",
              "$ref": "InspectorIssueCode"
            },
            {
              "name": "details",
              "$ref": "InspectorIssueDetails"
            },
            {
              "name": "issueId",
              "description": "此问题的唯一 ID。如果没有其他实体（例如\n异常、CDP 消息等）正在引用此问题。",
              "optional": true,
              "$ref": "IssueId"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getEncodedResponse",
          "description": "如果使用指定的设置重新编码，则返回响应正文和大小。仅\n适用于图像。",
          "parameters": [
            {
              "name": "requestId",
              "description": "要获取内容的网络请求的标识符。",
              "$ref": "Network.RequestId"
            },
            {
              "name": "encoding",
              "description": "要使用的编码。",
              "type": "string",
              "enum": [
                "webp",
                "jpeg",
                "png"
              ]
            },
            {
              "name": "quality",
              "description": "编码质量 (0-1)。 （默认为 1）",
              "optional": true,
              "type": "number"
            },
            {
              "name": "sizeOnly",
              "description": "是否只返回尺寸信息（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "body",
              "description": "编码后的正文为 Base64 字符串。如果 sizeOnly 为 true，则省略。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "originalSize",
              "description": "重新编码前的大小。",
              "type": "integer"
            },
            {
              "name": "encodedSize",
              "description": "重新编码后的大小。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用问题域，防止向客户端报告进一步的问题。"
        },
        {
          "name": "enable",
          "description": "启用问题域，将目前收集到的问题通过以下方式发送给客户端\n`issueAdded` 事件。"
        },
        {
          "name": "checkContrast",
          "description": "对目标页面运行对比度检查。报告发现的问题\n使用 Audits.issueAdded 事件。",
          "parameters": [
            {
              "name": "reportAAA",
              "description": "是否报告WCAG AAA级问题。默认为 false。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "checkFormsIssues",
          "description": "对目标页面运行表单问题检查。报告发现的问题\n使用 Audits.issueAdded 事件。",
          "returns": [
            {
              "name": "formIssues",
              "type": "array",
              "items": {
                "$ref": "GenericIssueDetails"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "issueAdded",
          "parameters": [
            {
              "name": "issue",
              "$ref": "InspectorIssue"
            }
          ]
        }
      ]
    },
    {
      "domain": "Autofill",
      "description": "定义自动填充的命令和事件。",
      "experimental": true,
      "types": [
        {
          "id": "CreditCard",
          "type": "object",
          "properties": [
            {
              "name": "number",
              "description": "16 位信用卡号。",
              "type": "string"
            },
            {
              "name": "name",
              "description": "信用卡持有人的姓名。",
              "type": "string"
            },
            {
              "name": "expiryMonth",
              "description": "2 位数的到期月份。",
              "type": "string"
            },
            {
              "name": "expiryYear",
              "description": "4 位数的到期年份。",
              "type": "string"
            },
            {
              "name": "cvc",
              "description": "3 位卡验证码。",
              "type": "string"
            }
          ]
        },
        {
          "id": "AddressField",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "地址字段名称，例如 GIVEN_NAME。\n支持的字段名称的完整列表：\nhttps://source.chromium.org/chromium/chromium/src/+/main:components/autofill/core/browser/field_types.cc;l=38",
              "type": "string"
            },
            {
              "name": "value",
              "description": "地址字段值，例如 Jon Doe。",
              "type": "string"
            }
          ]
        },
        {
          "id": "AddressFields",
          "description": "地址字段列表。",
          "type": "object",
          "properties": [
            {
              "name": "fields",
              "type": "array",
              "items": {
                "$ref": "AddressField"
              }
            }
          ]
        },
        {
          "id": "Address",
          "type": "object",
          "properties": [
            {
              "name": "fields",
              "description": "定义地址的字段和值。",
              "type": "array",
              "items": {
                "$ref": "AddressField"
              }
            }
          ]
        },
        {
          "id": "AddressUI",
          "description": "定义地址的显示方式，如 chrome://settings/addresses 中。\n地址 UI 是一个二维数组，每个内部数组都是一个“地址信息行”，并且在 UI 表面中渲染时应如此显示。\n以下地址UI为例：\n[[{名称：“GIVE_NAME”，值：“乔恩”}，{名称：“FAMILY_NAME”，值：“Doe”}]，[{名称：“CITY”，值：“慕尼黑”}，{名称：“ZIP”，值：“81456”}]]\n应该允许接收者渲染：\n乔恩·多伊\n慕尼黑 81456",
          "type": "object",
          "properties": [
            {
              "name": "addressFields",
              "description": "包含地址配置文件中值的表示形式的二维数组。",
              "type": "array",
              "items": {
                "$ref": "AddressFields"
              }
            }
          ]
        },
        {
          "id": "FillingStrategy",
          "description": "指定是否使用 html 自动完成属性或自动填充启发式来完成填充字段。",
          "type": "string",
          "enum": [
            "autocompleteAttribute",
            "autofillInferred"
          ]
        },
        {
          "id": "FilledField",
          "type": "object",
          "properties": [
            {
              "name": "htmlType",
              "description": "字段的类型，例如文本、密码等。",
              "type": "string"
            },
            {
              "name": "id",
              "description": "html id",
              "type": "string"
            },
            {
              "name": "name",
              "description": "html 名称",
              "type": "string"
            },
            {
              "name": "value",
              "description": "字段值",
              "type": "string"
            },
            {
              "name": "autofillType",
              "description": "实际字段类型，例如 FAMILY_NAME",
              "type": "string"
            },
            {
              "name": "fillingStrategy",
              "description": "填充策略",
              "$ref": "FillingStrategy"
            },
            {
              "name": "frameId",
              "description": "该字段所属的框架",
              "$ref": "Page.FrameId"
            },
            {
              "name": "fieldId",
              "description": "表单字段的 DOM 节点",
              "$ref": "DOM.BackendNodeId"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "addressFormFilled",
          "description": "填写地址表格时发出。",
          "parameters": [
            {
              "name": "filledFields",
              "description": "有关已填写字段的信息",
              "type": "array",
              "items": {
                "$ref": "FilledField"
              }
            },
            {
              "name": "addressUi",
              "description": "用于填写表单的地址的 UI 表示形式。\n由一个 2D 数组组成，其中每个子项代表一个地址/配置文件行。",
              "$ref": "AddressUI"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "trigger",
          "description": "在由 fieldId 标识的表单上触发自动填充。\n如果该字段和相关表单无法自动填充，则返回错误。",
          "parameters": [
            {
              "name": "fieldId",
              "description": "标识用作自动填充锚点的字段。",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "frameId",
              "description": "标识该字段所属的帧。",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "card",
              "description": "填写表格的信用卡信息。不保存信用卡数据。  与“地址”互斥。",
              "optional": true,
              "$ref": "CreditCard"
            },
            {
              "name": "address",
              "description": "填写表格的地址。地址数据不保存。与“卡”互斥。",
              "optional": true,
              "$ref": "Address"
            }
          ]
        },
        {
          "name": "setAddresses",
          "description": "设置地址，以便开发人员可以验证其表单实现。",
          "parameters": [
            {
              "name": "addresses",
              "type": "array",
              "items": {
                "$ref": "Address"
              }
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用自动填充域通知。"
        },
        {
          "name": "enable",
          "description": "启用自动填充域通知。"
        }
      ]
    },
    {
      "domain": "BackgroundService",
      "description": "定义后台 Web 平台功能的事件。",
      "experimental": true,
      "types": [
        {
          "id": "ServiceName",
          "description": "将与命令/事件关联的后台服务。\n每个后台服务独立运行，但它们共享相同的\nAPI。",
          "type": "string",
          "enum": [
            "backgroundFetch",
            "backgroundSync",
            "pushMessaging",
            "notifications",
            "paymentHandler",
            "periodicBackgroundSync"
          ]
        },
        {
          "id": "EventMetadata",
          "description": "用于传递附加事件信息的键值对。",
          "type": "object",
          "properties": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "BackgroundServiceEvent",
          "type": "object",
          "properties": [
            {
              "name": "timestamp",
              "description": "事件的时间戳（以秒为单位）。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "origin",
              "description": "该事件所属的起源。",
              "type": "string"
            },
            {
              "name": "serviceWorkerRegistrationId",
              "description": "启动事件的 Service Worker ID。",
              "$ref": "ServiceWorker.RegistrationID"
            },
            {
              "name": "service",
              "description": "此事件所属的后台服务。",
              "$ref": "ServiceName"
            },
            {
              "name": "eventName",
              "description": "事件的描述。",
              "type": "string"
            },
            {
              "name": "instanceId",
              "description": "将相关事件分组在一起的标识符。",
              "type": "string"
            },
            {
              "name": "eventMetadata",
              "description": "特定于事件的信息列表。",
              "type": "array",
              "items": {
                "$ref": "EventMetadata"
              }
            },
            {
              "name": "storageKey",
              "description": "该事件所属的存储键。",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "startObserving",
          "description": "启用服务的事件更新。",
          "parameters": [
            {
              "name": "service",
              "$ref": "ServiceName"
            }
          ]
        },
        {
          "name": "stopObserving",
          "description": "禁用服务的事件更新。",
          "parameters": [
            {
              "name": "service",
              "$ref": "ServiceName"
            }
          ]
        },
        {
          "name": "setRecording",
          "description": "设置服务的录制状态。",
          "parameters": [
            {
              "name": "shouldRecord",
              "type": "boolean"
            },
            {
              "name": "service",
              "$ref": "ServiceName"
            }
          ]
        },
        {
          "name": "clearEvents",
          "description": "清除该服务的所有存储数据。",
          "parameters": [
            {
              "name": "service",
              "$ref": "ServiceName"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "recordingStateChanged",
          "description": "当服务的记录状态已更新时调用。",
          "parameters": [
            {
              "name": "isRecording",
              "type": "boolean"
            },
            {
              "name": "service",
              "$ref": "ServiceName"
            }
          ]
        },
        {
          "name": "backgroundServiceEventReceived",
          "description": "启用后使用所有现有的后台服务事件以及所有新的后台服务事件进行调用\n之后的事件（如果启用并记录）。",
          "parameters": [
            {
              "name": "backgroundServiceEvent",
              "$ref": "BackgroundServiceEvent"
            }
          ]
        }
      ]
    },
    {
      "domain": "BluetoothEmulation",
      "description": "该域允许配置虚拟蓝牙设备进行测试\n网络蓝牙 API。",
      "experimental": true,
      "types": [
        {
          "id": "CentralState",
          "description": "表示中部的各个州。",
          "type": "string",
          "enum": [
            "absent",
            "powered-off",
            "powered-on"
          ]
        },
        {
          "id": "GATTOperationType",
          "description": "指示各种类型的 GATT 事件。",
          "type": "string",
          "enum": [
            "connection",
            "discovery"
          ]
        },
        {
          "id": "CharacteristicWriteType",
          "description": "表示各种类型的特征写入。",
          "type": "string",
          "enum": [
            "write-default-deprecated",
            "write-with-response",
            "write-without-response"
          ]
        },
        {
          "id": "CharacteristicOperationType",
          "description": "表示各类特征操作。",
          "type": "string",
          "enum": [
            "read",
            "write",
            "subscribe-to-notifications",
            "unsubscribe-from-notifications"
          ]
        },
        {
          "id": "DescriptorOperationType",
          "description": "指示描述符操作的各种类型。",
          "type": "string",
          "enum": [
            "read",
            "write"
          ]
        },
        {
          "id": "ManufacturerData",
          "description": "存储制造商数据",
          "type": "object",
          "properties": [
            {
              "name": "key",
              "description": "公司标识符\nhttps://bitbucket.org/bluetooth-SIG/public/src/main/signed_numbers/company_identifiers/company_identifiers.yaml\nhttps://usb.org/developers",
              "type": "integer"
            },
            {
              "name": "data",
              "description": "制造商特定数据（通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            }
          ]
        },
        {
          "id": "ScanRecord",
          "description": "存储蓝牙设备发送的广告包的字节数据。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "optional": true,
              "type": "string"
            },
            {
              "name": "uuids",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "appearance",
              "description": "存储设备的外观描述。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "txPower",
              "description": "存储广播设备的发射功率。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "manufacturerData",
              "description": "键是公司标识符，值是字节数组\n制造商特定数据。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ManufacturerData"
              }
            }
          ]
        },
        {
          "id": "ScanEntry",
          "description": "存储蓝牙设备发送的广告包信息。",
          "type": "object",
          "properties": [
            {
              "name": "deviceAddress",
              "type": "string"
            },
            {
              "name": "rssi",
              "type": "integer"
            },
            {
              "name": "scanRecord",
              "$ref": "ScanRecord"
            }
          ]
        },
        {
          "id": "CharacteristicProperties",
          "description": "描述特征的属性。这遵循蓝牙核心\n规范 BT 4.2 第 3 卷 G 部分 3.3.1。特性。",
          "type": "object",
          "properties": [
            {
              "name": "broadcast",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "read",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "writeWithoutResponse",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "write",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "notify",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "indicate",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "authenticatedSignedWrites",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "extendedProperties",
              "optional": true,
              "type": "boolean"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "启用蓝牙仿真域。",
          "parameters": [
            {
              "name": "state",
              "description": "模拟中央的状态。",
              "$ref": "CentralState"
            },
            {
              "name": "leSupported",
              "description": "如果模拟中央支持低能。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setSimulatedCentralState",
          "description": "设置模拟中心的状态。",
          "parameters": [
            {
              "name": "state",
              "description": "模拟中央的状态。",
              "$ref": "CentralState"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用蓝牙仿真域。"
        },
        {
          "name": "simulatePreconnectedPeripheral",
          "description": "使用 |address|、|name| 模拟外围设备和 |knownServiceUuids|\n已经连接到系统。",
          "parameters": [
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "manufacturerData",
              "type": "array",
              "items": {
                "$ref": "ManufacturerData"
              }
            },
            {
              "name": "knownServiceUuids",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "simulateAdvertisement",
          "description": "模拟 |entry| 中描述的广告数据包被接收者\n中央。",
          "parameters": [
            {
              "name": "entry",
              "$ref": "ScanEntry"
            }
          ]
        },
        {
          "name": "simulateGATTOperationResponse",
          "description": "使用 |address| 模拟来自外设的响应代码对于一个\n|type| 的 GATT 操作。 |代码|值遵循 HCI 错误代码\n蓝牙核心规范第 2 卷 D 部分 1.3 错误代码列表。",
          "parameters": [
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "GATTOperationType"
            },
            {
              "name": "code",
              "type": "integer"
            }
          ]
        },
        {
          "name": "simulateCharacteristicOperationResponse",
          "description": "模拟具有 |characteristicId| 的特征的响应对于一个\n|type| 的特征操作。 |代码|值跟随错误\n代码来自蓝牙核心规范第 3 卷 F 部分 3.4.1.1 错误响应。\n|数据|模拟成功的读操作时预计存在\n回应。",
          "parameters": [
            {
              "name": "characteristicId",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "CharacteristicOperationType"
            },
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "simulateDescriptorOperationResponse",
          "description": "使用 |descriptorId| 模拟来自描述符的响应对于一个\n|类型|的描述符操作。 |代码|值跟随错误\n代码来自蓝牙核心规范第 3 卷 F 部分 3.4.1.1 错误响应。\n|数据|模拟成功的读操作时预计存在\n回应。",
          "parameters": [
            {
              "name": "descriptorId",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "DescriptorOperationType"
            },
            {
              "name": "code",
              "type": "integer"
            },
            {
              "name": "data",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "addService",
          "description": "使用 |serviceUuid| 添加服务使用 |address| 到外围设备。",
          "parameters": [
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "serviceUuid",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "serviceId",
              "description": "唯一代表该服务的标识符。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeService",
          "description": "删除 |serviceId| 表示的服务来自模拟中央。",
          "parameters": [
            {
              "name": "serviceId",
              "type": "string"
            }
          ]
        },
        {
          "name": "addCharacteristic",
          "description": "使用 |characteristicUuid| 添加特征和|属性|到\n由 |serviceId| 表示的服务。",
          "parameters": [
            {
              "name": "serviceId",
              "type": "string"
            },
            {
              "name": "characteristicUuid",
              "type": "string"
            },
            {
              "name": "properties",
              "$ref": "CharacteristicProperties"
            }
          ],
          "returns": [
            {
              "name": "characteristicId",
              "description": "唯一代表此特征的标识符。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeCharacteristic",
          "description": "删除 |characteristicId| 表示的特征从\n模拟中央。",
          "parameters": [
            {
              "name": "characteristicId",
              "type": "string"
            }
          ]
        },
        {
          "name": "addDescriptor",
          "description": "添加带有 |descriptorUuid| 的描述符所代表的特征\n通过 |characteristicId|。",
          "parameters": [
            {
              "name": "characteristicId",
              "type": "string"
            },
            {
              "name": "descriptorUuid",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "descriptorId",
              "description": "唯一表示该描述符的标识符。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeDescriptor",
          "description": "删除带有 |descriptorId| 的描述符来自模拟中央。",
          "parameters": [
            {
              "name": "descriptorId",
              "type": "string"
            }
          ]
        },
        {
          "name": "simulateGATTDisconnection",
          "description": "使用 |address| 模拟 GATT 与外设的断开连接。",
          "parameters": [
            {
              "name": "address",
              "type": "string"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "gattOperationReceived",
          "description": "|type| 的 GATT 操作时的事件到带有 |address| 的外设\n发生了。",
          "parameters": [
            {
              "name": "address",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "GATTOperationType"
            }
          ]
        },
        {
          "name": "characteristicOperationReceived",
          "description": "当 |type| 的特征操作时发生的事件到特征\n由 |characteristicId| 表示发生了。 |数据|和 |writeType|是\n预计在 |type| 时存在是写。",
          "parameters": [
            {
              "name": "characteristicId",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "CharacteristicOperationType"
            },
            {
              "name": "data",
              "optional": true,
              "type": "string"
            },
            {
              "name": "writeType",
              "optional": true,
              "$ref": "CharacteristicWriteType"
            }
          ]
        },
        {
          "name": "descriptorOperationReceived",
          "description": "|类型| 的描述符操作时的事件到描述符\n由 |descriptorId| 表示发生了。 |数据|预计存在时\n|类型|是写。",
          "parameters": [
            {
              "name": "descriptorId",
              "type": "string"
            },
            {
              "name": "type",
              "$ref": "DescriptorOperationType"
            },
            {
              "name": "data",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "Browser",
      "description": "浏览器域定义了浏览器管理的方法和事件。",
      "types": [
        {
          "id": "BrowserContextID",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "WindowID",
          "experimental": true,
          "type": "integer"
        },
        {
          "id": "WindowState",
          "description": "浏览器窗口的状态。",
          "experimental": true,
          "type": "string",
          "enum": [
            "normal",
            "minimized",
            "maximized",
            "fullscreen"
          ]
        },
        {
          "id": "Bounds",
          "description": "浏览器窗口边界信息",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "left",
              "description": "从屏幕左边缘到窗口的偏移量（以像素为单位）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "top",
              "description": "从屏幕上边缘到窗口的偏移量（以像素为单位）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "width",
              "description": "窗口宽度（以像素为单位）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "height",
              "description": "窗口高度（以像素为单位）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "windowState",
              "description": "窗口状态。默认为正常。",
              "optional": true,
              "$ref": "WindowState"
            }
          ]
        },
        {
          "id": "PermissionType",
          "experimental": true,
          "type": "string",
          "enum": [
            "ar",
            "audioCapture",
            "automaticFullscreen",
            "backgroundFetch",
            "backgroundSync",
            "cameraPanTiltZoom",
            "capturedSurfaceControl",
            "clipboardReadWrite",
            "clipboardSanitizedWrite",
            "displayCapture",
            "durableStorage",
            "geolocation",
            "handTracking",
            "idleDetection",
            "keyboardLock",
            "localFonts",
            "localNetworkAccess",
            "midi",
            "midiSysex",
            "nfc",
            "notifications",
            "paymentHandler",
            "periodicBackgroundSync",
            "pointerLock",
            "protectedMediaIdentifier",
            "sensors",
            "smartCard",
            "speakerSelection",
            "storageAccess",
            "topLevelStorageAccess",
            "videoCapture",
            "vr",
            "wakeLockScreen",
            "wakeLockSystem",
            "webAppInstallation",
            "webPrinting",
            "windowManagement"
          ]
        },
        {
          "id": "PermissionSetting",
          "experimental": true,
          "type": "string",
          "enum": [
            "granted",
            "denied",
            "prompt"
          ]
        },
        {
          "id": "PermissionDescriptor",
          "description": "Permissions API中定义的PermissionDescriptor的定义：\nhttps://w3c.github.io/permissions/#dom-permissiondescriptor。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "权限名称。\n请参阅 https://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/permissions/permission_descriptor.idl 了解有效的权限名称。",
              "type": "string"
            },
            {
              "name": "sysex",
              "description": "对于“midi”权限，还可以指定sysex 控制。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "userVisibleOnly",
              "description": "对于“推送”权限，可以指定 userVisibleOnly。\n请注意， userVisibleOnly = true 是当前唯一支持的类型。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "allowWithoutSanitization",
              "description": "对于“剪贴板”权限，可以指定allowWithoutSanitization。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "allowWithoutGesture",
              "description": "对于“全屏”权限，必须指定allowWithoutGesture:true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "panTiltZoom",
              "description": "对于“相机”权限，可以指定 panTiltZoom。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "BrowserCommandId",
          "description": "executeBrowserCommand 使用的浏览器命令 ID。",
          "experimental": true,
          "type": "string",
          "enum": [
            "openTabSearch",
            "closeTabSearch",
            "openGlic"
          ]
        },
        {
          "id": "Bucket",
          "description": "Chrome 直方图桶。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "low",
              "description": "最小值（含）。",
              "type": "integer"
            },
            {
              "name": "high",
              "description": "最大值（不含）。",
              "type": "integer"
            },
            {
              "name": "count",
              "description": "样本数量。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "Histogram",
          "description": "Chrome 直方图。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "姓名。",
              "type": "string"
            },
            {
              "name": "sum",
              "description": "样本值的总和。",
              "type": "integer"
            },
            {
              "name": "count",
              "description": "样本总数。",
              "type": "integer"
            },
            {
              "name": "buckets",
              "description": "水桶。",
              "type": "array",
              "items": {
                "$ref": "Bucket"
              }
            }
          ]
        },
        {
          "id": "PrivacySandboxAPI",
          "experimental": true,
          "type": "string",
          "enum": [
            "BiddingAndAuctionServices",
            "TrustedKeyValue"
          ]
        }
      ],
      "commands": [
        {
          "name": "setPermission",
          "description": "为给定的嵌入和嵌入源设置权限设置。",
          "experimental": true,
          "parameters": [
            {
              "name": "permission",
              "description": "覆盖权限的描述符。",
              "$ref": "PermissionDescriptor"
            },
            {
              "name": "setting",
              "description": "权限的设置。",
              "$ref": "PermissionSetting"
            },
            {
              "name": "origin",
              "description": "嵌入权限适用的来源，如果未指定，则为所有来源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "embeddedOrigin",
              "description": "权限适用的嵌入源。除非嵌入原点是，否则它将被忽略\n存在且有效。如果提供了嵌入原点但未提供嵌入原点，则\nembedding origin 用作嵌入原点。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "browserContextId",
              "description": "要覆盖的上下文。省略时，将使用默认浏览器上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            }
          ]
        },
        {
          "name": "grantPermissions",
          "description": "向给定源授予特定权限并拒绝所有其他权限。已弃用。使用\nsetPermission 代替。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "permissions",
              "type": "array",
              "items": {
                "$ref": "PermissionType"
              }
            },
            {
              "name": "origin",
              "description": "权限适用的来源，如果未指定，则所有来源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "browserContextId",
              "description": "BrowserContext 覆盖权限。省略时，将使用默认浏览器上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            }
          ]
        },
        {
          "name": "resetPermissions",
          "description": "重置所有来源的所有权限管理。",
          "parameters": [
            {
              "name": "browserContextId",
              "description": "BrowserContext 重置权限。省略时，将使用默认浏览器上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            }
          ]
        },
        {
          "name": "setDownloadBehavior",
          "description": "设置下载文件时的行为。",
          "experimental": true,
          "parameters": [
            {
              "name": "behavior",
              "description": "是否允许所有或拒绝所有下载请求，或者在以下情况下使用默认 Chrome 行为：\n可用（否则拒绝）。 |允许和名称|允许下载并根据以下内容命名文件\n他们的下载指南。",
              "type": "string",
              "enum": [
                "deny",
                "allow",
                "allowAndName",
                "default"
              ]
            },
            {
              "name": "browserContextId",
              "description": "BrowserContext 设置下载行为。省略时，将使用默认浏览器上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            },
            {
              "name": "downloadPath",
              "description": "保存下载文件的默认路径。如果行为设置为“允许”，则这是必需的\n或“allowAndName”。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "eventsEnabled",
              "description": "是否发出下载事件（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "cancelDownload",
          "description": "取消正在进行的下载",
          "experimental": true,
          "parameters": [
            {
              "name": "guid",
              "description": "下载的全局唯一标识符。",
              "type": "string"
            },
            {
              "name": "browserContextId",
              "description": "用于执行操作的 BrowserContext。省略时，将使用默认浏览器上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            }
          ]
        },
        {
          "name": "close",
          "description": "优雅地关闭浏览器。"
        },
        {
          "name": "crash",
          "description": "导致主线程上的浏览器崩溃。",
          "experimental": true
        },
        {
          "name": "crashGpuProcess",
          "description": "GPU 进程崩溃。",
          "experimental": true
        },
        {
          "name": "getVersion",
          "description": "返回版本信息。",
          "returns": [
            {
              "name": "protocolVersion",
              "description": "协议版本。",
              "type": "string"
            },
            {
              "name": "product",
              "description": "产品名称。",
              "type": "string"
            },
            {
              "name": "revision",
              "description": "产品改版。",
              "type": "string"
            },
            {
              "name": "userAgent",
              "description": "用户代理。",
              "type": "string"
            },
            {
              "name": "jsVersion",
              "description": "V8版本。",
              "type": "string"
            }
          ]
        },
        {
          "name": "getBrowserCommandLine",
          "description": "返回浏览器进程的命令行开关当且仅当\n--enable-automation 在命令行上。",
          "experimental": true,
          "returns": [
            {
              "name": "arguments",
              "description": "命令行参数",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "getHistograms",
          "description": "获取 Chrome 直方图。",
          "experimental": true,
          "parameters": [
            {
              "name": "query",
              "description": "名称中请求的子字符串。仅将查询作为直方图\n提取其名称中的子字符串。返回空或不存在的查询\n所有直方图。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "delta",
              "description": "如果为 true，则检索自上次 delta 调用以来的 delta。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "histograms",
              "description": "直方图。",
              "type": "array",
              "items": {
                "$ref": "Histogram"
              }
            }
          ]
        },
        {
          "name": "getHistogram",
          "description": "按名称获取 Chrome 直方图。",
          "experimental": true,
          "parameters": [
            {
              "name": "name",
              "description": "请求的直方图名称。",
              "type": "string"
            },
            {
              "name": "delta",
              "description": "如果为 true，则检索自上次 delta 调用以来的 delta。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "histogram",
              "description": "直方图。",
              "$ref": "Histogram"
            }
          ]
        },
        {
          "name": "getWindowBounds",
          "description": "获取浏览器窗口的位置和大小。",
          "experimental": true,
          "parameters": [
            {
              "name": "windowId",
              "description": "浏览器窗口 ID。",
              "$ref": "WindowID"
            }
          ],
          "returns": [
            {
              "name": "bounds",
              "description": "窗口的边界信息。当窗口状态“最小化”时，恢复的窗口\n返回位置和大小。",
              "$ref": "Bounds"
            }
          ]
        },
        {
          "name": "getWindowForTarget",
          "description": "获取包含 devtools 目标的浏览器窗口。",
          "experimental": true,
          "parameters": [
            {
              "name": "targetId",
              "description": "Devtools 代理主机 ID。如果作为会话的一部分调用，则使用关联的 targetId。",
              "optional": true,
              "$ref": "Target.TargetID"
            }
          ],
          "returns": [
            {
              "name": "windowId",
              "description": "浏览器窗口 ID。",
              "$ref": "WindowID"
            },
            {
              "name": "bounds",
              "description": "窗口的边界信息。当窗口状态“最小化”时，恢复的窗口\n返回位置和大小。",
              "$ref": "Bounds"
            }
          ]
        },
        {
          "name": "setWindowBounds",
          "description": "设置浏览器窗口的位置和/或大小。",
          "experimental": true,
          "parameters": [
            {
              "name": "windowId",
              "description": "浏览器窗口 ID。",
              "$ref": "WindowID"
            },
            {
              "name": "bounds",
              "description": "新的窗口边界。 “最小化”、“最大化”和“全屏”状态不能组合\n与“左”、“顶部”、“宽度”或“高度”。使未指定的字段保持不变。",
              "$ref": "Bounds"
            }
          ]
        },
        {
          "name": "setContentsSize",
          "description": "设置浏览器内容的大小，根据需要调整浏览器窗口的大小。",
          "experimental": true,
          "parameters": [
            {
              "name": "windowId",
              "description": "浏览器窗口 ID。",
              "$ref": "WindowID"
            },
            {
              "name": "width",
              "description": "DIP 中的窗口内容宽度。如果省略，则假定当前宽度。\n如果省略“高度”，则必须指定。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "height",
              "description": "窗口内容高度（以 DIP 表示）。如果省略，则假定当前高度。\n如果省略“宽度”，则必须指定。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "setDockTile",
          "description": "设置特定于平台的停靠图块详细信息。",
          "experimental": true,
          "parameters": [
            {
              "name": "badgeLabel",
              "optional": true,
              "type": "string"
            },
            {
              "name": "image",
              "description": "PNG 编码图像。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "executeBrowserCommand",
          "description": "调用遥测使用的自定义浏览器命令。",
          "experimental": true,
          "parameters": [
            {
              "name": "commandId",
              "$ref": "BrowserCommandId"
            }
          ]
        },
        {
          "name": "addPrivacySandboxEnrollmentOverride",
          "description": "允许网站使用需要注册的隐私沙箱功能\n该网站并未实际注册。仅在页面目标上受支持。",
          "parameters": [
            {
              "name": "url",
              "type": "string"
            }
          ]
        },
        {
          "name": "addPrivacySandboxCoordinatorKeyConfig",
          "description": "配置与给定隐私沙箱 API 一起使用的加密密钥以进行通信\n交给值得信赖的协调员。  由于这仅用于测试自动化，\ncoordinatorOrigin 必须是 .test 域。没有现有的协调员\n源配置可能存在。",
          "parameters": [
            {
              "name": "api",
              "$ref": "PrivacySandboxAPI"
            },
            {
              "name": "coordinatorOrigin",
              "type": "string"
            },
            {
              "name": "keyConfig",
              "type": "string"
            },
            {
              "name": "browserContextId",
              "description": "用于执行操作的 BrowserContext。省略时，默认浏览器\n使用上下文。",
              "optional": true,
              "$ref": "BrowserContextID"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "downloadWillBegin",
          "description": "当页面即将开始下载时触发​​。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "导致下载开始的帧的 ID。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "guid",
              "description": "下载的全局唯一标识符。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "正在下载的资源的 URL。",
              "type": "string"
            },
            {
              "name": "suggestedFilename",
              "description": "资源的建议文件名（磁盘上保存的实际文件名可能有所不同）。",
              "type": "string"
            }
          ]
        },
        {
          "name": "downloadProgress",
          "description": "下载取得进展时触发。最后一次通话已|完成| == 正确。",
          "experimental": true,
          "parameters": [
            {
              "name": "guid",
              "description": "下载的全局唯一标识符。",
              "type": "string"
            },
            {
              "name": "totalBytes",
              "description": "预计下载的总字节数。",
              "type": "number"
            },
            {
              "name": "receivedBytes",
              "description": "收到的总字节数。",
              "type": "number"
            },
            {
              "name": "state",
              "description": "下载状态。",
              "type": "string",
              "enum": [
                "inProgress",
                "completed",
                "canceled"
              ]
            },
            {
              "name": "filePath",
              "description": "如果下载“完成”，则提供下载文件的路径。\n根据平台的不同，不保证它被设置，也不保证文件\n保证存在。",
              "experimental": true,
              "optional": true,
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "CSS",
      "description": "该域公开 CSS 读/写操作。所有 CSS 对象（样式表、规则和样式）\n在相关对象的后续操作中使用关联的“id”。每个对象类型都有\n特定的“id”结构，并且这些结构在不同类型的对象之间不可互换。\nCSS 对象可以使用“get*ForNode()”调用（接受 DOM 节点 ID）来加载。一位客户\n还可以通过“styleSheetAdded”/“styleSheetRemoved”事件跟踪样式表\n随后使用 getStyleSheet[Text]() 方法加载所需的样式表内容。",
      "experimental": true,
      "dependencies": [
        "DOM",
        "Page"
      ],
      "types": [
        {
          "id": "StyleSheetId",
          "type": "string"
        },
        {
          "id": "StyleSheetOrigin",
          "description": "样式表类型：“injected”表示通过扩展注入的样式表，“user-agent”表示用户代理\n样式表，“检查器”，用于检查器创建的样式表（即那些持有“via\n检查员”规则），“常规”用于常规样式表。",
          "type": "string",
          "enum": [
            "injected",
            "user-agent",
            "inspector",
            "regular"
          ]
        },
        {
          "id": "PseudoElementMatches",
          "description": "单个伪样式的 CSS 规则集合。",
          "type": "object",
          "properties": [
            {
              "name": "pseudoType",
              "description": "伪元素类型。",
              "$ref": "DOM.PseudoType"
            },
            {
              "name": "pseudoIdentifier",
              "description": "伪元素自定义标识。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "matches",
              "description": "适用于伪样式的 CSS 规则的匹配。",
              "type": "array",
              "items": {
                "$ref": "RuleMatch"
              }
            }
          ]
        },
        {
          "id": "CSSAnimationStyle",
          "description": "来自动画的 CSS 样式带有动画名称。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "动画的名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "style",
              "description": "风格源自动画。",
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "InheritedStyleEntry",
          "description": "从祖先节点继承CSS规则集合。",
          "type": "object",
          "properties": [
            {
              "name": "inlineStyle",
              "description": "样式继承链中祖先节点的内联样式（如果有）。",
              "optional": true,
              "$ref": "CSSStyle"
            },
            {
              "name": "matchedCSSRules",
              "description": "与样式继承链中的祖先节点相匹配的 CSS 规则的匹配项。",
              "type": "array",
              "items": {
                "$ref": "RuleMatch"
              }
            }
          ]
        },
        {
          "id": "InheritedAnimatedStyleEntry",
          "description": "从祖先节点继承动画样式的 CSS 样式集合。",
          "type": "object",
          "properties": [
            {
              "name": "animationStyles",
              "description": "来自样式继承链中祖先动画的样式（如果有）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSAnimationStyle"
              }
            },
            {
              "name": "transitionsStyle",
              "description": "来自样式继承链中祖先（如果有）的转换的样式。",
              "optional": true,
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "InheritedPseudoElementMatches",
          "description": "继承的伪元素与祖先节点的伪元素匹配。",
          "type": "object",
          "properties": [
            {
              "name": "pseudoElements",
              "description": "来自祖先节点的伪样式的伪样式的匹配。",
              "type": "array",
              "items": {
                "$ref": "PseudoElementMatches"
              }
            }
          ]
        },
        {
          "id": "RuleMatch",
          "description": "CSS 规则的匹配数据。",
          "type": "object",
          "properties": [
            {
              "name": "rule",
              "description": "匹配中的 CSS 规则。",
              "$ref": "CSSRule"
            },
            {
              "name": "matchingSelectors",
              "description": "匹配规则的selectorList 选择器中的选择器索引（从0 开始）。",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          ]
        },
        {
          "id": "Value",
          "description": "简单选择器的数据（在选择器列表中用逗号分隔）。",
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "值文本。",
              "type": "string"
            },
            {
              "name": "range",
              "description": "基础资源中的值范围（如果可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "specificity",
              "description": "选择器的特殊性。",
              "experimental": true,
              "optional": true,
              "$ref": "Specificity"
            }
          ]
        },
        {
          "id": "Specificity",
          "description": "特异性：\nhttps://drafts.csswg.org/selectors/#specificity-rules",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "a",
              "description": "a 组件，代表 ID 选择器的数量。",
              "type": "integer"
            },
            {
              "name": "b",
              "description": "b 组件，代表类选择器、属性选择器和\n伪类。",
              "type": "integer"
            },
            {
              "name": "c",
              "description": "c 组件，表示类型选择器和伪元素的数量。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "SelectorList",
          "description": "选择器列表数据。",
          "type": "object",
          "properties": [
            {
              "name": "selectors",
              "description": "列表中的选择器。",
              "type": "array",
              "items": {
                "$ref": "Value"
              }
            },
            {
              "name": "text",
              "description": "规则选择器文本。",
              "type": "string"
            }
          ]
        },
        {
          "id": "CSSStyleSheetHeader",
          "description": "CSS 样式表元信息。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "样式表标识符。",
              "$ref": "StyleSheetId"
            },
            {
              "name": "frameId",
              "description": "所有者帧标识符。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "sourceURL",
              "description": "样式表资源 URL。如果这是使用创建的构造样式表，则为空\nnew CSSStyleSheet() （但如果这是导入的构造样式表，则非空\n作为 CSS 模块脚本）。",
              "type": "string"
            },
            {
              "name": "sourceMapURL",
              "description": "与样式表关联的源映射的 URL（如果有）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "origin",
              "description": "样式表起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "title",
              "description": "样式表标题。",
              "type": "string"
            },
            {
              "name": "ownerNode",
              "description": "样式表所有者节点的后端 ID。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "disabled",
              "description": "表示样式表是否被禁用。",
              "type": "boolean"
            },
            {
              "name": "hasSourceURL",
              "description": "sourceURL字段值是否来自sourceURL注释。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isInline",
              "description": "该样式表是否由解析器为 STYLE 标记创建。该标志未设置为\ndocument.writing STYLE 标签。",
              "type": "boolean"
            },
            {
              "name": "isMutable",
              "description": "该样式表是否可变。内联样式表变得可变\n通过 CSSOM API 修改后。\n仅当 DevTools 修改时，`<link>` 元素的样式表才变得可变。\n构造的样式表（new CSSStyleSheet()）在创建后立即可变。",
              "type": "boolean"
            },
            {
              "name": "isConstructed",
              "description": "如果此样式表是通过 new CSSStyleSheet() 创建或作为样式表导入，则为 true\nCSS 模块脚本。",
              "type": "boolean"
            },
            {
              "name": "startLine",
              "description": "资源中样式表的行偏移量（从零开始）。",
              "type": "number"
            },
            {
              "name": "startColumn",
              "description": "资源中样式表的列偏移量（从零开始）。",
              "type": "number"
            },
            {
              "name": "length",
              "description": "内容的大小（以字符为单位）。",
              "type": "number"
            },
            {
              "name": "endLine",
              "description": "资源内样式表末尾的行偏移量（从零开始）。",
              "type": "number"
            },
            {
              "name": "endColumn",
              "description": "资源中样式表末尾的列偏移量（从零开始）。",
              "type": "number"
            },
            {
              "name": "loadingFailed",
              "description": "如果样式表是从网络资源加载的，则表明资源加载失败",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CSSRule",
          "description": "CSS 规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "selectorList",
              "description": "规则选择器数据。",
              "$ref": "SelectorList"
            },
            {
              "name": "nestingSelectors",
              "description": "来自祖先样式规则的选择器数组，按距当前规则的距离排序。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            },
            {
              "name": "originTreeScopeNodeId",
              "description": "构成此规则的原始树范围的 DOM 节点的 BackendNodeId。",
              "experimental": true,
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "media",
              "description": "媒体列表数组（用于涉及媒体查询的规则）。该数组枚举媒体查询\n从最里面的开始，向外。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSMedia"
              }
            },
            {
              "name": "containerQueries",
              "description": "容器查询列表数组（用于涉及容器查询的规则）。\n该数组从最里面的一个开始向外枚举容器查询。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSContainerQuery"
              }
            },
            {
              "name": "supports",
              "description": "@支持 CSS at 规则数组。\n该数组从最里面的一个开始向外枚举@supports at-rules。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSSupports"
              }
            },
            {
              "name": "layers",
              "description": "级联层阵列。包含该规则所属的层层次结构\n与最内层并向外。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSLayer"
              }
            },
            {
              "name": "scopes",
              "description": "@scope CSS at 规则数组。\n该数组从最里面的一个开始向外枚举@scope at-rules。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSScope"
              }
            },
            {
              "name": "ruleTypes",
              "description": "该数组从最内层向外保存祖先 CSSRules 的类型。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSRuleType"
              }
            },
            {
              "name": "startingStyles",
              "description": "@starting-style CSS at-rule 数组。\n该数组枚举@starting-style at-rules，从最里面的一个开始，向外。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSStartingStyle"
              }
            }
          ]
        },
        {
          "id": "CSSRuleType",
          "description": "表示 CSS 规则类型的枚举，用于表示样式规则祖先的顺序。\n此列表仅包含在祖先规则收集期间收集的规则类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "MediaRule",
            "SupportsRule",
            "ContainerRule",
            "LayerRule",
            "ScopeRule",
            "StyleRule",
            "StartingStyleRule"
          ]
        },
        {
          "id": "RuleUsage",
          "description": "CSS 覆盖范围信息。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "$ref": "StyleSheetId"
            },
            {
              "name": "startOffset",
              "description": "规则（包括选择器）的开头相对于样式表开头的偏移量。",
              "type": "number"
            },
            {
              "name": "endOffset",
              "description": "规则主体末尾相对于样式表开头的偏移量。",
              "type": "number"
            },
            {
              "name": "used",
              "description": "指示页面中的某些元素是否实际使用了该规则。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "SourceRange",
          "description": "资源内的文本范围。所有数字都是从零开始的。",
          "type": "object",
          "properties": [
            {
              "name": "startLine",
              "description": "范围的起始线。",
              "type": "integer"
            },
            {
              "name": "startColumn",
              "description": "范围的起始列（含）。",
              "type": "integer"
            },
            {
              "name": "endLine",
              "description": "范围结束线",
              "type": "integer"
            },
            {
              "name": "endColumn",
              "description": "范围的结束列（不包括）。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "ShorthandEntry",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "简称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "速记值。",
              "type": "string"
            },
            {
              "name": "important",
              "description": "该属性是否具有“!important”注释（如果不存在则表示“false”）。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CSSComputedStyleProperty",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "计算的样式属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "计算的样式属性值。",
              "type": "string"
            }
          ]
        },
        {
          "id": "ComputedStyleExtraFields",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "isAppearanceBase",
              "description": "返回此节点是否以基本外观渲染，\n当它的外观属性设置为 base/base-select 时会发生这种情况\n或者它位于使用基本外观呈现的元素的子树中。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CSSStyle",
          "description": "CSS 样式表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "cssProperties",
              "description": "样式中的 CSS 属性。",
              "type": "array",
              "items": {
                "$ref": "CSSProperty"
              }
            },
            {
              "name": "shorthandEntries",
              "description": "样式中找到的所有简写的计算值。",
              "type": "array",
              "items": {
                "$ref": "ShorthandEntry"
              }
            },
            {
              "name": "cssText",
              "description": "样式声明文本（如果有）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "range",
              "description": "封闭样式表中的样式声明范围（如果可用）。",
              "optional": true,
              "$ref": "SourceRange"
            }
          ]
        },
        {
          "id": "CSSProperty",
          "description": "CSS 属性声明数据。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "财产价值。",
              "type": "string"
            },
            {
              "name": "important",
              "description": "该属性是否具有“!important”注释（如果不存在则表示“false”）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "implicit",
              "description": "该属性是否是隐式的（如果不存在则暗示“false”）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "text",
              "description": "样式中指定的完整属性文本。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "parsedOk",
              "description": "浏览器是否理解该属性（如果不存在则表示“true”）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "disabled",
              "description": "用户是否禁用该属性（仅适用于基于源的属性）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "range",
              "description": "封闭样式声明中的整个属性范围（如果可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "longhandProperties",
              "description": "如果该属性是简写形式，则解析该属性的简写形式。\n如果给定属性不是简写，则此字段将为空。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSProperty"
              }
            }
          ]
        },
        {
          "id": "CSSMedia",
          "description": "CSS 媒体规则描述符。",
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "媒体查询文本。",
              "type": "string"
            },
            {
              "name": "source",
              "description": "媒体查询的来源：如果由 @media 规则指定则为“mediaRule”，如果由 @media 规则指定则为“importRule”\n由 @import 规则指定，如果由链接中的“media”属性指定，则为“linkedSheet”\n样式表的 LINK 标记，如果由内联中的“media”属性指定，则为“inlineSheet”\n样式表的 STYLE 标记。",
              "type": "string",
              "enum": [
                "mediaRule",
                "importRule",
                "linkedSheet",
                "inlineSheet"
              ]
            },
            {
              "name": "sourceURL",
              "description": "包含媒体查询描述的文档的 URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "range",
              "description": "封闭样式表中的关联规则（@media 或 @import）标头范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "mediaList",
              "description": "媒体查询数组。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "MediaQuery"
              }
            }
          ]
        },
        {
          "id": "MediaQuery",
          "description": "媒体查询描述符。",
          "type": "object",
          "properties": [
            {
              "name": "expressions",
              "description": "媒体查询表达式数组。",
              "type": "array",
              "items": {
                "$ref": "MediaQueryExpression"
              }
            },
            {
              "name": "active",
              "description": "是否满足媒体查询条件。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "MediaQueryExpression",
          "description": "媒体查询表达式描述符。",
          "type": "object",
          "properties": [
            {
              "name": "value",
              "description": "媒体查询表达式值。",
              "type": "number"
            },
            {
              "name": "unit",
              "description": "媒体查询表达单元。",
              "type": "string"
            },
            {
              "name": "feature",
              "description": "媒体查询表达功能。",
              "type": "string"
            },
            {
              "name": "valueRange",
              "description": "封闭样式表（如果可用）中值文本的关联范围。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "computedLength",
              "description": "媒体查询表达式的计算长度（如果适用）。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "CSSContainerQuery",
          "description": "CSS 容器查询规则描述符。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "容器查询文本。",
              "type": "string"
            },
            {
              "name": "range",
              "description": "封闭样式表中的关联规则标题范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "name",
              "description": "容器的可选名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "physicalAxes",
              "description": "查询容器的可选物理轴。",
              "optional": true,
              "$ref": "DOM.PhysicalAxes"
            },
            {
              "name": "logicalAxes",
              "description": "查询容器的可选逻辑轴。",
              "optional": true,
              "$ref": "DOM.LogicalAxes"
            },
            {
              "name": "queriesScrollState",
              "description": "如果查询包含scroll-state() 查询，则为 true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "queriesAnchored",
              "description": "如果查询包含anchored() 查询，则为 true。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CSSSupports",
          "description": "CSS 支持 at 规则描述符。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "支持规则文本。",
              "type": "string"
            },
            {
              "name": "active",
              "description": "是否满足支撑条件。",
              "type": "boolean"
            },
            {
              "name": "range",
              "description": "封闭样式表中的关联规则标题范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "id": "CSSScope",
          "description": "CSS 范围 at 规则描述符。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "范围规则文本。",
              "type": "string"
            },
            {
              "name": "range",
              "description": "封闭样式表中的关联规则标题范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "id": "CSSLayer",
          "description": "CSS 层 at 规则描述符。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "text",
              "description": "图层名称。",
              "type": "string"
            },
            {
              "name": "range",
              "description": "封闭样式表中的关联规则标题范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "id": "CSSStartingStyle",
          "description": "CSS 起始样式 at 规则描述符。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "range",
              "description": "封闭样式表中的关联规则标题范围（如果\n可用）。",
              "optional": true,
              "$ref": "SourceRange"
            },
            {
              "name": "styleSheetId",
              "description": "包含该对象的样式表的标识符（如果存在）。",
              "optional": true,
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "id": "CSSLayerData",
          "description": "CSS 图层数据。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "图层名称。",
              "type": "string"
            },
            {
              "name": "subLayers",
              "description": "直接子层",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSLayerData"
              }
            },
            {
              "name": "order",
              "description": "层序。顺序决定了层在级联顺序中的顺序。\n数字越大，级联顺序的优先级越高。",
              "type": "number"
            }
          ]
        },
        {
          "id": "PlatformFontUsage",
          "description": "有关使用给定字体呈现的字形数量的信息。",
          "type": "object",
          "properties": [
            {
              "name": "familyName",
              "description": "平台举报的 Font 姓氏。",
              "type": "string"
            },
            {
              "name": "postScriptName",
              "description": "平台报告的字体的 PostScript 名称。",
              "type": "string"
            },
            {
              "name": "isCustomFont",
              "description": "指示字体是否已在本地下载或解析。",
              "type": "boolean"
            },
            {
              "name": "glyphCount",
              "description": "使用此字体呈现的字形数量。",
              "type": "number"
            }
          ]
        },
        {
          "id": "FontVariationAxis",
          "description": "有关可变字体的字体变化轴的信息",
          "type": "object",
          "properties": [
            {
              "name": "tag",
              "description": "字体变化设置标签（又名“轴标签”）。",
              "type": "string"
            },
            {
              "name": "name",
              "description": "默认语言的人类可读变体名称（通常为“en”）。",
              "type": "string"
            },
            {
              "name": "minValue",
              "description": "字体支持此标签的最小值（含）。",
              "type": "number"
            },
            {
              "name": "maxValue",
              "description": "字体支持此标签的最大值（含）。",
              "type": "number"
            },
            {
              "name": "defaultValue",
              "description": "默认值。",
              "type": "number"
            }
          ]
        },
        {
          "id": "FontFace",
          "description": "网络字体的属性：https://www.w3.org/TR/2008/REC-CSS2-20080411/fonts.html#font-descriptions\n以及其他信息，例如 platformFontFamily 和 fontVariationAxes。",
          "type": "object",
          "properties": [
            {
              "name": "fontFamily",
              "description": "字体系列。",
              "type": "string"
            },
            {
              "name": "fontStyle",
              "description": "字体样式。",
              "type": "string"
            },
            {
              "name": "fontVariant",
              "description": "字体变体。",
              "type": "string"
            },
            {
              "name": "fontWeight",
              "description": "字体粗细。",
              "type": "string"
            },
            {
              "name": "fontStretch",
              "description": "字体拉伸。",
              "type": "string"
            },
            {
              "name": "fontDisplay",
              "description": "字体显示。",
              "type": "string"
            },
            {
              "name": "unicodeRange",
              "description": "unicode 范围。",
              "type": "string"
            },
            {
              "name": "src",
              "description": "源代码。",
              "type": "string"
            },
            {
              "name": "platformFontFamily",
              "description": "已解决的平台字体系列",
              "type": "string"
            },
            {
              "name": "fontVariationAxes",
              "description": "可用的变化设置（也称为“轴”）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FontVariationAxis"
              }
            }
          ]
        },
        {
          "id": "CSSTryRule",
          "description": "CSS 尝试规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "CSSPositionTryRule",
          "description": "CSS @position-try 规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "前奏虚线标识名称",
              "$ref": "Value"
            },
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            },
            {
              "name": "active",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CSSKeyframesRule",
          "description": "CSS 关键帧规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "animationName",
              "description": "动画名称。",
              "$ref": "Value"
            },
            {
              "name": "keyframes",
              "description": "关键帧列表。",
              "type": "array",
              "items": {
                "$ref": "CSSKeyframeRule"
              }
            }
          ]
        },
        {
          "id": "CSSPropertyRegistration",
          "description": "通过 CSS.registerProperty 表示自定义属性注册",
          "type": "object",
          "properties": [
            {
              "name": "propertyName",
              "type": "string"
            },
            {
              "name": "initialValue",
              "optional": true,
              "$ref": "Value"
            },
            {
              "name": "inherits",
              "type": "boolean"
            },
            {
              "name": "syntax",
              "type": "string"
            }
          ]
        },
        {
          "id": "CSSFontPaletteValuesRule",
          "description": "CSS font-palette-values 规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "fontPaletteName",
              "description": "关联的字体调色板名称。",
              "$ref": "Value"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "CSSPropertyRule",
          "description": "CSS 属性 at 规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "propertyName",
              "description": "关联的属性名称。",
              "$ref": "Value"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "CSSFunctionParameter",
          "description": "CSS 函数参数表示。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "参数名称。",
              "type": "string"
            },
            {
              "name": "type",
              "description": "参数类型。",
              "type": "string"
            }
          ]
        },
        {
          "id": "CSSFunctionConditionNode",
          "description": "CSS 函数条件块表示。",
          "type": "object",
          "properties": [
            {
              "name": "media",
              "description": "此条件块的媒体查询。只应设置一种类型的条件。",
              "optional": true,
              "$ref": "CSSMedia"
            },
            {
              "name": "containerQueries",
              "description": "此条件块的容器查询。只应设置一种类型的条件。",
              "optional": true,
              "$ref": "CSSContainerQuery"
            },
            {
              "name": "supports",
              "description": "@支持 CSS at 规则条件。只应设置一种类型的条件。",
              "optional": true,
              "$ref": "CSSSupports"
            },
            {
              "name": "children",
              "description": "块体。",
              "type": "array",
              "items": {
                "$ref": "CSSFunctionNode"
              }
            },
            {
              "name": "conditionText",
              "description": "条件文本。",
              "type": "string"
            }
          ]
        },
        {
          "id": "CSSFunctionNode",
          "description": "CSS 函数规则主体的部分。",
          "type": "object",
          "properties": [
            {
              "name": "condition",
              "description": "条件块。如果设置，则不应设置样式。",
              "optional": true,
              "$ref": "CSSFunctionConditionNode"
            },
            {
              "name": "style",
              "description": "该节点设置的值。如果设置，则不应设置条件。",
              "optional": true,
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "CSSFunctionRule",
          "description": "CSS 函数 at 规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "函数的名称。",
              "$ref": "Value"
            },
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "parameters",
              "description": "参数列表。",
              "type": "array",
              "items": {
                "$ref": "CSSFunctionParameter"
              }
            },
            {
              "name": "children",
              "description": "函数体。",
              "type": "array",
              "items": {
                "$ref": "CSSFunctionNode"
              }
            }
          ]
        },
        {
          "id": "CSSKeyframeRule",
          "description": "CSS 关键帧规则表示。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "css 样式表标识符（用户代理样式表和用户指定的样式表不存在）\n样式表规则）这条规则来自。",
              "optional": true,
              "$ref": "StyleSheetId"
            },
            {
              "name": "origin",
              "description": "父样式表的起源。",
              "$ref": "StyleSheetOrigin"
            },
            {
              "name": "keyText",
              "description": "相关的关键文本。",
              "$ref": "Value"
            },
            {
              "name": "style",
              "description": "关联的样式声明。",
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "id": "StyleDeclarationEdit",
          "description": "改变样式声明文本的操作描述符。",
          "type": "object",
          "properties": [
            {
              "name": "styleSheetId",
              "description": "CSS 样式表标识符。",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "description": "封闭样式表中样式文本的范围。",
              "$ref": "SourceRange"
            },
            {
              "name": "text",
              "description": "新样式的文本。",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "addRule",
          "description": "在具有给定“styleSheetId”的样式表中插入具有给定“ruleText”的新规则，位于\n由 `location` 指定的位置。",
          "parameters": [
            {
              "name": "styleSheetId",
              "description": "应插入新规则的 CSS 样式表标识符。",
              "$ref": "StyleSheetId"
            },
            {
              "name": "ruleText",
              "description": "新规则的文本。",
              "type": "string"
            },
            {
              "name": "location",
              "description": "新规则在目标样式表中的文本位置。",
              "$ref": "SourceRange"
            },
            {
              "name": "nodeForPropertySyntaxValidation",
              "description": "DOM 节点的 NodeId，在其上下文中注册属性的自定义属性声明应为\n已验证。如果省略，新规则文本中的声明只能静态验证，这可能会产生\n例如，如果声明包含 var()，则结果不正确。",
              "experimental": true,
              "optional": true,
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "rule",
              "description": "新创建的规则。",
              "$ref": "CSSRule"
            }
          ]
        },
        {
          "name": "collectClassNames",
          "description": "返回指定样式表中的所有类名。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            }
          ],
          "returns": [
            {
              "name": "classNames",
              "description": "班级名单。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "createStyleSheet",
          "description": "使用给定的“frameId”在框架中创建一个新的特殊“via-inspector”样式表。",
          "parameters": [
            {
              "name": "frameId",
              "description": "应在其中创建“via-inspector”样式表的框架的标识符。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "force",
              "description": "如果为 true，则为每次调用创建一个新的样式表。如果是假的，\n返回先前通过使用force=false的调用创建的样式表\n对于框架的文档（如果存在）或创建一个新的样式表\n（默认值：假）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "styleSheetId",
              "description": "创建的“via-inspector”样式表的标识符。",
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用给定页面的 CSS 代理。"
        },
        {
          "name": "enable",
          "description": "为给定页面启用 CSS 代理。客户端不应假设 CSS 代理已\n启用直到收到该命令的结果。"
        },
        {
          "name": "forcePseudoState",
          "description": "确保给定节点在其样式由以下方式计算时将具有指定的伪类\n浏览器。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "强制伪状态的元素 ID。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "forcedPseudoClasses",
              "description": "计算元素样式时强制使用的元素伪类。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "forceStartingStyle",
          "description": "确保给定节点处于其启动样式状态。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "强制进入起始样式状态的元素 ID。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "forced",
              "description": "指示此功能是打开还是关闭的布尔值。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getBackgroundColors",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取其背景颜色的节点的 ID。",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "backgroundColors",
              "description": "该元素后面的背景颜色范围（如果它包含任何可见文本）。如果没有\n存在可见文本，这将是未定义的。在背景颜色平坦的情况下，\n这将仅由该颜色组成。在梯度的情况下，这将由每个\n颜色停止。对于更复杂的情况，这将是一个空数组。图像将\n被忽略（就像图像加载失败一样）。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "computedFontSize",
              "description": "该节点的计算字体大小，作为 CSS 计算值字符串（例如“12px”）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "computedFontWeight",
              "description": "该节点的计算字体粗细，作为 CSS 计算值字符串（例如“正常”或\n'100'）。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getComputedStyleForNode",
          "description": "返回由“nodeId”标识的 DOM 节点的计算样式。",
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "computedStyle",
              "description": "指定 DOM 节点的计算样式。",
              "type": "array",
              "items": {
                "$ref": "CSSComputedStyleProperty"
              }
            },
            {
              "name": "extraFields",
              "description": "非标准“额外字段”列表，每个字段旁边都会闪烁存储\n计算风格。",
              "experimental": true,
              "$ref": "ComputedStyleExtraFields"
            }
          ]
        },
        {
          "name": "resolveValues",
          "description": "在提供的元素的上下文中解析指定的值。\n例如，根据计算得出的值“1em”进行评估\n元素的“font-size”和值“calc(1px + 2px)”将是\n解析为“3px”。\n如果指定了“propertyName”，则解析“values”，就像\n它们是财产声明。如果一个值不能被解析\n对于提供的属性语法，使用组合来解析该值\n语法就像提供了 null `propertyName` 一样。如果该值不能为\n即使这样也解决了，返回提供的值而不进行任何更改。",
          "experimental": true,
          "parameters": [
            {
              "name": "values",
              "description": "级联相关关键字（revert/revert-layer）不起作用。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "nodeId",
              "description": "在其上下文中计算表达式的节点的 ID",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "propertyName",
              "description": "仅接受普通写法和自定义属性名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "pseudoType",
              "description": "伪元素类型，仅适用于生成的伪元素\n树中的元素，例如 ::before 和 ::after。",
              "optional": true,
              "$ref": "DOM.PseudoType"
            },
            {
              "name": "pseudoIdentifier",
              "description": "伪元素自定义标识。",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "results",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "getLonghandProperties",
          "experimental": true,
          "parameters": [
            {
              "name": "shorthandName",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "longhandProperties",
              "type": "array",
              "items": {
                "$ref": "CSSProperty"
              }
            }
          ]
        },
        {
          "name": "getInlineStylesForNode",
          "description": "返回内联定义的样式（在“style”属性中显式定义，并使用 DOM 隐式定义）\n属性），用于由“nodeId”标识的 DOM 节点。",
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "inlineStyle",
              "description": "指定 DOM 节点的内联样式。",
              "optional": true,
              "$ref": "CSSStyle"
            },
            {
              "name": "attributesStyle",
              "description": "属性定义的元素样式（例如，由“width=20 height=100%”产生）。",
              "optional": true,
              "$ref": "CSSStyle"
            }
          ]
        },
        {
          "name": "getAnimatedStylesForNode",
          "description": "返回来自动画和过渡的样式\n包括来自继承链的动画和过渡样式。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "animationStyles",
              "description": "来自动画的样式。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSAnimationStyle"
              }
            },
            {
              "name": "transitionsStyle",
              "description": "风格来自于过渡。",
              "optional": true,
              "$ref": "CSSStyle"
            },
            {
              "name": "inherited",
              "description": "继承了animationsStyle和transitionsStyle的样式条目\n元素的继承链。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "InheritedAnimatedStyleEntry"
              }
            }
          ]
        },
        {
          "name": "getMatchedStylesForNode",
          "description": "返回由“nodeId”标识的 DOM 节点的请求样式。",
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "inlineStyle",
              "description": "指定 DOM 节点的内联样式。",
              "optional": true,
              "$ref": "CSSStyle"
            },
            {
              "name": "attributesStyle",
              "description": "属性定义的元素样式（例如，由“width=20 height=100%”产生）。",
              "optional": true,
              "$ref": "CSSStyle"
            },
            {
              "name": "matchedCSSRules",
              "description": "来自所有适用样式表的与此节点匹配的 CSS 规则。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "RuleMatch"
              }
            },
            {
              "name": "pseudoElements",
              "description": "该节点的伪样式匹配。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "PseudoElementMatches"
              }
            },
            {
              "name": "inherited",
              "description": "继承样式链（从直接父节点到 DOM 树根）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "InheritedStyleEntry"
              }
            },
            {
              "name": "inheritedPseudoElements",
              "description": "继承的伪元素样式链（从直接父节点到 DOM 树根）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "InheritedPseudoElementMatches"
              }
            },
            {
              "name": "cssKeyframesRules",
              "description": "与此节点匹配的 CSS 关键帧动画列表。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSKeyframesRule"
              }
            },
            {
              "name": "cssPositionTryRules",
              "description": "基于position-try-fallbacks 属性匹配此节点的CSS @position-try 规则列表。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSPositionTryRule"
              }
            },
            {
              "name": "activePositionFallbackIndex",
              "description": "所应用的position-try-fallback属性中活动后备的索引，\n如果没有活动位置尝试回退，则不会设置。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "cssPropertyRules",
              "description": "与此节点匹配的 CSS at-property 规则列表。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSPropertyRule"
              }
            },
            {
              "name": "cssPropertyRegistrations",
              "description": "与此节点匹配的 CSS 属性注册列表。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSPropertyRegistration"
              }
            },
            {
              "name": "cssFontPaletteValuesRule",
              "description": "与此节点匹配的字体调色板值规则。",
              "optional": true,
              "$ref": "CSSFontPaletteValuesRule"
            },
            {
              "name": "parentLayoutNodeId",
              "description": "第一个没有 display: content 的父元素的 ID。",
              "experimental": true,
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "cssFunctionRules",
              "description": "此节点的样式引用的 CSS at-function 规则列表。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "CSSFunctionRule"
              }
            }
          ]
        },
        {
          "name": "getEnvironmentVariables",
          "description": "返回 env() 中使用的默认 UA 定义的环境变量的值",
          "experimental": true,
          "returns": [
            {
              "name": "environmentVariables",
              "type": "object"
            }
          ]
        },
        {
          "name": "getMediaQueries",
          "description": "返回渲染引擎解析的所有媒体查询。",
          "returns": [
            {
              "name": "medias",
              "type": "array",
              "items": {
                "$ref": "CSSMedia"
              }
            }
          ]
        },
        {
          "name": "getPlatformFontsForNode",
          "description": "请求有关我们用于在给定中呈现子 TextNode 的平台字体的信息\n节点。",
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "fonts",
              "description": "每个使用的平台字体的使用统计。",
              "type": "array",
              "items": {
                "$ref": "PlatformFontUsage"
              }
            }
          ]
        },
        {
          "name": "getStyleSheetText",
          "description": "返回样式表的当前文本内容。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            }
          ],
          "returns": [
            {
              "name": "text",
              "description": "样式表文本。",
              "type": "string"
            }
          ]
        },
        {
          "name": "getLayersForNode",
          "description": "返回渲染引擎为节点的树范围解析的所有层。\n给定一个由nodeId标识的DOM元素，getLayersForNode返回根\n最近的祖先文档或影子根的层。层根包含\n树范围及其排序的完整层树。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "rootLayer",
              "$ref": "CSSLayerData"
            }
          ]
        },
        {
          "name": "getLocationForSelector",
          "description": "给定 CSS 选择器文本和样式表 ID，getLocationForSelector\n返回样式表中 CSS 选择器位置的数组。",
          "experimental": true,
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "selectorText",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "ranges",
              "type": "array",
              "items": {
                "$ref": "SourceRange"
              }
            }
          ]
        },
        {
          "name": "trackComputedStyleUpdatesForNode",
          "description": "开始跟踪给定节点的计算样式更新\n每当节点的计算样式更新时，它就会排队\n具有限制的“compatedStyleUpdated”事件。\n只能跟踪 1 个节点以进行计算样式更新\n因此传递新的节点 ID 会删除对前一个节点的跟踪。\n传递“undefined”以禁用跟踪。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "optional": true,
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "name": "trackComputedStyleUpdates",
          "description": "开始跟踪给定的计算样式的更新。指定的属性数组\n替换先前指定的那个。传递空数组以禁用跟踪。\n使用 takeCompatedStyleUpdates 检索已修改属性的节点列表。\n仅跟踪推送到前端的节点对计算样式属性的更改\n由 DOM 代理。如果节点推送后跟踪属性没有发生变化\n对于前端，不会向该节点发布任何更新。",
          "experimental": true,
          "parameters": [
            {
              "name": "propertiesToTrack",
              "type": "array",
              "items": {
                "$ref": "CSSComputedStyleProperty"
              }
            }
          ]
        },
        {
          "name": "takeComputedStyleUpdates",
          "description": "轮询下一批计算样式更新。",
          "experimental": true,
          "returns": [
            {
              "name": "nodeIds",
              "description": "已更新其跟踪的计算样式的节点 ID 列表。",
              "type": "array",
              "items": {
                "$ref": "DOM.NodeId"
              }
            }
          ]
        },
        {
          "name": "setEffectivePropertyValueForNode",
          "description": "查找给定节点具有给定活动属性的规则并为此设置新值\n财产",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置属性的元素 ID。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "propertyName",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "name": "setPropertyRulePropertyName",
          "description": "修改属性规则属性名称。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "propertyName",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "propertyName",
              "description": "修改后得到的关键文本。",
              "$ref": "Value"
            }
          ]
        },
        {
          "name": "setKeyframeKey",
          "description": "修改关键帧规则关键文本。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "keyText",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "keyText",
              "description": "修改后得到的关键文本。",
              "$ref": "Value"
            }
          ]
        },
        {
          "name": "setMediaText",
          "description": "修改规则选择器。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "media",
              "description": "修改后生成的 CSS 媒体规则。",
              "$ref": "CSSMedia"
            }
          ]
        },
        {
          "name": "setContainerQueryText",
          "description": "修改容器查询的表达式。",
          "experimental": true,
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "containerQuery",
              "description": "修改后得到的CSS容器查询规则。",
              "$ref": "CSSContainerQuery"
            }
          ]
        },
        {
          "name": "setSupportsText",
          "description": "修改支持 at 规则的表达式。",
          "experimental": true,
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "supports",
              "description": "修改后生成的 CSS 支持规则。",
              "$ref": "CSSSupports"
            }
          ]
        },
        {
          "name": "setScopeText",
          "description": "修改范围 at 规则的表达式。",
          "experimental": true,
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "scope",
              "description": "修改后生成的 CSS 范围规则。",
              "$ref": "CSSScope"
            }
          ]
        },
        {
          "name": "setRuleSelector",
          "description": "修改规则选择器。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "range",
              "$ref": "SourceRange"
            },
            {
              "name": "selector",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "selectorList",
              "description": "修改后生成的选择器列表。",
              "$ref": "SelectorList"
            }
          ]
        },
        {
          "name": "setStyleSheetText",
          "description": "设置新的样式表文本。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            },
            {
              "name": "text",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "sourceMapURL",
              "description": "与脚本关联的源映射的 URL（如果有）。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setStyleTexts",
          "description": "按给定顺序依次应用指定的样式编辑。",
          "parameters": [
            {
              "name": "edits",
              "type": "array",
              "items": {
                "$ref": "StyleDeclarationEdit"
              }
            },
            {
              "name": "nodeForPropertySyntaxValidation",
              "description": "DOM 节点的 NodeId，在其上下文中注册属性的自定义属性声明应为\n已验证。如果省略，新规则文本中的声明只能静态验证，这可能会产生\n例如，如果声明包含 var()，则结果不正确。",
              "experimental": true,
              "optional": true,
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "styles",
              "description": "修改后的最终样式。",
              "type": "array",
              "items": {
                "$ref": "CSSStyle"
              }
            }
          ]
        },
        {
          "name": "startRuleUsageTracking",
          "description": "启用选择器录音。"
        },
        {
          "name": "stopRuleUsageTracking",
          "description": "停止跟踪规则使用情况并返回自上次调用以来使用的规则列表\n`takeCoverageDelta`（或自覆盖检测开始以来）。",
          "returns": [
            {
              "name": "ruleUsage",
              "type": "array",
              "items": {
                "$ref": "RuleUsage"
              }
            }
          ]
        },
        {
          "name": "takeCoverageDelta",
          "description": "获取自上次调用此方法（或自覆盖范围开始以来）使用的规则列表\n仪器仪表）。",
          "returns": [
            {
              "name": "coverage",
              "type": "array",
              "items": {
                "$ref": "RuleUsage"
              }
            },
            {
              "name": "timestamp",
              "description": "单调递增的时间，以秒为单位。",
              "type": "number"
            }
          ]
        },
        {
          "name": "setLocalFontsEnabled",
          "description": "启用/禁用本地 CSS 字体的渲染（默认启用）。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否启用本地字体渲染。",
              "type": "boolean"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "fontsUpdated",
          "description": "每当更新网络字体时就会触发。  非空字体参数表示加载成功\n网络字体。",
          "parameters": [
            {
              "name": "font",
              "description": "已加载的网络字体。",
              "optional": true,
              "$ref": "FontFace"
            }
          ]
        },
        {
          "name": "mediaQueryResultChanged",
          "description": "每当 MediaQuery 结果更改时触发（例如，在浏览器窗口被更改后）\n调整大小。）当前的实现仅考虑视口相关的媒体功能。"
        },
        {
          "name": "styleSheetAdded",
          "description": "每当添加活动文档样式表时触发。",
          "parameters": [
            {
              "name": "header",
              "description": "添加了样式表元信息。",
              "$ref": "CSSStyleSheetHeader"
            }
          ]
        },
        {
          "name": "styleSheetChanged",
          "description": "每当由于客户端操作而更改样式表时触发。",
          "parameters": [
            {
              "name": "styleSheetId",
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "name": "styleSheetRemoved",
          "description": "每当删除活动文档样式表时触发。",
          "parameters": [
            {
              "name": "styleSheetId",
              "description": "已删除样式表的标识符。",
              "$ref": "StyleSheetId"
            }
          ]
        },
        {
          "name": "computedStyleUpdated",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "已更新计算样式的节点 ID。",
              "$ref": "DOM.NodeId"
            }
          ]
        }
      ]
    },
    {
      "domain": "CacheStorage",
      "experimental": true,
      "dependencies": [
        "Storage"
      ],
      "types": [
        {
          "id": "CacheId",
          "description": "Cache 对象的唯一标识符。",
          "type": "string"
        },
        {
          "id": "CachedResponseType",
          "description": "缓存的 HTTP 响应类型",
          "type": "string",
          "enum": [
            "basic",
            "cors",
            "default",
            "error",
            "opaqueResponse",
            "opaqueRedirect"
          ]
        },
        {
          "id": "DataEntry",
          "description": "数据输入。",
          "type": "object",
          "properties": [
            {
              "name": "requestURL",
              "description": "请求网址。",
              "type": "string"
            },
            {
              "name": "requestMethod",
              "description": "请求方法。",
              "type": "string"
            },
            {
              "name": "requestHeaders",
              "description": "请求标头",
              "type": "array",
              "items": {
                "$ref": "Header"
              }
            },
            {
              "name": "responseTime",
              "description": "自纪元以来的秒数。",
              "type": "number"
            },
            {
              "name": "responseStatus",
              "description": "HTTP 响应状态代码。",
              "type": "integer"
            },
            {
              "name": "responseStatusText",
              "description": "HTTP 响应状态文本。",
              "type": "string"
            },
            {
              "name": "responseType",
              "description": "HTTP 响应类型",
              "$ref": "CachedResponseType"
            },
            {
              "name": "responseHeaders",
              "description": "响应标头",
              "type": "array",
              "items": {
                "$ref": "Header"
              }
            }
          ]
        },
        {
          "id": "Cache",
          "description": "缓存标识符。",
          "type": "object",
          "properties": [
            {
              "name": "cacheId",
              "description": "缓存的不透明唯一 ID。",
              "$ref": "CacheId"
            },
            {
              "name": "securityOrigin",
              "description": "缓存的安全起源。",
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "缓存的存储键。",
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "缓存的存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "cacheName",
              "description": "缓存的名称。",
              "type": "string"
            }
          ]
        },
        {
          "id": "Header",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "CachedResponse",
          "description": "缓存响应",
          "type": "object",
          "properties": [
            {
              "name": "body",
              "description": "条目内容，base64 编码。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "deleteCache",
          "description": "删除缓存。",
          "parameters": [
            {
              "name": "cacheId",
              "description": "要删除的缓存 ID。",
              "$ref": "CacheId"
            }
          ]
        },
        {
          "name": "deleteEntry",
          "description": "删除缓存条目。",
          "parameters": [
            {
              "name": "cacheId",
              "description": "将删除条目的缓存 ID。",
              "$ref": "CacheId"
            },
            {
              "name": "request",
              "description": "请求的 URL 规范。",
              "type": "string"
            }
          ]
        },
        {
          "name": "requestCacheNames",
          "description": "请求缓存名称。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey、storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            }
          ],
          "returns": [
            {
              "name": "caches",
              "description": "安全源的缓存。",
              "type": "array",
              "items": {
                "$ref": "Cache"
              }
            }
          ]
        },
        {
          "name": "requestCachedResponse",
          "description": "获取缓存条目。",
          "parameters": [
            {
              "name": "cacheId",
              "description": "包含该条目的缓存的 ID。",
              "$ref": "CacheId"
            },
            {
              "name": "requestURL",
              "description": "请求的 URL 规范。",
              "type": "string"
            },
            {
              "name": "requestHeaders",
              "description": "请求的标头。",
              "type": "array",
              "items": {
                "$ref": "Header"
              }
            }
          ],
          "returns": [
            {
              "name": "response",
              "description": "从缓存中读取响应。",
              "$ref": "CachedResponse"
            }
          ]
        },
        {
          "name": "requestEntries",
          "description": "从缓存请求数据。",
          "parameters": [
            {
              "name": "cacheId",
              "description": "要从中获取条目的缓存 ID。",
              "$ref": "CacheId"
            },
            {
              "name": "skipCount",
              "description": "要跳过的记录数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pageSize",
              "description": "要获取的记录数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pathFilter",
              "description": "如果存在，则仅返回路径中包含此子字符串的条目",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "cacheDataEntries",
              "description": "对象存储数据条目的数组。",
              "type": "array",
              "items": {
                "$ref": "DataEntry"
              }
            },
            {
              "name": "returnCount",
              "description": "从该存储返回的条目的计数。如果pathFilter为空，则\n是该存储中所有条目的计数。",
              "type": "number"
            }
          ]
        }
      ]
    },
    {
      "domain": "Cast",
      "description": "用于与 Cast、Presentation API 和 Remote Playback API 交互的域\n功能。",
      "experimental": true,
      "types": [
        {
          "id": "Sink",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "session",
              "description": "描述当前会话的文本。仅当存在活动时才存在\n水槽上的会话。",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "开始观察可用于选项卡镜像的接收器，如果设置，\n与 |presentationUrl| 兼容的接收器以及。当发现水槽时，\n|水槽更新|事件被触发。\n还开始观察问题消息。添加或删除问题时，\n一个|问题更新|事件被触发。",
          "parameters": [
            {
              "name": "presentationUrl",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "disable",
          "description": "停止观察水槽和问题。"
        },
        {
          "name": "setSinkToUse",
          "description": "设置当网页请求浏览器选择一个时要使用的接收器\n通过演示 API、远程播放 API 或 Cast SDK 接收。",
          "parameters": [
            {
              "name": "sinkName",
              "type": "string"
            }
          ]
        },
        {
          "name": "startDesktopMirroring",
          "description": "开始将桌面镜像到接收器。",
          "parameters": [
            {
              "name": "sinkName",
              "type": "string"
            }
          ]
        },
        {
          "name": "startTabMirroring",
          "description": "开始将选项卡镜像到水槽。",
          "parameters": [
            {
              "name": "sinkName",
              "type": "string"
            }
          ]
        },
        {
          "name": "stopCasting",
          "description": "停止接收器上的活动 Cast 会话。",
          "parameters": [
            {
              "name": "sinkName",
              "type": "string"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "sinksUpdated",
          "description": "每当可用接收器列表发生变化时就会触发此事件。水槽是一个\n您可以投射到的设备或软件表面。",
          "parameters": [
            {
              "name": "sinks",
              "type": "array",
              "items": {
                "$ref": "Sink"
              }
            }
          ]
        },
        {
          "name": "issueUpdated",
          "description": "每当未解决的问题/错误消息发生变化时，就会触发此事件。\n|问题留言|如果没有问题则为空。",
          "parameters": [
            {
              "name": "issueMessage",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "DOM",
      "description": "该域公开 DOM 读/写操作。每个 DOM 节点都用其镜像对象表示\n有一个“id”。这个“id”可用于获取节点的附加信息，将其解析为\nJavaScript 对象包装器等。重要的是客户端仅接收 DOM 事件\n客户端已知的节点。后端跟踪发送到客户端的节点\n并且永远不会发送同一个节点两次。客户有责任收集有关的信息\n发送到客户端的节点。请注意，“iframe”所有者元素将返回\n相应的文档元素作为其子节点。",
      "dependencies": [
        "Runtime"
      ],
      "types": [
        {
          "id": "NodeId",
          "description": "唯一的 DOM 节点标识符。",
          "type": "integer"
        },
        {
          "id": "BackendNodeId",
          "description": "唯一的 DOM 节点标识符，用于引用可能尚未推送到的节点\n前端。",
          "type": "integer"
        },
        {
          "id": "BackendNode",
          "description": "具有友好名称的后端节点。",
          "type": "object",
          "properties": [
            {
              "name": "nodeType",
              "description": "`Node` 的节点类型。",
              "type": "integer"
            },
            {
              "name": "nodeName",
              "description": "`Node` 的节点名称。",
              "type": "string"
            },
            {
              "name": "backendNodeId",
              "$ref": "BackendNodeId"
            }
          ]
        },
        {
          "id": "PseudoType",
          "description": "伪元素类型。",
          "type": "string",
          "enum": [
            "first-line",
            "first-letter",
            "checkmark",
            "before",
            "after",
            "picker-icon",
            "interest-hint",
            "marker",
            "backdrop",
            "column",
            "selection",
            "search-text",
            "target-text",
            "spelling-error",
            "grammar-error",
            "highlight",
            "first-line-inherited",
            "scroll-marker",
            "scroll-marker-group",
            "scroll-button",
            "scrollbar",
            "scrollbar-thumb",
            "scrollbar-button",
            "scrollbar-track",
            "scrollbar-track-piece",
            "scrollbar-corner",
            "resizer",
            "input-list-button",
            "view-transition",
            "view-transition-group",
            "view-transition-image-pair",
            "view-transition-group-children",
            "view-transition-old",
            "view-transition-new",
            "placeholder",
            "file-selector-button",
            "details-content",
            "picker",
            "permission-icon"
          ]
        },
        {
          "id": "ShadowRootType",
          "description": "影根型。",
          "type": "string",
          "enum": [
            "user-agent",
            "open",
            "closed"
          ]
        },
        {
          "id": "CompatibilityMode",
          "description": "文档兼容模式。",
          "type": "string",
          "enum": [
            "QuirksMode",
            "LimitedQuirksMode",
            "NoQuirksMode"
          ]
        },
        {
          "id": "PhysicalAxes",
          "description": "ContainerSelector 物理轴",
          "type": "string",
          "enum": [
            "Horizontal",
            "Vertical",
            "Both"
          ]
        },
        {
          "id": "LogicalAxes",
          "description": "ContainerSelector 逻辑轴",
          "type": "string",
          "enum": [
            "Inline",
            "Block",
            "Both"
          ]
        },
        {
          "id": "ScrollOrientation",
          "description": "物理滚动方向",
          "type": "string",
          "enum": [
            "horizontal",
            "vertical"
          ]
        },
        {
          "id": "Node",
          "description": "DOM 交互是通过代表实际 DOM 节点的镜像对象来实现的。\nDOMNode 是基本节点镜像类型。",
          "type": "object",
          "properties": [
            {
              "name": "nodeId",
              "description": "作为“nodeId”传递到其余 DOM 消息中的节点标识符。后端\n只会推送一次具有给定“id”的节点。它知道所有请求的节点并且只会\n为客户端已知的节点触发 DOM 事件。",
              "$ref": "NodeId"
            },
            {
              "name": "parentId",
              "description": "父节点的 id（如果有）。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "该节点的 BackendNodeId。",
              "$ref": "BackendNodeId"
            },
            {
              "name": "nodeType",
              "description": "`Node` 的节点类型。",
              "type": "integer"
            },
            {
              "name": "nodeName",
              "description": "`Node` 的节点名称。",
              "type": "string"
            },
            {
              "name": "localName",
              "description": "`Node` 的本地名称。",
              "type": "string"
            },
            {
              "name": "nodeValue",
              "description": "`Node` 的节点值。",
              "type": "string"
            },
            {
              "name": "childNodeCount",
              "description": "“Container”节点的子节点计数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "children",
              "description": "当请求带有子节点时，该节点的子节点。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Node"
              }
            },
            {
              "name": "attributes",
              "description": "“Element”节点的属性，采用平面数组“[name1, value1, name2, value2]”的形式。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "documentURL",
              "description": "`Document` 或 `FrameOwner` 节点指向的文档 URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "baseURL",
              "description": "`Document` 或 `FrameOwner` 节点用于 URL 补全的基本 URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "publicId",
              "description": "`DocumentType` 的 publicId。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "systemId",
              "description": "`DocumentType` 的系统 ID。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "internalSubset",
              "description": "`DocumentType` 的内部子集。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "xmlVersion",
              "description": "如果是 XML 文档，则为“文档”的 XML 版本。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "name",
              "description": "`Attr` 的名字。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "`Attr` 的值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "pseudoType",
              "description": "该节点的伪元素类型。",
              "optional": true,
              "$ref": "PseudoType"
            },
            {
              "name": "pseudoIdentifier",
              "description": "该节点的伪元素标识符。仅当存在时才存在\n有效的伪类型。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "shadowRootType",
              "description": "影根型。",
              "optional": true,
              "$ref": "ShadowRootType"
            },
            {
              "name": "frameId",
              "description": "框架所有者元素的框架 ID。",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "contentDocument",
              "description": "框架所有者元素的内容文档。",
              "optional": true,
              "$ref": "Node"
            },
            {
              "name": "shadowRoots",
              "description": "给定元素主机的影子根列表。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Node"
              }
            },
            {
              "name": "templateContent",
              "description": "模板元素的内容文档片段。",
              "optional": true,
              "$ref": "Node"
            },
            {
              "name": "pseudoElements",
              "description": "与该节点关联的伪元素。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Node"
              }
            },
            {
              "name": "importedDocument",
              "description": "已弃用，因为 HTML 导入 API 已被删除 (crbug.com/937746)。\n此属性用于返回 HTMLImport 链接的导入文档。\n该属性现在总是未定义。",
              "deprecated": true,
              "optional": true,
              "$ref": "Node"
            },
            {
              "name": "distributedNodes",
              "description": "给定插入点的分布式节点。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "BackendNode"
              }
            },
            {
              "name": "isSVG",
              "description": "节点是否为 SVG。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "compatibilityMode",
              "optional": true,
              "$ref": "CompatibilityMode"
            },
            {
              "name": "assignedSlot",
              "optional": true,
              "$ref": "BackendNode"
            },
            {
              "name": "isScrollable",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "affectedByStartingStyles",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "DetachedElementInfo",
          "description": "用于保存分离树的顶级节点及其保留后代的数组的结构。",
          "type": "object",
          "properties": [
            {
              "name": "treeNode",
              "$ref": "Node"
            },
            {
              "name": "retainedNodeIds",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "id": "RGBA",
          "description": "保存 RGBA 颜色的结构。",
          "type": "object",
          "properties": [
            {
              "name": "r",
              "description": "红色分量，范围为 [0-255]。",
              "type": "integer"
            },
            {
              "name": "g",
              "description": "绿色分量，范围为 [0-255]。",
              "type": "integer"
            },
            {
              "name": "b",
              "description": "蓝色分量，范围为 [0-255]。",
              "type": "integer"
            },
            {
              "name": "a",
              "description": "alpha 分量，范围为 [0-1]（默认值：1）。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "Quad",
          "description": "四边形顶点数组，每个点的 x 后面紧跟着 y，点按顺时针方向排列。",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "id": "BoxModel",
          "description": "盒子模型。",
          "type": "object",
          "properties": [
            {
              "name": "content",
              "description": "内容框",
              "$ref": "Quad"
            },
            {
              "name": "padding",
              "description": "填充盒",
              "$ref": "Quad"
            },
            {
              "name": "border",
              "description": "边框框",
              "$ref": "Quad"
            },
            {
              "name": "margin",
              "description": "边距框",
              "$ref": "Quad"
            },
            {
              "name": "width",
              "description": "节点宽度",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "节点高度",
              "type": "integer"
            },
            {
              "name": "shapeOutside",
              "description": "形状外部坐标",
              "optional": true,
              "$ref": "ShapeOutsideInfo"
            }
          ]
        },
        {
          "id": "ShapeOutsideInfo",
          "description": "CSS 形状外部细节。",
          "type": "object",
          "properties": [
            {
              "name": "bounds",
              "description": "形状边界",
              "$ref": "Quad"
            },
            {
              "name": "shape",
              "description": "形状坐标详细信息",
              "type": "array",
              "items": {
                "type": "any"
              }
            },
            {
              "name": "marginShape",
              "description": "边距形状边界",
              "type": "array",
              "items": {
                "type": "any"
              }
            }
          ]
        },
        {
          "id": "Rect",
          "description": "长方形。",
          "type": "object",
          "properties": [
            {
              "name": "x",
              "description": "X坐标",
              "type": "number"
            },
            {
              "name": "y",
              "description": "Y坐标",
              "type": "number"
            },
            {
              "name": "width",
              "description": "矩形宽度",
              "type": "number"
            },
            {
              "name": "height",
              "description": "矩形高度",
              "type": "number"
            }
          ]
        },
        {
          "id": "CSSComputedStyleProperty",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "计算的样式属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "计算的样式属性值。",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "collectClassNamesFromSubtree",
          "description": "收集具有给定 id 的节点及其所有子节点的类名称。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "收集类名的节点的 ID。",
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "classNames",
              "description": "班级名单。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "copyTo",
          "description": "创建指定节点的深层副本，并将其放入目标容器之前\n给定的锚点。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "要复制的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "targetNodeId",
              "description": "要将副本放入的元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "insertBeforeNodeId",
              "description": "删除该节点之前的副本（如果不存在，该副本将成为该节点的最后一个子节点）\n`targetNodeId`)。",
              "optional": true,
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "节点克隆的 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "describeNode",
          "description": "描述给定其 ID 的节点，不需要启用域。不开始跟踪任何\n对象，可用于自动化。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "depth",
              "description": "应检索子级的最大深度，默认为 1。使用 -1 表示\n整个子树或提供一个大于 0 的整数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pierce",
              "description": "返回子树时是否应该遍历 iframe 和影子根\n（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "node",
              "description": "节点描述。",
              "$ref": "Node"
            }
          ]
        },
        {
          "name": "scrollIntoViewIfNeeded",
          "description": "如果给定节点的指定矩形尚不可见，则将其滚动到视图中。\n注意：nodeId、backendNodeId 和 objectId 之间应恰好传递一个\n来识别节点。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "rect",
              "description": "要滚动到视图中的矩形，相对于节点的边框框，以 CSS 像素为单位。\n省略时，将使用节点的中心，类似于 Element.scrollIntoView。",
              "optional": true,
              "$ref": "Rect"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用给定页面的 DOM 代理。"
        },
        {
          "name": "discardSearchResults",
          "description": "丢弃具有给定 ID 的会话的搜索结果。 `getSearchResults` 不应该再\n被要求进行该搜索。",
          "experimental": true,
          "parameters": [
            {
              "name": "searchId",
              "description": "唯一的搜索会话标识符。",
              "type": "string"
            }
          ]
        },
        {
          "name": "enable",
          "description": "为给定页面启用 DOM 代理。",
          "parameters": [
            {
              "name": "includeWhitespace",
              "description": "是否在返回节点的子数组中包含空格。",
              "experimental": true,
              "optional": true,
              "type": "string",
              "enum": [
                "none",
                "all"
              ]
            }
          ]
        },
        {
          "name": "focus",
          "description": "聚焦给定元素。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ]
        },
        {
          "name": "getAttributes",
          "description": "返回指定节点的属性。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要检索其属性的节点的 ID。",
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "attributes",
              "description": "节点属性名称和值的交错数组。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "getBoxModel",
          "description": "返回给定节点的框。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "model",
              "description": "节点的盒模型。",
              "$ref": "BoxModel"
            }
          ]
        },
        {
          "name": "getContentQuads",
          "description": "返回描述页面上节点位置的四边形。这个方法\n可能会为内联节点返回多个四边形。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "quads",
              "description": "描述相对于视口的节点布局的四边形。",
              "type": "array",
              "items": {
                "$ref": "Quad"
              }
            }
          ]
        },
        {
          "name": "getDocument",
          "description": "将根 DOM 节点（以及可选的子树）返回给调用者。\n隐式启用当前目标的 DOM 域事件。",
          "parameters": [
            {
              "name": "depth",
              "description": "应检索子级的最大深度，默认为 1。使用 -1 表示\n整个子树或提供一个大于 0 的整数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pierce",
              "description": "返回子树时是否应该遍历 iframe 和影子根\n（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "root",
              "description": "结果节点。",
              "$ref": "Node"
            }
          ]
        },
        {
          "name": "getFlattenedDocument",
          "description": "将根 DOM 节点（以及可选的子树）返回给调用者。\n已弃用，因为它的设计不能与 DOM 代理的其余部分很好地配合。\n请改用 DOMSnapshot.captureSnapshot。",
          "deprecated": true,
          "parameters": [
            {
              "name": "depth",
              "description": "应检索子级的最大深度，默认为 1。使用 -1 表示\n整个子树或提供一个大于 0 的整数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pierce",
              "description": "返回子树时是否应该遍历 iframe 和影子根\n（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "nodes",
              "description": "结果节点。",
              "type": "array",
              "items": {
                "$ref": "Node"
              }
            }
          ]
        },
        {
          "name": "getNodesForSubtreeByStyle",
          "description": "在子树中查找具有给定计算样式的节点。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "指向子树根的节点 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "computedStyles",
              "description": "用于过滤节点的样式（如果任何属性匹配，则包括节点）。",
              "type": "array",
              "items": {
                "$ref": "CSSComputedStyleProperty"
              }
            },
            {
              "name": "pierce",
              "description": "返回时是否应遍历同一目标中的 iframe 和影子根\n结果（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "结果节点。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "getNodeForLocation",
          "description": "返回给定位置的节点 ID。根据是否启用 DOM 域，nodeId 为\n要么返回，要么不返回。",
          "parameters": [
            {
              "name": "x",
              "description": "X 坐标。",
              "type": "integer"
            },
            {
              "name": "y",
              "description": "Y 坐标。",
              "type": "integer"
            },
            {
              "name": "includeUserAgentShadowDOM",
              "description": "如果为 False，则跳至最近的非 UA 影子根祖先（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "ignorePointerEventsNone",
              "description": "是否忽略元素上的指针事件：无并对它们进行命中测试。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "backendNodeId",
              "description": "结果节点。",
              "$ref": "BackendNodeId"
            },
            {
              "name": "frameId",
              "description": "该节点所属的框架。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "nodeId",
              "description": "仅当启用且请求文档时，给定坐标处的节点 ID。",
              "optional": true,
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "getOuterHTML",
          "description": "返回节点的 HTML 标记。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "includeShadowDOM",
              "description": "包括所有影子根。如果未指定则等于 false。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "outerHTML",
              "description": "外部 HTML 标记。",
              "type": "string"
            }
          ]
        },
        {
          "name": "getRelayoutBoundary",
          "description": "返回作为重新布局边界的最近祖先的 id。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的 ID。",
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "给定节点的重新布局边界节点 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "getSearchResults",
          "description": "使用给定的搜索返回从给定“fromIndex”到给定“toIndex”的搜索结果\n标识符。",
          "experimental": true,
          "parameters": [
            {
              "name": "searchId",
              "description": "唯一的搜索会话标识符。",
              "type": "string"
            },
            {
              "name": "fromIndex",
              "description": "要返回的搜索结果的起始索引。",
              "type": "integer"
            },
            {
              "name": "toIndex",
              "description": "返回的搜索结果的结束索引。",
              "type": "integer"
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "搜索结果节点的Id。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "hideHighlight",
          "description": "隐藏任何亮点。",
          "redirect": "Overlay"
        },
        {
          "name": "highlightNode",
          "description": "突出显示 DOM 节点。",
          "redirect": "Overlay"
        },
        {
          "name": "highlightRect",
          "description": "突出显示给定的矩形。",
          "redirect": "Overlay"
        },
        {
          "name": "markUndoableState",
          "description": "标记最后一个可撤消状态。",
          "experimental": true
        },
        {
          "name": "moveTo",
          "description": "将节点移动到新容器中，将其放置在给定锚点之前。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要移动的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "targetNodeId",
              "description": "要将移动的节点放入其中的元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "insertBeforeNodeId",
              "description": "删除此节点之前的节点（如果不存在，则移动的节点将成为该节点的最后一个子节点）\n`targetNodeId`)。",
              "optional": true,
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "移动节点的新 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "performSearch",
          "description": "在 DOM 树中搜索给定字符串。使用“getSearchResults”访问搜索结果或\n`cancelSearch` 结束此搜索会话。",
          "experimental": true,
          "parameters": [
            {
              "name": "query",
              "description": "纯文本或查询选择器或 XPath 搜索查询。",
              "type": "string"
            },
            {
              "name": "includeUserAgentShadowDOM",
              "description": "True 表示在用户代理影子 DOM 中进行搜索。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "searchId",
              "description": "唯一的搜索会话标识符。",
              "type": "string"
            },
            {
              "name": "resultCount",
              "description": "搜索结果数。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "pushNodeByPathToFrontend",
          "description": "请求将节点发送给给定路径的调用者。 // 修复，使用 XPath",
          "experimental": true,
          "parameters": [
            {
              "name": "path",
              "description": "专有格式的节点路径。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "给定路径的节点 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "pushNodesByBackendIdsToFrontend",
          "description": "请求将一批节点发送给给定后端节点 ID 的调用者。",
          "experimental": true,
          "parameters": [
            {
              "name": "backendNodeIds",
              "description": "后端节点 ID 数组。",
              "type": "array",
              "items": {
                "$ref": "BackendNodeId"
              }
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "与指定的后端 id 对应的推送节点的 id 数组\nbackendNodeIds。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "querySelector",
          "description": "在给定节点上执行“querySelector”。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要查询的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "selector",
              "description": "选择器字符串。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "查询选择器结果。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "querySelectorAll",
          "description": "在给定节点上执行“querySelectorAll”。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要查询的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "selector",
              "description": "选择器字符串。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "查询选择器结果。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "getTopLayerElements",
          "description": "返回当前顶层元素的NodeId。\n顶层在视口中最靠近用户渲染，因此它的元素始终\n显示在所有其他内容之上。",
          "experimental": true,
          "returns": [
            {
              "name": "nodeIds",
              "description": "顶层元素的NodeId",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "getElementByRelation",
          "description": "按照一定关系返回匹配元素的NodeId。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "从中查询关系的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "relation",
              "description": "要获取的关系类型。",
              "type": "string",
              "enum": [
                "PopoverTarget",
                "InterestTarget",
                "CommandFor"
              ]
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "与查询关系匹配的元素的 NodeId。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "redo",
          "description": "重新执行上次撤消的操作。",
          "experimental": true
        },
        {
          "name": "removeAttribute",
          "description": "从具有给定 id 的元素中删除具有给定名称的属性。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要从中删除属性的元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "name",
              "description": "要删除的属性的名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeNode",
          "description": "删除具有给定 id 的节点。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要删除的节点的 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "requestChildNodes",
          "description": "请求将具有给定 id 的节点的子节点以以下形式返回给调用者\n`setChildNodes` 事件不仅检索直接子节点，而且检索所有子节点\n指定的深度。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取子节点的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "depth",
              "description": "应检索子级的最大深度，默认为 1。使用 -1 表示\n整个子树或提供一个大于 0 的整数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pierce",
              "description": "返回子树时是否应该遍历iframe和shadow root\n（默认为 false）。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "requestNode",
          "description": "请求将节点发送给给定 JavaScript 节点对象引用的调用者。全部\n形成从节点到根的路径的节点也作为一系列\n`setChildNodes` 通知。",
          "parameters": [
            {
              "name": "objectId",
              "description": "要转换为节点的 JavaScript 对象 id。",
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "给定对象的节点 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "resolveNode",
          "description": "解析给定 NodeId 或 BackendNodeId 的 JavaScript 节点对象。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要解析的节点的 ID。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "要解析的节点的后端标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectGroup",
              "description": "可用于释放多个对象的符号组名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "executionContextId",
              "description": "解析节点的执行上下文。",
              "optional": true,
              "$ref": "Runtime.ExecutionContextId"
            }
          ],
          "returns": [
            {
              "name": "object",
              "description": "给定节点的 JavaScript 对象包装器。",
              "$ref": "Runtime.RemoteObject"
            }
          ]
        },
        {
          "name": "setAttributeValue",
          "description": "设置具有给定 id 的元素的属性。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置属性的元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "name",
              "description": "属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "属性值。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setAttributesAsText",
          "description": "设置具有给定 id 的元素的属性。当用户编辑一些现有的内容时，此方法很有用\n多个属性名称/值对中的属性值和类型。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置属性的元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "text",
              "description": "具有许多属性的文本。将使用 HTML 解析器解析此文本。",
              "type": "string"
            },
            {
              "name": "name",
              "description": "在解析文本的情况下，属性名称将替换为从文本派生的新属性\n成功。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setFileInputFiles",
          "description": "设置给定文件输入元素的文件。",
          "parameters": [
            {
              "name": "files",
              "description": "要设置的文件路径数组。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "nodeId",
              "description": "节点的标识符。",
              "optional": true,
              "$ref": "NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "后端节点的标识符。",
              "optional": true,
              "$ref": "BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ]
        },
        {
          "name": "setNodeStackTracesEnabled",
          "description": "设置是否应捕获节点的堆栈跟踪。请参阅“Node.getNodeStackTraces”。默认为禁用。",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "description": "启用或禁用。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getNodeStackTraces",
          "description": "获取与节点关联的堆栈跟踪。截至目前，仅提供节点创建的堆栈跟踪。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取其堆栈跟踪的节点的 ID。",
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "creation",
              "description": "创建堆栈跟踪（如果可用）。",
              "optional": true,
              "$ref": "Runtime.StackTrace"
            }
          ]
        },
        {
          "name": "getFileInfo",
          "description": "返回给定的文件信息\n文件包装器。",
          "experimental": true,
          "parameters": [
            {
              "name": "objectId",
              "description": "节点包装器的 JavaScript 对象 ID。",
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "path",
              "type": "string"
            }
          ]
        },
        {
          "name": "getDetachedDomNodes",
          "description": "返回分离节点的列表",
          "experimental": true,
          "returns": [
            {
              "name": "detachedNodes",
              "description": "分离节点列表",
              "type": "array",
              "items": {
                "$ref": "DetachedElementInfo"
              }
            }
          ]
        },
        {
          "name": "setInspectedNode",
          "description": "使控制台能够通过 $x 引用具有给定 id 的节点（有关更多详细信息，请参阅命令行 API\n$x 函数）。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "可通过 $x 命令行 API 访问 DOM 节点 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "setNodeName",
          "description": "设置具有给定 id 的节点的节点名称。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置名称的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "name",
              "description": "新节点的名称。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "新节点的 id。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "setNodeValue",
          "description": "设置具有给定 id 的节点的节点值。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置值的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "value",
              "description": "新节点的值。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setOuterHTML",
          "description": "设置节点 HTML 标记，返回新节点 id。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要为其设置标记的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "outerHTML",
              "description": "要设置的外部 HTML 标记。",
              "type": "string"
            }
          ]
        },
        {
          "name": "undo",
          "description": "撤消上次执行的操作。",
          "experimental": true
        },
        {
          "name": "getFrameOwner",
          "description": "返回拥有给定域的 iframe 的 iframe 节点。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "backendNodeId",
              "description": "结果节点。",
              "$ref": "BackendNodeId"
            },
            {
              "name": "nodeId",
              "description": "仅当启用且请求文档时，给定坐标处的节点 ID。",
              "optional": true,
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "getContainerForNode",
          "description": "根据容器查询返回给定节点的查询容器\n条件：容器名称、物理轴和逻辑轴、是否查询\n滚动状态或锚定元素。如果没有提供轴并且\nqueriesScrollState 为 false，返回样式容器，即\n直接父元素或具有匹配容器名称的最近元素。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "NodeId"
            },
            {
              "name": "containerName",
              "optional": true,
              "type": "string"
            },
            {
              "name": "physicalAxes",
              "optional": true,
              "$ref": "PhysicalAxes"
            },
            {
              "name": "logicalAxes",
              "optional": true,
              "$ref": "LogicalAxes"
            },
            {
              "name": "queriesScrollState",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "queriesAnchored",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "给定节点的容器节点，如果未找到则为 null。",
              "optional": true,
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "getQueryingDescendantsForContainer",
          "description": "返回具有以下属性的容器查询容器的后代\n针对此容器的容器查询。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "用于查找查询后代的容器节点的 ID。",
              "$ref": "NodeId"
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "具有针对给定容器的容器查询的后代节点。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "getAnchorElement",
          "description": "根据给定锚点查询返回目标锚点元素\nhttps://www.w3.org/TR/css-anchor-position-1/#target。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "从中查找锚点的定位元素的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "anchorSpecifier",
              "description": "可选的锚说明符，定义在\nhttps://www.w3.org/TR/css-anchor-position-1/#anchor-specifier。\n如果没有提供，它将返回隐式锚元素\n给定的定位元素。",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "nodeId",
              "description": "给定锚查询的锚元素。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "forceShowPopover",
          "description": "启用时，此 API 强制打开由 nodeId 标识的弹出窗口\n并使其保持打开状态直至禁用。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "弹出窗口 HTMLElement 的 ID",
              "$ref": "NodeId"
            },
            {
              "name": "enable",
              "description": "如果为 true，则打开弹出窗口并保持打开状态。如果为 false，则关闭\n弹出窗口（如果之前已强制打开）。",
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "nodeIds",
              "description": "为了遵守弹出窗口堆叠顺序而关闭的弹出窗口列表。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "attributeModified",
          "description": "当“Element”的属性被修改时触发。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "已更改的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "name",
              "description": "属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "属性值。",
              "type": "string"
            }
          ]
        },
        {
          "name": "attributeRemoved",
          "description": "当“Element”的属性被删除时触发。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "已更改的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "name",
              "description": "属性名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "characterDataModified",
          "description": "镜像“DOMCharacterDataModified”事件。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "已更改的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "characterData",
              "description": "新文本值。",
              "type": "string"
            }
          ]
        },
        {
          "name": "childNodeCountUpdated",
          "description": "当“Container”的子节点计数发生变化时触发。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "已更改的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "childNodeCount",
              "description": "新节点数。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "childNodeInserted",
          "description": "镜像“DOMNodeInserted”事件。",
          "parameters": [
            {
              "name": "parentNodeId",
              "description": "已更改的节点的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "previousNodeId",
              "description": "前一个兄弟姐妹的 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "node",
              "description": "插入节点数据。",
              "$ref": "Node"
            }
          ]
        },
        {
          "name": "childNodeRemoved",
          "description": "镜像“DOMNodeRemoved”事件。",
          "parameters": [
            {
              "name": "parentNodeId",
              "description": "家长 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "nodeId",
              "description": "已删除的节点的ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "distributedNodesUpdated",
          "description": "分配更改时调用。",
          "experimental": true,
          "parameters": [
            {
              "name": "insertionPointId",
              "description": "更新分布式节点的插入点。",
              "$ref": "NodeId"
            },
            {
              "name": "distributedNodes",
              "description": "给定插入点的分布式节点。",
              "type": "array",
              "items": {
                "$ref": "BackendNode"
              }
            }
          ]
        },
        {
          "name": "documentUpdated",
          "description": "当“文档”完全更新时触发。节点 ID 不再有效。"
        },
        {
          "name": "inlineStyleInvalidated",
          "description": "当通过 CSS 属性修改修改“Element”的内联样式时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeIds",
              "description": "内联样式已失效的节点的ID。",
              "type": "array",
              "items": {
                "$ref": "NodeId"
              }
            }
          ]
        },
        {
          "name": "pseudoElementAdded",
          "description": "当伪元素添加到元素时调用。",
          "experimental": true,
          "parameters": [
            {
              "name": "parentId",
              "description": "伪元素的父元素id。",
              "$ref": "NodeId"
            },
            {
              "name": "pseudoElement",
              "description": "添加的伪元素。",
              "$ref": "Node"
            }
          ]
        },
        {
          "name": "topLayerElementsUpdated",
          "description": "当顶层元素更改时调用。",
          "experimental": true
        },
        {
          "name": "scrollableFlagUpdated",
          "description": "当节点的可滚动性状态更改时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的 id。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "isScrollable",
              "description": "如果节点是可滚动的。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "affectedByStartingStylesFlagUpdated",
          "description": "当节点的起始样式更改时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "nodeId",
              "description": "节点的 id。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "affectedByStartingStyles",
              "description": "如果节点有起始样式。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "pseudoElementRemoved",
          "description": "当从元素中删除伪元素时调用。",
          "experimental": true,
          "parameters": [
            {
              "name": "parentId",
              "description": "伪元素的父元素id。",
              "$ref": "NodeId"
            },
            {
              "name": "pseudoElementId",
              "description": "删除的伪元素 id。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "setChildNodes",
          "description": "当后端想要向客户端提供缺少的 DOM 结构时触发。这发生在\n大多数请求节点 ID 的调用。",
          "parameters": [
            {
              "name": "parentId",
              "description": "用于填充子节点的父节点 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "nodes",
              "description": "子节点数组。",
              "type": "array",
              "items": {
                "$ref": "Node"
              }
            }
          ]
        },
        {
          "name": "shadowRootPopped",
          "description": "当影子根从元素中弹出时调用。",
          "experimental": true,
          "parameters": [
            {
              "name": "hostId",
              "description": "宿主元素 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "rootId",
              "description": "影子根 ID。",
              "$ref": "NodeId"
            }
          ]
        },
        {
          "name": "shadowRootPushed",
          "description": "当影子根被推入元素时调用。",
          "experimental": true,
          "parameters": [
            {
              "name": "hostId",
              "description": "宿主元素 ID。",
              "$ref": "NodeId"
            },
            {
              "name": "root",
              "description": "影根。",
              "$ref": "Node"
            }
          ]
        }
      ]
    },
    {
      "domain": "DOMDebugger",
      "description": "DOM 调试允许在特定 DOM 操作和事件上设置断点。 JavaScript\n执行将在这些操作上停止，就像设置了常规断点一样。",
      "dependencies": [
        "DOM",
        "Runtime"
      ],
      "types": [
        {
          "id": "DOMBreakpointType",
          "description": "DOM 断点类型。",
          "type": "string",
          "enum": [
            "subtree-modified",
            "attribute-modified",
            "node-removed"
          ]
        },
        {
          "id": "CSPViolationType",
          "description": "CSP 违规类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "trustedtype-sink-violation",
            "trustedtype-policy-violation"
          ]
        },
        {
          "id": "EventListener",
          "description": "对象事件监听器。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "`EventListener` 的类型。",
              "type": "string"
            },
            {
              "name": "useCapture",
              "description": "`EventListener` 的 useCapture。",
              "type": "boolean"
            },
            {
              "name": "passive",
              "description": "`EventListener` 的被动标志。",
              "type": "boolean"
            },
            {
              "name": "once",
              "description": "`EventListener` 的一次标志。",
              "type": "boolean"
            },
            {
              "name": "scriptId",
              "description": "处理程序代码的脚本 ID。",
              "$ref": "Runtime.ScriptId"
            },
            {
              "name": "lineNumber",
              "description": "脚本中的行号（从 0 开始）。",
              "type": "integer"
            },
            {
              "name": "columnNumber",
              "description": "脚本中的列号（从 0 开始）。",
              "type": "integer"
            },
            {
              "name": "handler",
              "description": "事件处理函数值。",
              "optional": true,
              "$ref": "Runtime.RemoteObject"
            },
            {
              "name": "originalHandler",
              "description": "事件原始处理函数值。",
              "optional": true,
              "$ref": "Runtime.RemoteObject"
            },
            {
              "name": "backendNodeId",
              "description": "侦听器添加到的节点（如果有）。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getEventListeners",
          "description": "返回给定对象的事件侦听器。",
          "parameters": [
            {
              "name": "objectId",
              "description": "要为其返回侦听器的对象的标识符。",
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "depth",
              "description": "应检索 Node 子节点的最大深度，默认为 1。使用 -1\n整个子树或提供一个大于 0 的整数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pierce",
              "description": "返回子树时是否应该遍历 iframe 和影子根\n（默认为 false）。如果启用了 pierce，则报告所有上下文的侦听器。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "listeners",
              "description": "相关侦听器的数组。",
              "type": "array",
              "items": {
                "$ref": "EventListener"
              }
            }
          ]
        },
        {
          "name": "removeDOMBreakpoint",
          "description": "删除使用 setDOMBreakpoint 设置的 DOM 断点。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要从中删除断点的节点的标识符。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "type",
              "description": "要删除的断点的类型。",
              "$ref": "DOMBreakpointType"
            }
          ]
        },
        {
          "name": "removeEventListenerBreakpoint",
          "description": "删除特定 DOM 事件上的断点。",
          "parameters": [
            {
              "name": "eventName",
              "description": "活动名称。",
              "type": "string"
            },
            {
              "name": "targetName",
              "description": "EventTarget 接口名称。",
              "experimental": true,
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "removeInstrumentationBreakpoint",
          "description": "删除特定本机事件上的断点。",
          "experimental": true,
          "deprecated": true,
          "redirect": "EventBreakpoints",
          "parameters": [
            {
              "name": "eventName",
              "description": "要停止的仪器名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeXHRBreakpoint",
          "description": "从 XMLHttpRequest 中删除断点。",
          "parameters": [
            {
              "name": "url",
              "description": "资源 URL 子字符串。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setBreakOnCSPViolation",
          "description": "在特定 CSP 违规上设置断点。",
          "experimental": true,
          "parameters": [
            {
              "name": "violationTypes",
              "description": "停止 CSP 违规行为。",
              "type": "array",
              "items": {
                "$ref": "CSPViolationType"
              }
            }
          ]
        },
        {
          "name": "setDOMBreakpoint",
          "description": "在 DOM 的特定操作上设置断点。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要设置断点的节点的标识符。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "type",
              "description": "要停止的操作类型。",
              "$ref": "DOMBreakpointType"
            }
          ]
        },
        {
          "name": "setEventListenerBreakpoint",
          "description": "在特定 DOM 事件上设置断点。",
          "parameters": [
            {
              "name": "eventName",
              "description": "要停止的 DOM 事件名称（任何 DOM 事件都可以）。",
              "type": "string"
            },
            {
              "name": "targetName",
              "description": "要停止的 EventTarget 接口名称。如果等于“*”或未提供，将停止在任何\n事件目标。",
              "experimental": true,
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setInstrumentationBreakpoint",
          "description": "在特定本机事件上设置断点。",
          "experimental": true,
          "deprecated": true,
          "redirect": "EventBreakpoints",
          "parameters": [
            {
              "name": "eventName",
              "description": "要停止的仪器名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setXHRBreakpoint",
          "description": "在 XMLHttpRequest 上设置断点。",
          "parameters": [
            {
              "name": "url",
              "description": "资源 URL 子字符串。 URL 中包含此子字符串的所有 XHR 都将被停止。",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "DOMSnapshot",
      "description": "该域有助于获取包含 DOM、布局和样式信息的文档快照。",
      "experimental": true,
      "dependencies": [
        "CSS",
        "DOM",
        "DOMDebugger",
        "Page"
      ],
      "types": [
        {
          "id": "DOMNode",
          "description": "DOM 树中的节点。",
          "type": "object",
          "properties": [
            {
              "name": "nodeType",
              "description": "`Node` 的节点类型。",
              "type": "integer"
            },
            {
              "name": "nodeName",
              "description": "`Node` 的节点名称。",
              "type": "string"
            },
            {
              "name": "nodeValue",
              "description": "`Node` 的节点值。",
              "type": "string"
            },
            {
              "name": "textValue",
              "description": "仅为textarea元素设置，包含文本值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "inputValue",
              "description": "仅针对输入元素设置，包含输入的关联文本值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "inputChecked",
              "description": "仅为单选和复选框输入元素设置，指示该元素是否已被选中",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "optionSelected",
              "description": "仅为选项元素设置，指示该元素是否已被选择",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "backendNodeId",
              "description": "`Node` 的 id，对应于 DOM.Node.backendNodeId。",
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "childNodeIndexes",
              "description": "getSnapshot 返回的 domNodes 数组中该节点的子节点的索引，如果\n任何。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "attributes",
              "description": "“Element”节点的属性。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "NameValue"
              }
            },
            {
              "name": "pseudoElementIndexes",
              "description": "返回的“domNodes”数组中与此节点关联的伪元素的索引\n`getSnapshot`，如果有的话。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "layoutNodeIndex",
              "description": "返回的`layoutTreeNodes`数组中该节点相关布局树节点的索引\n`getSnapshot`，如果有的话。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "documentURL",
              "description": "`Document` 或 `FrameOwner` 节点指向的文档 URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "baseURL",
              "description": "`Document` 或 `FrameOwner` 节点用于 URL 补全的基本 URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "contentLanguage",
              "description": "仅为文档设置，包含文档的内容语言。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "documentEncoding",
              "description": "仅为文档设置，包含文档的字符集编码。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "publicId",
              "description": "`DocumentType` 节点的 publicId。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "systemId",
              "description": "`DocumentType` 节点的 systemId。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "frameId",
              "description": "框架所有者元素以及文档节点的框架 ID。",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "contentDocumentIndex",
              "description": "返回的“domNodes”数组中框架所有者元素的内容文档的索引\n`getSnapshot`，如果有的话。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "pseudoType",
              "description": "伪元素节点的类型。",
              "optional": true,
              "$ref": "DOM.PseudoType"
            },
            {
              "name": "shadowRootType",
              "description": "影根型。",
              "optional": true,
              "$ref": "DOM.ShadowRootType"
            },
            {
              "name": "isClickable",
              "description": "该 DOM 节点是否响应鼠标点击。这包括已单击的节点\n通过 JavaScript 附加的事件侦听器以及在以下情况下自然导航的锚标记\n点击。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "eventListeners",
              "description": "节点事件侦听器的详细信息（如果有）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "DOMDebugger.EventListener"
              }
            },
            {
              "name": "currentSourceURL",
              "description": "具有 srcset 属性的节点的选定 url。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "originURL",
              "description": "生成此节点的脚本（如果有）的 url。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "scrollOffsetX",
              "description": "滚动偏移量，当该节点是文档时设置。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "scrollOffsetY",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "InlineTextBox",
          "description": "帖子布局渲染文本位置的详细信息。确切的布局不应视为\n稳定，并且可能在版本之间发生变化。",
          "type": "object",
          "properties": [
            {
              "name": "boundingBox",
              "description": "文档坐标中的边界框。请注意，文档的滚动偏移量将被忽略。",
              "$ref": "DOM.Rect"
            },
            {
              "name": "startCharacterIndex",
              "description": "此帖子布局文本框子字符串的起始索引（以字符为单位）。字符\n将表示为 UTF-16 中长度为 2 的代理对。",
              "type": "integer"
            },
            {
              "name": "numCharacters",
              "description": "此帖子布局文本框子字符串中的字符数。字符将是\n在 UTF-16 中表示为代理对，长度为 2。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "LayoutTreeNode",
          "description": "带有 LayoutObject 的 DOM 树中元素的详细信息。",
          "type": "object",
          "properties": [
            {
              "name": "domNodeIndex",
              "description": "getSnapshot 返回的 domNodes 数组中相关 DOM 节点的索引。",
              "type": "integer"
            },
            {
              "name": "boundingBox",
              "description": "文档坐标中的边界框。请注意，文档的滚动偏移量将被忽略。",
              "$ref": "DOM.Rect"
            },
            {
              "name": "layoutText",
              "description": "LayoutText 的内容（如果有）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "inlineTextNodes",
              "description": "布局后内联文本节点（如果有）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "InlineTextBox"
              }
            },
            {
              "name": "styleIndex",
              "description": "由“getSnapshot”返回的“compulatedStyles”数组的索引。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "paintOrder",
              "description": "全局绘制顺序索引，由节点的堆叠顺序决定。节点\n一起绘制的将具有相同的索引。仅当 includePaintOrder 时提供\ngetSnapshot 是正确的。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "isStackingContext",
              "description": "设置为 true 表示元素开始新的堆叠上下文。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "ComputedStyle",
          "description": "请求白名单定义的完整 ComputedStyle 的子集。",
          "type": "object",
          "properties": [
            {
              "name": "properties",
              "description": "计算样式属性的名称/值对。",
              "type": "array",
              "items": {
                "$ref": "NameValue"
              }
            }
          ]
        },
        {
          "id": "NameValue",
          "description": "名称/值对。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "属性/属性名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "属性/属性值。",
              "type": "string"
            }
          ]
        },
        {
          "id": "StringIndex",
          "description": "字符串在字符串表中的索引。",
          "type": "integer"
        },
        {
          "id": "ArrayOfStrings",
          "description": "字符串在字符串表中的索引。",
          "type": "array",
          "items": {
            "$ref": "StringIndex"
          }
        },
        {
          "id": "RareStringData",
          "description": "仅存在于稀有节点上的数据。",
          "type": "object",
          "properties": [
            {
              "name": "index",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "value",
              "type": "array",
              "items": {
                "$ref": "StringIndex"
              }
            }
          ]
        },
        {
          "id": "RareBooleanData",
          "type": "object",
          "properties": [
            {
              "name": "index",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          ]
        },
        {
          "id": "RareIntegerData",
          "type": "object",
          "properties": [
            {
              "name": "index",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "value",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          ]
        },
        {
          "id": "Rectangle",
          "type": "array",
          "items": {
            "type": "number"
          }
        },
        {
          "id": "DocumentSnapshot",
          "description": "文档快照。",
          "type": "object",
          "properties": [
            {
              "name": "documentURL",
              "description": "`Document` 或 `FrameOwner` 节点指向的文档 URL。",
              "$ref": "StringIndex"
            },
            {
              "name": "title",
              "description": "文档标题。",
              "$ref": "StringIndex"
            },
            {
              "name": "baseURL",
              "description": "`Document` 或 `FrameOwner` 节点用于 URL 补全的基本 URL。",
              "$ref": "StringIndex"
            },
            {
              "name": "contentLanguage",
              "description": "包含文档的内容语言。",
              "$ref": "StringIndex"
            },
            {
              "name": "encodingName",
              "description": "包含文档的字符集编码。",
              "$ref": "StringIndex"
            },
            {
              "name": "publicId",
              "description": "`DocumentType` 节点的 publicId。",
              "$ref": "StringIndex"
            },
            {
              "name": "systemId",
              "description": "`DocumentType` 节点的 systemId。",
              "$ref": "StringIndex"
            },
            {
              "name": "frameId",
              "description": "框架所有者元素以及文档节点的框架 ID。",
              "$ref": "StringIndex"
            },
            {
              "name": "nodes",
              "description": "带有 dom 节点的表。",
              "$ref": "NodeTreeSnapshot"
            },
            {
              "name": "layout",
              "description": "布局树中的节点。",
              "$ref": "LayoutTreeSnapshot"
            },
            {
              "name": "textBoxes",
              "description": "布局后内联文本节点。",
              "$ref": "TextBoxSnapshot"
            },
            {
              "name": "scrollOffsetX",
              "description": "水平滚动偏移。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "scrollOffsetY",
              "description": "垂直滚动偏移。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "contentWidth",
              "description": "文档内容宽度。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "contentHeight",
              "description": "文档内容高度。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "NodeTreeSnapshot",
          "description": "包含节点的表。",
          "type": "object",
          "properties": [
            {
              "name": "parentIndex",
              "description": "父节点索引。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "nodeType",
              "description": "`Node` 的节点类型。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "shadowRootType",
              "description": "`Node` 所在影子根的类型。字符串值等于 `ShadowRootType` 枚举。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "nodeName",
              "description": "`Node` 的节点名称。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "StringIndex"
              }
            },
            {
              "name": "nodeValue",
              "description": "`Node` 的节点值。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "StringIndex"
              }
            },
            {
              "name": "backendNodeId",
              "description": "`Node` 的 id，对应于 DOM.Node.backendNodeId。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "DOM.BackendNodeId"
              }
            },
            {
              "name": "attributes",
              "description": "“Element”节点的属性。扁平化名称、值对。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ArrayOfStrings"
              }
            },
            {
              "name": "textValue",
              "description": "仅为textarea元素设置，包含文本值。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "inputValue",
              "description": "仅针对输入元素设置，包含输入的关联文本值。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "inputChecked",
              "description": "仅为单选和复选框输入元素设置，指示该元素是否已被选中",
              "optional": true,
              "$ref": "RareBooleanData"
            },
            {
              "name": "optionSelected",
              "description": "仅为选项元素设置，指示该元素是否已被选择",
              "optional": true,
              "$ref": "RareBooleanData"
            },
            {
              "name": "contentDocumentIndex",
              "description": "快照文档列表中文档的索引。",
              "optional": true,
              "$ref": "RareIntegerData"
            },
            {
              "name": "pseudoType",
              "description": "伪元素节点的类型。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "pseudoIdentifier",
              "description": "该节点的伪元素标识符。仅当存在时才存在\n有效的伪类型。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "isClickable",
              "description": "该 DOM 节点是否响应鼠标点击。这包括已单击的节点\n通过 JavaScript 附加的事件侦听器以及在以下情况下自然导航的锚标记\n点击。",
              "optional": true,
              "$ref": "RareBooleanData"
            },
            {
              "name": "currentSourceURL",
              "description": "具有 srcset 属性的节点的选定 url。",
              "optional": true,
              "$ref": "RareStringData"
            },
            {
              "name": "originURL",
              "description": "生成此节点的脚本（如果有）的 url。",
              "optional": true,
              "$ref": "RareStringData"
            }
          ]
        },
        {
          "id": "LayoutTreeSnapshot",
          "description": "带有 LayoutObject 的 DOM 树中元素的详细信息表。",
          "type": "object",
          "properties": [
            {
              "name": "nodeIndex",
              "description": "“captureSnapshot”返回的“NodeTreeSnapshot”数组中相应节点的索引。",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "styles",
              "description": "指定计算样式字符串的索引数组，根据传递给“captureSnapshot”的“compulatedStyles”参数进行过滤。",
              "type": "array",
              "items": {
                "$ref": "ArrayOfStrings"
              }
            },
            {
              "name": "bounds",
              "description": "绝对位置边界框。",
              "type": "array",
              "items": {
                "$ref": "Rectangle"
              }
            },
            {
              "name": "text",
              "description": "LayoutText 的内容（如果有）。",
              "type": "array",
              "items": {
                "$ref": "StringIndex"
              }
            },
            {
              "name": "stackingContexts",
              "description": "堆叠上下文信息。",
              "$ref": "RareBooleanData"
            },
            {
              "name": "paintOrders",
              "description": "全局绘制顺序索引，由节点的堆叠顺序决定。节点\n一起绘制的将具有相同的索引。仅当 includePaintOrder 时提供\ncaptureSnapshot 是正确的。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "offsetRects",
              "description": "节点的偏移矩形。仅当 includeDOMRects 设置为 true 时可用",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Rectangle"
              }
            },
            {
              "name": "scrollRects",
              "description": "节点的滚动矩形。仅当 includeDOMRects 设置为 true 时可用",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Rectangle"
              }
            },
            {
              "name": "clientRects",
              "description": "节点的客户端矩形。仅当 includeDOMRects 设置为 true 时可用",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Rectangle"
              }
            },
            {
              "name": "blendedBackgroundColors",
              "description": "与重叠元素的颜色混合的背景颜色列表。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "StringIndex"
              }
            },
            {
              "name": "textColorOpacities",
              "description": "计算文本不透明度的列表。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          ]
        },
        {
          "id": "TextBoxSnapshot",
          "description": "帖子布局渲染文本位置的详细信息表。确切的布局不应视为\n稳定，并且可能在版本之间发生变化。",
          "type": "object",
          "properties": [
            {
              "name": "layoutIndex",
              "description": "拥有此框集合的布局树节点的索引。",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "bounds",
              "description": "绝对位置边界框。",
              "type": "array",
              "items": {
                "$ref": "Rectangle"
              }
            },
            {
              "name": "start",
              "description": "此帖子布局文本框子字符串的起始索引（以字符为单位）。字符\n将表示为 UTF-16 中长度为 2 的代理对。",
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            {
              "name": "length",
              "description": "此帖子布局文本框子字符串中的字符数。字符将是\n在 UTF-16 中表示为代理对，长度为 2。",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用给定页面的 DOM 快照代理。"
        },
        {
          "name": "enable",
          "description": "为给定页面启用 DOM 快照代理。"
        },
        {
          "name": "getSnapshot",
          "description": "返回文档快照，包括根节点的完整 DOM 树（包括 iframe、\n模板内容和导入的文档）在扁平数组中，以及布局和\n节点的白名单计算样式信息。返回的 DOM 树中的 Shadow DOM 为\n压扁了。",
          "deprecated": true,
          "parameters": [
            {
              "name": "computedStyleWhitelist",
              "description": "要返回的计算样式的白名单。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "includeEventListeners",
              "description": "是否检索 DOM 侦听器的详细信息（默认 false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includePaintOrder",
              "description": "是否确定并包含 LayoutTreeNodes 的绘制顺序索引（默认 false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includeUserAgentShadowTree",
              "description": "是否在快照中包含 UA 影子树（默认 false）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "domNodes",
              "description": "DOM 树中的节点。索引 0 处的 DOMNode 对应于根文档。",
              "type": "array",
              "items": {
                "$ref": "DOMNode"
              }
            },
            {
              "name": "layoutTreeNodes",
              "description": "布局树中的节点。",
              "type": "array",
              "items": {
                "$ref": "LayoutTreeNode"
              }
            },
            {
              "name": "computedStyles",
              "description": "布局树中每个节点的已列入白名单的 ComputedStyle 属性。",
              "type": "array",
              "items": {
                "$ref": "ComputedStyle"
              }
            }
          ]
        },
        {
          "name": "captureSnapshot",
          "description": "返回文档快照，包括根节点的完整 DOM 树（包括 iframe、\n模板内容和导入的文档）在扁平数组中，以及布局和\n节点的白名单计算样式信息。返回的 DOM 树中的 Shadow DOM 为\n压扁了。",
          "parameters": [
            {
              "name": "computedStyles",
              "description": "要返回的计算样式的白名单。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "includePaintOrder",
              "description": "是否将布局对象绘制顺序包含到快照中。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includeDOMRects",
              "description": "是否将 DOM 矩形（offsetRects、clientRects、scrollRects）包含到快照中",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includeBlendedBackgroundColors",
              "description": "是否在快照中包含混合背景颜色（默认值：false）。\n混合背景色是通过混合所有元素的背景色来实现的\n与当前元素重叠。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includeTextColorOpacities",
              "description": "是否在快照中包含文本颜色不透明度（默认值：false）。\n元素可能设置了影响元素文本颜色的不透明度属性。\n最终文本颜色不透明度是根据所有重叠元素的不透明度计算的。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "documents",
              "description": "DOM 树中的节点。索引 0 处的 DOMNode 对应于根文档。",
              "type": "array",
              "items": {
                "$ref": "DocumentSnapshot"
              }
            },
            {
              "name": "strings",
              "description": "所有字符串属性都通过索引引用的共享字符串表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "DOMStorage",
      "description": "查询和修改 DOM 存储。",
      "experimental": true,
      "types": [
        {
          "id": "SerializedStorageKey",
          "type": "string"
        },
        {
          "id": "StorageId",
          "description": "DOM 存储标识符。",
          "type": "object",
          "properties": [
            {
              "name": "securityOrigin",
              "description": "存储的安全来源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "表示 DOM Storage 为其 CachedStorageAreas 指定键的键",
              "optional": true,
              "$ref": "SerializedStorageKey"
            },
            {
              "name": "isLocalStorage",
              "description": "存储是否是本地存储（不是会话存储）。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Item",
          "description": "DOM 存储项。",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "commands": [
        {
          "name": "clear",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用存储跟踪，防止存储事件发送到客户端。"
        },
        {
          "name": "enable",
          "description": "启用存储跟踪，存储事件现在将传递到客户端。"
        },
        {
          "name": "getDOMStorageItems",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            }
          ],
          "returns": [
            {
              "name": "entries",
              "type": "array",
              "items": {
                "$ref": "Item"
              }
            }
          ]
        },
        {
          "name": "removeDOMStorageItem",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            },
            {
              "name": "key",
              "type": "string"
            }
          ]
        },
        {
          "name": "setDOMStorageItem",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "domStorageItemAdded",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "newValue",
              "type": "string"
            }
          ]
        },
        {
          "name": "domStorageItemRemoved",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            },
            {
              "name": "key",
              "type": "string"
            }
          ]
        },
        {
          "name": "domStorageItemUpdated",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "oldValue",
              "type": "string"
            },
            {
              "name": "newValue",
              "type": "string"
            }
          ]
        },
        {
          "name": "domStorageItemsCleared",
          "parameters": [
            {
              "name": "storageId",
              "$ref": "StorageId"
            }
          ]
        }
      ]
    },
    {
      "domain": "DeviceAccess",
      "experimental": true,
      "types": [
        {
          "id": "RequestId",
          "description": "设备请求 ID。",
          "type": "string"
        },
        {
          "id": "DeviceId",
          "description": "设备 ID。",
          "type": "string"
        },
        {
          "id": "PromptDevice",
          "description": "提示用户选择设备时显示的设备信息。",
          "type": "object",
          "properties": [
            {
              "name": "id",
              "$ref": "DeviceId"
            },
            {
              "name": "name",
              "description": "显示设备请求用户提示中出现的名称。",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "启用此域中的事件。"
        },
        {
          "name": "disable",
          "description": "禁用该域中的事件。"
        },
        {
          "name": "selectPrompt",
          "description": "选择设备以响应 DeviceAccess.deviceRequestPrompted 事件。",
          "parameters": [
            {
              "name": "id",
              "$ref": "RequestId"
            },
            {
              "name": "deviceId",
              "$ref": "DeviceId"
            }
          ]
        },
        {
          "name": "cancelPrompt",
          "description": "取消响应 DeviceAccess.deviceRequestPrompted 事件的提示。",
          "parameters": [
            {
              "name": "id",
              "$ref": "RequestId"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "deviceRequestPrompted",
          "description": "设备请求会打开用户提示以选择设备。回应\n选择提示或取消提示命令。",
          "parameters": [
            {
              "name": "id",
              "$ref": "RequestId"
            },
            {
              "name": "devices",
              "type": "array",
              "items": {
                "$ref": "PromptDevice"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "DeviceOrientation",
      "experimental": true,
      "commands": [
        {
          "name": "clearDeviceOrientationOverride",
          "description": "清除覆盖的设备方向。"
        },
        {
          "name": "setDeviceOrientationOverride",
          "description": "覆盖设备方向。",
          "parameters": [
            {
              "name": "alpha",
              "description": "模拟阿尔法",
              "type": "number"
            },
            {
              "name": "beta",
              "description": "模拟测试版",
              "type": "number"
            },
            {
              "name": "gamma",
              "description": "模拟伽玛",
              "type": "number"
            }
          ]
        }
      ]
    },
    {
      "domain": "Emulation",
      "description": "该域模拟页面的不同环境。",
      "dependencies": [
        "DOM",
        "Page",
        "Runtime"
      ],
      "types": [
        {
          "id": "SafeAreaInsets",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "top",
              "description": "覆盖安全区域插入顶部。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "topMax",
              "description": "覆盖安全区域最大插入顶部。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "left",
              "description": "覆盖左侧安全区域插入。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "leftMax",
              "description": "覆盖 safe-area-max-inset-left。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "bottom",
              "description": "覆盖安全区域插入底部。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "bottomMax",
              "description": "覆盖安全区域最大插入底部。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "right",
              "description": "覆盖右侧安全区域插入。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "rightMax",
              "description": "覆盖 safe-area-max-inset-right。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "ScreenOrientation",
          "description": "屏幕方向。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "定向类型。",
              "type": "string",
              "enum": [
                "portraitPrimary",
                "portraitSecondary",
                "landscapePrimary",
                "landscapeSecondary"
              ]
            },
            {
              "name": "angle",
              "description": "方位角。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "DisplayFeature",
          "type": "object",
          "properties": [
            {
              "name": "orientation",
              "description": "显示特征相对于屏幕的方向",
              "type": "string",
              "enum": [
                "vertical",
                "horizontal"
              ]
            },
            {
              "name": "offset",
              "description": "距屏幕原点的偏移量（垂直方向）\n方向）或 y（水平方向）方向。",
              "type": "integer"
            },
            {
              "name": "maskLength",
              "description": "显示功能可能会屏蔽内容，使其在物理上不存在\n显示 - 该长度与偏移量一起描述了该区域。\n仅分割内容的显示功能的 mask_length 为 0。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "DevicePosture",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "设备当前姿态",
              "type": "string",
              "enum": [
                "continuous",
                "folded"
              ]
            }
          ]
        },
        {
          "id": "MediaFeature",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "VirtualTimePolicy",
          "description": "advance：如果调度程序耗尽了立即工作，虚拟时基可能会快进到\n允许下一个延迟任务（如果有）运行；暂停：虚拟时基可能不会提前；\n暂停IfNetworkFetchesPending：如果有任何未决的，虚拟时基可能不会提前\n资源获取。",
          "experimental": true,
          "type": "string",
          "enum": [
            "advance",
            "pause",
            "pauseIfNetworkFetchesPending"
          ]
        },
        {
          "id": "UserAgentBrandVersion",
          "description": "用于指定要模拟的用户代理客户端提示。请参阅 https://wicg.github.io/ua-client-hints",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "brand",
              "type": "string"
            },
            {
              "name": "version",
              "type": "string"
            }
          ]
        },
        {
          "id": "UserAgentMetadata",
          "description": "用于指定要模拟的用户代理客户端提示。请参阅 https://wicg.github.io/ua-client-hints\n缺失的可选值将由目标用其通常使用的值来填充。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "brands",
              "description": "出现在 Sec-CH-UA 中的品牌。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "UserAgentBrandVersion"
              }
            },
            {
              "name": "fullVersionList",
              "description": "出现在 Sec-CH-UA-Full-Version-List 中的品牌。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "UserAgentBrandVersion"
              }
            },
            {
              "name": "fullVersion",
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "platform",
              "type": "string"
            },
            {
              "name": "platformVersion",
              "type": "string"
            },
            {
              "name": "architecture",
              "type": "string"
            },
            {
              "name": "model",
              "type": "string"
            },
            {
              "name": "mobile",
              "type": "boolean"
            },
            {
              "name": "bitness",
              "optional": true,
              "type": "string"
            },
            {
              "name": "wow64",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "formFactors",
              "description": "用于指定用户代理外形值。\n请参阅 https://wicg.github.io/ua-client-hints/#sec-ch-ua-form-factors",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "SensorType",
          "description": "用于指定要模拟的传感器类型。\n有关更多信息，请参阅 https://w3c.github.io/sensors/#automation。",
          "experimental": true,
          "type": "string",
          "enum": [
            "absolute-orientation",
            "accelerometer",
            "ambient-light",
            "gravity",
            "gyroscope",
            "linear-acceleration",
            "magnetometer",
            "relative-orientation"
          ]
        },
        {
          "id": "SensorMetadata",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "available",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "minimumFrequency",
              "optional": true,
              "type": "number"
            },
            {
              "name": "maximumFrequency",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "SensorReadingSingle",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "value",
              "type": "number"
            }
          ]
        },
        {
          "id": "SensorReadingXYZ",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "x",
              "type": "number"
            },
            {
              "name": "y",
              "type": "number"
            },
            {
              "name": "z",
              "type": "number"
            }
          ]
        },
        {
          "id": "SensorReadingQuaternion",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "x",
              "type": "number"
            },
            {
              "name": "y",
              "type": "number"
            },
            {
              "name": "z",
              "type": "number"
            },
            {
              "name": "w",
              "type": "number"
            }
          ]
        },
        {
          "id": "SensorReading",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "single",
              "optional": true,
              "$ref": "SensorReadingSingle"
            },
            {
              "name": "xyz",
              "optional": true,
              "$ref": "SensorReadingXYZ"
            },
            {
              "name": "quaternion",
              "optional": true,
              "$ref": "SensorReadingQuaternion"
            }
          ]
        },
        {
          "id": "PressureSource",
          "experimental": true,
          "type": "string",
          "enum": [
            "cpu"
          ]
        },
        {
          "id": "PressureState",
          "experimental": true,
          "type": "string",
          "enum": [
            "nominal",
            "fair",
            "serious",
            "critical"
          ]
        },
        {
          "id": "PressureMetadata",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "available",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "WorkAreaInsets",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "top",
              "description": "工作区域顶部插图（以像素为单位）。默认为 0；",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "left",
              "description": "工作区域左插入（以像素为单位）。默认为 0；",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "bottom",
              "description": "工作区域底部插入（以像素为单位）。默认为 0；",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "right",
              "description": "工作区域右侧插入（以像素为单位）。默认为 0；",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "ScreenId",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "ScreenInfo",
          "description": "与window.getScreenDetails()方法返回的屏幕信息类似，\n请参阅 https://w3c.github.io/window-management/#screendetailed。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "left",
              "description": "屏幕左边缘的偏移。",
              "type": "integer"
            },
            {
              "name": "top",
              "description": "屏幕上边缘的偏移。",
              "type": "integer"
            },
            {
              "name": "width",
              "description": "屏幕的宽度。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "屏幕的高度。",
              "type": "integer"
            },
            {
              "name": "availLeft",
              "description": "可用屏幕区域左边缘的偏移。",
              "type": "integer"
            },
            {
              "name": "availTop",
              "description": "可用屏幕区域上边缘的偏移。",
              "type": "integer"
            },
            {
              "name": "availWidth",
              "description": "可用屏幕区域的宽度。",
              "type": "integer"
            },
            {
              "name": "availHeight",
              "description": "可用屏幕区域的高度。",
              "type": "integer"
            },
            {
              "name": "devicePixelRatio",
              "description": "指定屏幕的设备像素比。",
              "type": "number"
            },
            {
              "name": "orientation",
              "description": "指定屏幕的方向。",
              "$ref": "ScreenOrientation"
            },
            {
              "name": "colorDepth",
              "description": "指定屏幕的颜色深度（以位为单位）。",
              "type": "integer"
            },
            {
              "name": "isExtended",
              "description": "指示设备是否有多个屏幕。",
              "type": "boolean"
            },
            {
              "name": "isInternal",
              "description": "指示屏幕是设备内部的还是连接到设备的外部的。",
              "type": "boolean"
            },
            {
              "name": "isPrimary",
              "description": "指示屏幕是否设置为操作系统主屏幕。",
              "type": "boolean"
            },
            {
              "name": "label",
              "description": "指定屏幕的描述性标签。",
              "type": "string"
            },
            {
              "name": "id",
              "description": "指定屏幕的唯一标识符。",
              "$ref": "ScreenId"
            }
          ]
        },
        {
          "id": "DisabledImageType",
          "description": "可以禁用的图像类型的枚举。",
          "experimental": true,
          "type": "string",
          "enum": [
            "avif",
            "webp"
          ]
        }
      ],
      "commands": [
        {
          "name": "canEmulate",
          "description": "告知是否支持仿真。",
          "deprecated": true,
          "returns": [
            {
              "name": "result",
              "description": "如果支持仿真则为 true。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "clearDeviceMetricsOverride",
          "description": "清除覆盖的设备指标。"
        },
        {
          "name": "clearGeolocationOverride",
          "description": "清除覆盖的地理位置位置和错误。"
        },
        {
          "name": "resetPageScaleFactor",
          "description": "请求将页面比例因子重置为初始值。",
          "experimental": true
        },
        {
          "name": "setFocusEmulationEnabled",
          "description": "启用或禁用模拟焦点和活动页面。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否启用或禁用焦点模拟。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setAutoDarkModeOverride",
          "description": "使用深色主题自动渲染所有网页内容。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否启用或禁用自动深色模式。\n如果未指定，任何现有的覆盖都将被清除。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setCPUThrottlingRate",
          "description": "启用 CPU 限制以模拟慢速 CPU。",
          "parameters": [
            {
              "name": "rate",
              "description": "节流速率作为减速因素（1 表示无节流，2 表示 2 倍减速，等等）。",
              "type": "number"
            }
          ]
        },
        {
          "name": "setDefaultBackgroundColorOverride",
          "description": "设置或清除框架默认背景颜色的覆盖。使用此覆盖\n如果内容没有指定一项。",
          "parameters": [
            {
              "name": "color",
              "description": "默认背景颜色的 RGBA。如果未指定，任何现有的覆盖都将被\n已清除。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "name": "setSafeAreaInsetsOverride",
          "description": "覆盖 env(safe-area-inset-*) 和 env(safe-area-max-inset-*) 的值。未设置的值将导致\n各个变量未定义，即使之前已被覆盖。",
          "experimental": true,
          "parameters": [
            {
              "name": "insets",
              "$ref": "SafeAreaInsets"
            }
          ]
        },
        {
          "name": "setDeviceMetricsOverride",
          "description": "覆盖设备屏幕尺寸的值（window.screen.width、window.screen.height、\nwindow.innerWidth、window.innerHeight 和“device-width”/“device-height”相关 CSS 媒体\n查询结果）。",
          "parameters": [
            {
              "name": "width",
              "description": "覆盖宽度值（以像素为单位）（最小值 0，最大值 10000000）。 0 禁用覆盖。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "覆盖高度值（以像素为单位）（最小值 0，最大值 10000000）。 0 禁用覆盖。",
              "type": "integer"
            },
            {
              "name": "deviceScaleFactor",
              "description": "覆盖设备比例因子值。 0 禁用覆盖。",
              "type": "number"
            },
            {
              "name": "mobile",
              "description": "是否模拟移动设备。这包括视口元标记、覆盖滚动条、文本\n自动调整大小等等。",
              "type": "boolean"
            },
            {
              "name": "scale",
              "description": "缩放以应用于生成的视图图像。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "screenWidth",
              "description": "覆盖屏幕宽度值（以像素为单位）（最小值 0，最大值 10000000）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "screenHeight",
              "description": "覆盖屏幕高度值（以像素为单位）（最小值 0，最大值 10000000）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "positionX",
              "description": "覆盖屏幕上视图的 X 位置（以像素为单位）（最小值 0，最大值 10000000）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "positionY",
              "description": "覆盖屏幕上的视图 Y 位置（以像素为单位）（最小值 0，最大值 10000000）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "dontSetVisibleSize",
              "description": "不要设置可见视图大小，依赖于显式的 setVisibleSize 调用。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "screenOrientation",
              "description": "屏幕方向覆盖。",
              "optional": true,
              "$ref": "ScreenOrientation"
            },
            {
              "name": "viewport",
              "description": "如果设置，页面的可见区域将被覆盖到此视口。这个视口\n页面未观察到更改，例如与视口相关的元素不会改变位置。",
              "experimental": true,
              "optional": true,
              "$ref": "Page.Viewport"
            },
            {
              "name": "displayFeature",
              "description": "如果设置，则显示多段屏幕的功能。如果不设置，则支持多段\n已关闭。\n已弃用，请使用 Emulation.setDisplayFeaturesOverride。",
              "experimental": true,
              "deprecated": true,
              "optional": true,
              "$ref": "DisplayFeature"
            },
            {
              "name": "devicePosture",
              "description": "如果设置，可折叠设备的姿势。如果未设置则设置姿势\n至连续。\n已弃用，请使用 Emulation.setDevicePostureOverride。",
              "experimental": true,
              "deprecated": true,
              "optional": true,
              "$ref": "DevicePosture"
            }
          ]
        },
        {
          "name": "setDevicePostureOverride",
          "description": "开始向设备姿势 API 报告给定的姿势值。\n也可以在 setDeviceMetricsOverride() 中设置此覆盖。",
          "experimental": true,
          "parameters": [
            {
              "name": "posture",
              "$ref": "DevicePosture"
            }
          ]
        },
        {
          "name": "clearDevicePostureOverride",
          "description": "使用 setDeviceMetricsOverride() 清除设备状态覆盖设置\n或 setDevicePostureOverride() 并开始使用来自\n再次平台。\n如果未设置覆盖，则不执行任何操作。",
          "experimental": true
        },
        {
          "name": "setDisplayFeaturesOverride",
          "description": "开始使用给定的显示功能来填充 Viewport Segments API。\n也可以在 setDeviceMetricsOverride() 中设置此覆盖。",
          "experimental": true,
          "parameters": [
            {
              "name": "features",
              "type": "array",
              "items": {
                "$ref": "DisplayFeature"
              }
            }
          ]
        },
        {
          "name": "clearDisplayFeaturesOverride",
          "description": "清除使用 setDeviceMetricsOverride() 设置的显示功能覆盖\n或 setDisplayFeaturesOverride() 并开始使用显示功能\n再次平台。\n如果未设置覆盖，则不执行任何操作。",
          "experimental": true
        },
        {
          "name": "setScrollbarsHidden",
          "experimental": true,
          "parameters": [
            {
              "name": "hidden",
              "description": "滚动条是否应始终隐藏。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setDocumentCookieDisabled",
          "experimental": true,
          "parameters": [
            {
              "name": "disabled",
              "description": "是否应禁用 document.coookie API。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setEmitTouchEventsForMouse",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否应启用基于鼠标输入的触摸模拟。",
              "type": "boolean"
            },
            {
              "name": "configuration",
              "description": "触摸/手势事件配置。默认值：当前平台。",
              "optional": true,
              "type": "string",
              "enum": [
                "mobile",
                "desktop"
              ]
            }
          ]
        },
        {
          "name": "setEmulatedMedia",
          "description": "模拟 CSS 媒体查询的给定媒体类型或媒体功能。",
          "parameters": [
            {
              "name": "media",
              "description": "要模拟的媒体类型。空字符串会禁用覆盖。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "features",
              "description": "要模拟的媒体功能。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "MediaFeature"
              }
            }
          ]
        },
        {
          "name": "setEmulatedVisionDeficiency",
          "description": "模拟给定的视力缺陷。",
          "parameters": [
            {
              "name": "type",
              "description": "视力缺乏效仿。顺序：尽力而为的模拟首先出现，然后是任何\n针对医学上公认的色觉缺陷进行生理上准确的模拟。",
              "type": "string",
              "enum": [
                "none",
                "blurredVision",
                "reducedContrast",
                "achromatopsia",
                "deuteranopia",
                "protanopia",
                "tritanopia"
              ]
            }
          ]
        },
        {
          "name": "setEmulatedOSTextScale",
          "description": "模拟给定的操作系统文本比例。",
          "parameters": [
            {
              "name": "scale",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "setGeolocationOverride",
          "description": "覆盖地理位置或错误。省略纬度、经度或\n精度模拟不可用的位置。",
          "parameters": [
            {
              "name": "latitude",
              "description": "模拟纬度",
              "optional": true,
              "type": "number"
            },
            {
              "name": "longitude",
              "description": "模拟经度",
              "optional": true,
              "type": "number"
            },
            {
              "name": "accuracy",
              "description": "模拟准确度",
              "optional": true,
              "type": "number"
            },
            {
              "name": "altitude",
              "description": "模拟海拔",
              "optional": true,
              "type": "number"
            },
            {
              "name": "altitudeAccuracy",
              "description": "模拟高度精度",
              "optional": true,
              "type": "number"
            },
            {
              "name": "heading",
              "description": "模拟标题",
              "optional": true,
              "type": "number"
            },
            {
              "name": "speed",
              "description": "模拟速度",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "getOverriddenSensorInformation",
          "experimental": true,
          "parameters": [
            {
              "name": "type",
              "$ref": "SensorType"
            }
          ],
          "returns": [
            {
              "name": "requestedSamplingFrequency",
              "type": "number"
            }
          ]
        },
        {
          "name": "setSensorOverrideEnabled",
          "description": "覆盖给定类型的平台传感器。如果|启用|是真的，请致电\nSensor.start() 将使用虚拟传感器作为后端而不是获取\n来自真实硬件传感器的数据。否则，现有的虚拟\n传感器后端传感器对象将触发错误事件和新的调用\nSensor.start() 将尝试使用真实的传感器。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            },
            {
              "name": "type",
              "$ref": "SensorType"
            },
            {
              "name": "metadata",
              "optional": true,
              "$ref": "SensorMetadata"
            }
          ]
        },
        {
          "name": "setSensorOverrideReadings",
          "description": "更新先前覆盖的传感器类型报告的传感器读数\n通过 setSensorOverrideEnabled。",
          "experimental": true,
          "parameters": [
            {
              "name": "type",
              "$ref": "SensorType"
            },
            {
              "name": "reading",
              "$ref": "SensorReading"
            }
          ]
        },
        {
          "name": "setPressureSourceOverrideEnabled",
          "description": "覆盖计算所使用的给定类型的压力源\n压力API，以便提供对PressureObserver.observe()的更新\n通过 setPressureStateOverride 而不是从\n平台提供的遥测数据。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            },
            {
              "name": "source",
              "$ref": "PressureSource"
            },
            {
              "name": "metadata",
              "optional": true,
              "$ref": "PressureMetadata"
            }
          ]
        },
        {
          "name": "setPressureStateOverride",
          "description": "TODO：已过时：合并 setPressureDataOverride 时删除。\n提供给定的压力状态，该压力状态将被处理并最终被\n交付给PressureObserver 用户。 |来源|之前一定是\n由 setPressureSourceOverrideEnabled 覆盖。",
          "experimental": true,
          "parameters": [
            {
              "name": "source",
              "$ref": "PressureSource"
            },
            {
              "name": "state",
              "$ref": "PressureState"
            }
          ]
        },
        {
          "name": "setPressureDataOverride",
          "description": "提供给定的压力数据集，该数据集将被处理并最终被\n交付给PressureObserver 用户。 |来源|之前一定是\n由 setPressureSourceOverrideEnabled 覆盖。",
          "experimental": true,
          "parameters": [
            {
              "name": "source",
              "$ref": "PressureSource"
            },
            {
              "name": "state",
              "$ref": "PressureState"
            },
            {
              "name": "ownContributionEstimate",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "setIdleOverride",
          "description": "覆盖空闲状态。",
          "parameters": [
            {
              "name": "isUserActive",
              "description": "模拟 isUserActive",
              "type": "boolean"
            },
            {
              "name": "isScreenUnlocked",
              "description": "模拟屏幕已解锁",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "clearIdleOverride",
          "description": "清除空闲状态覆盖。"
        },
        {
          "name": "setNavigatorOverrides",
          "description": "覆盖 javascript 导航器对象返回的值。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "platform",
              "description": "平台 navigator.platform 应该返回。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setPageScaleFactor",
          "description": "设置指定的页面比例因子。",
          "experimental": true,
          "parameters": [
            {
              "name": "pageScaleFactor",
              "description": "页面比例因子。",
              "type": "number"
            }
          ]
        },
        {
          "name": "setScriptExecutionDisabled",
          "description": "切换页面中的脚本执行。",
          "parameters": [
            {
              "name": "value",
              "description": "是否应在页面中禁用脚本执行。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setTouchEmulationEnabled",
          "description": "在不支持触摸的平台上启用触摸。",
          "parameters": [
            {
              "name": "enabled",
              "description": "是否应启用触摸事件模拟。",
              "type": "boolean"
            },
            {
              "name": "maxTouchPoints",
              "description": "支持的最大触点数。默认为一。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "setVirtualTimePolicy",
          "description": "打开所有帧的虚拟时间（用合成时间源替换实时）并设置\n当前的虚拟时间策略。  请注意，这将取代之前的任何时间预算。",
          "experimental": true,
          "parameters": [
            {
              "name": "policy",
              "$ref": "VirtualTimePolicy"
            },
            {
              "name": "budget",
              "description": "如果设置，在经过这么多虚拟毫秒后，虚拟时间将暂停，并且\n发送 virtualTimeBudgetExpired 事件。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "maxVirtualTimeTaskStarvationCount",
              "description": "如果设置，则指定在强制虚拟之前可以运行的最大任务数\n转发以防止死锁。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "initialVirtualTime",
              "description": "如果设置，base::Time::Now 将被覆盖以最初返回该值。",
              "optional": true,
              "$ref": "Network.TimeSinceEpoch"
            }
          ],
          "returns": [
            {
              "name": "virtualTimeTicksBase",
              "description": "首次启用虚拟时间的绝对时间戳（正常运行时间以毫秒为单位）。",
              "type": "number"
            }
          ]
        },
        {
          "name": "setLocaleOverride",
          "description": "使用指定的区域设置覆盖默认主机系统区域设置。",
          "experimental": true,
          "parameters": [
            {
              "name": "locale",
              "description": "ICU 风格 C 区域设置（例如“en_US”）。如果未指定或为空，则禁用覆盖并\n恢复默认主机系统区域设置。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setTimezoneOverride",
          "description": "使用指定的时区覆盖默认主机系统时区。",
          "parameters": [
            {
              "name": "timezoneId",
              "description": "时区标识符。支持的时区列表：\nhttps://source.chromium.org/chromium/chromium/deps/icu.git/+/faee8bc70570192d82d2978a71e2a615788597d1:source/data/misc/metaZones.txt\n如果为空，则禁用覆盖并恢复默认主机系统时区。",
              "type": "string"
            }
          ]
        },
        {
          "name": "setVisibleSize",
          "description": "调整页面的框架/视口的大小。请注意，这不会影响框架的容器\n（例如浏览器窗口）。可用于生成指定尺寸的屏幕截图。不支持\n在安卓上。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "width",
              "description": "框架宽度 (DIP)。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "框架高度 (DIP)。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "setDisabledImageTypes",
          "experimental": true,
          "parameters": [
            {
              "name": "imageTypes",
              "description": "要禁用的图像类型。",
              "type": "array",
              "items": {
                "$ref": "DisabledImageType"
              }
            }
          ]
        },
        {
          "name": "setDataSaverOverride",
          "description": "覆盖 navigator.connection.saveData 的值",
          "experimental": true,
          "parameters": [
            {
              "name": "dataSaverEnabled",
              "description": "覆盖值。省略该参数将禁用覆盖。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setHardwareConcurrencyOverride",
          "experimental": true,
          "parameters": [
            {
              "name": "hardwareConcurrency",
              "description": "要报告的硬件并发数",
              "type": "integer"
            }
          ]
        },
        {
          "name": "setUserAgentOverride",
          "description": "允许使用给定的字符串覆盖用户代理。\n必须设置“userAgentMetadata”才能发送客户端提示标头。",
          "parameters": [
            {
              "name": "userAgent",
              "description": "要使用的用户代理。",
              "type": "string"
            },
            {
              "name": "acceptLanguage",
              "description": "要模拟的浏览器语言。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "platform",
              "description": "平台 navigator.platform 应该返回。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "userAgentMetadata",
              "description": "在 Sec-CH-UA-* 标头中发送并在 navigator.userAgentData 中返回",
              "experimental": true,
              "optional": true,
              "$ref": "UserAgentMetadata"
            }
          ]
        },
        {
          "name": "setAutomationOverride",
          "description": "允许覆盖自动化标志。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否应启用覆盖。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setSmallViewportHeightDifferenceOverride",
          "description": "允许覆盖小视口尺寸和大视口尺寸之间的差异，这决定了\n分别是“svh”和“lvh”单位的值。仅支持顶级框架。",
          "experimental": true,
          "parameters": [
            {
              "name": "difference",
              "description": "这将导致大小为 100svh 的元素比元素小“差异”像素\n尺寸为 100lvh。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "getScreenInfos",
          "description": "返回设备的屏幕配置。",
          "experimental": true,
          "returns": [
            {
              "name": "screenInfos",
              "type": "array",
              "items": {
                "$ref": "ScreenInfo"
              }
            }
          ]
        },
        {
          "name": "addScreen",
          "description": "向设备添加新屏幕。仅在无头模式下受支持。",
          "experimental": true,
          "parameters": [
            {
              "name": "left",
              "description": "屏幕左边缘的偏移量（以像素为单位）。",
              "type": "integer"
            },
            {
              "name": "top",
              "description": "屏幕上边缘的偏移量（以像素为单位）。",
              "type": "integer"
            },
            {
              "name": "width",
              "description": "屏幕的宽度（以像素为单位）。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "屏幕的高度（以像素为单位）。",
              "type": "integer"
            },
            {
              "name": "workAreaInsets",
              "description": "指定屏幕的工作区域。默认为整个屏幕。",
              "optional": true,
              "$ref": "WorkAreaInsets"
            },
            {
              "name": "devicePixelRatio",
              "description": "指定屏幕的设备像素比。默认值为 1。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "rotation",
              "description": "指定屏幕的旋转角度。可用值为 0、90、180 和 270。默认值为 0。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "colorDepth",
              "description": "指定屏幕的颜色深度（以位为单位）。默认值为 24。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "label",
              "description": "指定屏幕的描述性标签。默认为无。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "isInternal",
              "description": "指示屏幕是设备内部的还是连接到设备的外部的。默认为 false。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "screenInfo",
              "$ref": "ScreenInfo"
            }
          ]
        },
        {
          "name": "removeScreen",
          "description": "从设备上取下屏幕。仅在无头模式下受支持。",
          "experimental": true,
          "parameters": [
            {
              "name": "screenId",
              "$ref": "ScreenId"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "virtualTimeBudgetExpired",
          "description": "当前 VirtualTimePolicy 的虚拟时间预算用完后发送的通知。",
          "experimental": true
        }
      ]
    },
    {
      "domain": "EventBreakpoints",
      "description": "EventBreakpoints 允许在操作和事件上设置 JavaScript 断点\n发生在从 JavaScript 调用的本机代码中。一旦断点被击中，\n通过调试器域报告，类似于命中常规断点。",
      "experimental": true,
      "commands": [
        {
          "name": "setInstrumentationBreakpoint",
          "description": "在特定本机事件上设置断点。",
          "parameters": [
            {
              "name": "eventName",
              "description": "要停止的仪器名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "removeInstrumentationBreakpoint",
          "description": "删除特定本机事件上的断点。",
          "parameters": [
            {
              "name": "eventName",
              "description": "要停止的仪器名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "disable",
          "description": "删除所有断点"
        }
      ]
    },
    {
      "domain": "Extensions",
      "description": "定义浏览器扩展的命令和事件。",
      "experimental": true,
      "types": [
        {
          "id": "StorageArea",
          "description": "存储区域。",
          "type": "string",
          "enum": [
            "session",
            "local",
            "sync",
            "managed"
          ]
        }
      ],
      "commands": [
        {
          "name": "loadUnpacked",
          "description": "从文件系统安装解压的扩展，类似于\n--load-extension CLI 标志。一旦扩展返回扩展ID\n已安装。如果客户端使用以下方式连接，则可用\n--remote-debugging-pipe 标志和 --enable-unsafe-extension-debugging\n标志已设置。",
          "parameters": [
            {
              "name": "path",
              "description": "绝对文件路径。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "id",
              "description": "扩展 ID。",
              "type": "string"
            }
          ]
        },
        {
          "name": "uninstall",
          "description": "从配置文件中卸载已解压的扩展（其他不支持的扩展）。\n如果客户端使用 --remote-debugging-pipe 标志连接则可用\n和 --enable-unsafe-extension-debugging。",
          "parameters": [
            {
              "name": "id",
              "description": "扩展 ID。",
              "type": "string"
            }
          ]
        },
        {
          "name": "getStorageItems",
          "description": "从给定“storageArea”中的扩展存储获取数据。如果 `keys` 是\n指定，这些用于过滤结果。",
          "parameters": [
            {
              "name": "id",
              "description": "分机 ID。",
              "type": "string"
            },
            {
              "name": "storageArea",
              "description": "从中检索数据的存储区域。",
              "$ref": "StorageArea"
            },
            {
              "name": "keys",
              "description": "要检索的密钥。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "returns": [
            {
              "name": "data",
              "type": "object"
            }
          ]
        },
        {
          "name": "removeStorageItems",
          "description": "从给定“storageArea”的扩展存储中删除“keys”。",
          "parameters": [
            {
              "name": "id",
              "description": "分机 ID。",
              "type": "string"
            },
            {
              "name": "storageArea",
              "description": "要从中删除数据的存储区域。",
              "$ref": "StorageArea"
            },
            {
              "name": "keys",
              "description": "要删除的键。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "clearStorageItems",
          "description": "清除给定“storageArea”中的扩展存储。",
          "parameters": [
            {
              "name": "id",
              "description": "分机 ID。",
              "type": "string"
            },
            {
              "name": "storageArea",
              "description": "要从中删除数据的存储区域。",
              "$ref": "StorageArea"
            }
          ]
        },
        {
          "name": "setStorageItems",
          "description": "在给定“storageArea”的扩展存储中设置“values”。提供的“值”\n将与存储区域中的现有值合并。",
          "parameters": [
            {
              "name": "id",
              "description": "分机 ID。",
              "type": "string"
            },
            {
              "name": "storageArea",
              "description": "用于设置数据的StorageArea。",
              "$ref": "StorageArea"
            },
            {
              "name": "values",
              "description": "要设置的值。",
              "type": "object"
            }
          ]
        }
      ]
    },
    {
      "domain": "FedCm",
      "description": "该域允许与 FedCM 对话框进行交互。",
      "experimental": true,
      "types": [
        {
          "id": "LoginState",
          "description": "这是否是该帐户的注册或登录操作，即\n该账号是否曾经登录过该RP。",
          "type": "string",
          "enum": [
            "SignIn",
            "SignUp"
          ]
        },
        {
          "id": "DialogType",
          "description": "FedCM 对话框的类型。",
          "type": "string",
          "enum": [
            "AccountChooser",
            "AutoReauthn",
            "ConfirmIdpLogin",
            "Error"
          ]
        },
        {
          "id": "DialogButton",
          "description": "FedCM 对话框上的按钮。",
          "type": "string",
          "enum": [
            "ConfirmIdpLoginContinue",
            "ErrorGotIt",
            "ErrorMoreDetails"
          ]
        },
        {
          "id": "AccountUrlType",
          "description": "每个帐户拥有的 URL",
          "type": "string",
          "enum": [
            "TermsOfService",
            "PrivacyPolicy"
          ]
        },
        {
          "id": "Account",
          "description": "对应于IdentityRequestAccount",
          "type": "object",
          "properties": [
            {
              "name": "accountId",
              "type": "string"
            },
            {
              "name": "email",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "givenName",
              "type": "string"
            },
            {
              "name": "pictureUrl",
              "type": "string"
            },
            {
              "name": "idpConfigUrl",
              "type": "string"
            },
            {
              "name": "idpLoginUrl",
              "type": "string"
            },
            {
              "name": "loginState",
              "$ref": "LoginState"
            },
            {
              "name": "termsOfServiceUrl",
              "description": "仅当登录状态为signUp时才设置这两个",
              "optional": true,
              "type": "string"
            },
            {
              "name": "privacyPolicyUrl",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "dialogShown",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            },
            {
              "name": "dialogType",
              "$ref": "DialogType"
            },
            {
              "name": "accounts",
              "type": "array",
              "items": {
                "$ref": "Account"
              }
            },
            {
              "name": "title",
              "description": "这些存在的主要目的是让调用者可以验证\n正确使用了 RP 上下文。",
              "type": "string"
            },
            {
              "name": "subtitle",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "dialogClosed",
          "description": "当对话框关闭时触发，无论是通过用户操作、JS 中止、\n或下面的命令。",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "parameters": [
            {
              "name": "disableRejectionDelay",
              "description": "允许调用者禁用承诺拒绝延迟\n如果这对测试的内容不重要，通常会发生。\n（https://fedidcg.github.io/FedCM/#browser-api-rp-sign-in 的步骤 4）",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "disable"
        },
        {
          "name": "selectAccount",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            },
            {
              "name": "accountIndex",
              "type": "integer"
            }
          ]
        },
        {
          "name": "clickDialogButton",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            },
            {
              "name": "dialogButton",
              "$ref": "DialogButton"
            }
          ]
        },
        {
          "name": "openUrl",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            },
            {
              "name": "accountIndex",
              "type": "integer"
            },
            {
              "name": "accountUrlType",
              "$ref": "AccountUrlType"
            }
          ]
        },
        {
          "name": "dismissDialog",
          "parameters": [
            {
              "name": "dialogId",
              "type": "string"
            },
            {
              "name": "triggerCooldown",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "resetCooldown",
          "description": "重置冷却时间（如果有）以允许显示下一次 FedCM 调用\n即使用户最近关闭了一个对话框。"
        }
      ]
    },
    {
      "domain": "Fetch",
      "description": "让客户端用客户端代码替换浏览器网络层的域。",
      "dependencies": [
        "Network",
        "IO",
        "Page"
      ],
      "types": [
        {
          "id": "RequestId",
          "description": "唯一的请求标识符。\n请注意，这并不识别属于以下部分的单个 HTTP 请求\n网络请求。",
          "type": "string"
        },
        {
          "id": "RequestStage",
          "description": "请求处理的阶段。请求将在请求之前拦截\n已发送。响应将在收到响应后（但在响应之前）拦截\n正文已收到）。",
          "type": "string",
          "enum": [
            "Request",
            "Response"
          ]
        },
        {
          "id": "RequestPattern",
          "type": "object",
          "properties": [
            {
              "name": "urlPattern",
              "description": "允许使用通配符（`'*'` -> 零个或多个，`'?'` -> 正好一个）。转义字符是\n反斜杠。省略相当于`\"*\"`。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "resourceType",
              "description": "如果设置，则仅拦截匹配资源类型的请求。",
              "optional": true,
              "$ref": "Network.ResourceType"
            },
            {
              "name": "requestStage",
              "description": "开始拦截请求的阶段。默认为请求。",
              "optional": true,
              "$ref": "RequestStage"
            }
          ]
        },
        {
          "id": "HeaderEntry",
          "description": "响应 HTTP 标头条目",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "AuthChallenge",
          "description": "HTTP 状态代码 401 或 407 的授权质询。",
          "type": "object",
          "properties": [
            {
              "name": "source",
              "description": "身份验证质询的来源。",
              "optional": true,
              "type": "string",
              "enum": [
                "Server",
                "Proxy"
              ]
            },
            {
              "name": "origin",
              "description": "挑战者的起源。",
              "type": "string"
            },
            {
              "name": "scheme",
              "description": "使用的身份验证方案，例如基本或摘要",
              "type": "string"
            },
            {
              "name": "realm",
              "description": "挑战的领域。可能是空的。",
              "type": "string"
            }
          ]
        },
        {
          "id": "AuthChallengeResponse",
          "description": "对 AuthChallenge 的响应。",
          "type": "object",
          "properties": [
            {
              "name": "response",
              "description": "决定如何应对授权挑战。  默认方式\n遵循网络堆栈的默认行为，这可能会取消\n验证或显示弹出对话框。",
              "type": "string",
              "enum": [
                "Default",
                "CancelAuth",
                "ProvideCredentials"
              ]
            },
            {
              "name": "username",
              "description": "要提供的用户名，可能为空。仅应在响应为时设置\n提供凭据。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "password",
              "description": "要提供的密码，可能为空。仅应在响应为时设置\n提供凭据。",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用获取域。"
        },
        {
          "name": "enable",
          "description": "允许发出 requestPaused 事件。请求将被暂停，直到客户端\n调用failRequest、fulfillRequest 或 continueRequest/continueWithAuth 之一。",
          "parameters": [
            {
              "name": "patterns",
              "description": "如果指定，只有与这些模式匹配的请求才会产生\nfetchRequested 事件并将暂停，直到客户端响应。如果没有设置，\n所有请求都会受到影响。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "RequestPattern"
              }
            },
            {
              "name": "handleAuthRequests",
              "description": "如果为 true，将发出 authRequired 事件并暂停请求\n期待调用 continueWithAuth。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "failRequest",
          "description": "导致请求因指定原因失败。",
          "parameters": [
            {
              "name": "requestId",
              "description": "客户端在 requestPaused 事件中收到的 id。",
              "$ref": "RequestId"
            },
            {
              "name": "errorReason",
              "description": "导致请求因给定原因而失败。",
              "$ref": "Network.ErrorReason"
            }
          ]
        },
        {
          "name": "fulfillRequest",
          "description": "提供对请求的响应。",
          "parameters": [
            {
              "name": "requestId",
              "description": "客户端在 requestPaused 事件中收到的 id。",
              "$ref": "RequestId"
            },
            {
              "name": "responseCode",
              "description": "HTTP 响应代码。",
              "type": "integer"
            },
            {
              "name": "responseHeaders",
              "description": "响应标头。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "HeaderEntry"
              }
            },
            {
              "name": "binaryResponseHeaders",
              "description": "将响应标头指定为 \\0 分隔的替代方法\n系列名称：值对。首选上述方法，除非您\n需要表示一些无法传输的非UTF8值\n以文本形式通过协议。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "body",
              "description": "响应体。如果不存在，则将使用原始响应正文\n请求在响应阶段被拦截并且主体为空\n如果请求在请求阶段被拦截，将会被使用。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "responsePhrase",
              "description": "响应代码的文本表示。\n如果不存在，则使用与响应代码匹配的标准短语。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "continueRequest",
          "description": "继续请求，可以选择修改其某些参数。",
          "parameters": [
            {
              "name": "requestId",
              "description": "客户端在 requestPaused 事件中收到的 id。",
              "$ref": "RequestId"
            },
            {
              "name": "url",
              "description": "如果设置，请求 URL 将以页面无法观察到的方式进行修改。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "method",
              "description": "如果设置，请求方法将被覆盖。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "postData",
              "description": "如果设置，则覆盖请求中的发布数据。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "headers",
              "description": "如果设置，则覆盖请求标头。请注意，覆盖不会\n如果发生重定向，则扩展到后续重定向跃点。另一个覆盖\n可以应用于由重定向产生的不同请求。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "HeaderEntry"
              }
            },
            {
              "name": "interceptResponse",
              "description": "如果设置，则覆盖此请求的响应拦截行为。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "continueWithAuth",
          "description": "在 authRequired 事件之后继续提供 authChallengeResponse 的请求。",
          "parameters": [
            {
              "name": "requestId",
              "description": "客户端在 authRequired 事件中收到的 ID。",
              "$ref": "RequestId"
            },
            {
              "name": "authChallengeResponse",
              "description": "响应 authChallenge。",
              "$ref": "AuthChallengeResponse"
            }
          ]
        },
        {
          "name": "continueResponse",
          "description": "继续加载暂停的响应，可以选择修改\n响应标头。如果响应代码或标头被修改，则所有这些\n必须在场。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "客户端在 requestPaused 事件中收到的 id。",
              "$ref": "RequestId"
            },
            {
              "name": "responseCode",
              "description": "HTTP 响应代码。如果不存在，将使用原始响应代码。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "responsePhrase",
              "description": "响应代码的文本表示。\n如果不存在，则使用与响应代码匹配的标准短语。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "responseHeaders",
              "description": "响应标头。如果不存在，将使用原始响应标头。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "HeaderEntry"
              }
            },
            {
              "name": "binaryResponseHeaders",
              "description": "将响应标头指定为 \\0 分隔的替代方法\n系列名称：值对。首选上述方法，除非您\n需要表示一些无法传输的非UTF8值\n以文本形式通过协议。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getResponseBody",
          "description": "导致从服务器接收响应正文并\n作为单个字符串返回。只能针对以下请求发出\n在响应阶段暂停并且与\ntakeResponseBodyForInterceptionAsStream。调用其他方法\n在收到正文之前影响请求或禁用获取域\n导致未定义的行为。\n请注意，响应正文不可用于重定向。要求\n暂停在“重定向接收”状态可以通过以下方式区分：\n`responseCode` 和 `location` 响应头的存在，请参阅\n评论“requestPaused”了解详细信息。",
          "parameters": [
            {
              "name": "requestId",
              "description": "要获取正文的拦截请求的标识符。",
              "$ref": "RequestId"
            }
          ],
          "returns": [
            {
              "name": "body",
              "description": "响应体。",
              "type": "string"
            },
            {
              "name": "base64Encoded",
              "description": "正确，如果内容以 base64 形式发送。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "takeResponseBodyAsStream",
          "description": "返回代表响应正文的流的句柄。\n请求必须在 HeadersReceived 阶段暂停。\n请注意，此命令之后请求无法继续\n按原样——客户要么需要取消它，要么提供\n响应体。\n该流仅支持顺序读取，如果位置不正确，IO.read将会失败\n已指定。\n此方法与 getResponseBody 互斥。\n调用影响请求的其他方法或禁用 fetch\n接收正文之前的域会导致未定义的行为。",
          "parameters": [
            {
              "name": "requestId",
              "$ref": "RequestId"
            }
          ],
          "returns": [
            {
              "name": "stream",
              "$ref": "IO.StreamHandle"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "requestPaused",
          "description": "当域已启用并且请求 URL 与\n指定的过滤器。请求将暂停，直到客户端响应\n使用 continueRequest、failRequest 或fulfillRequest 之一。\n请求的阶段可以通过responseErrorReason 的存在来确定\n和responseStatusCode——如果满足以下任一条件，则请求处于响应阶段\n这些字段的一部分存在并且否则在请求阶段。\n重定向响应和后续请求的报告方式与常规方式类似\n响应和请求。重定向响应可以通过值来区分\n`responseStatusCode`（301、302、303、307、308 之一）以及\n存在“location”标头。重定向产生的请求将\n设置了“redirectedRequestId”字段。",
          "parameters": [
            {
              "name": "requestId",
              "description": "页面发出的每个请求都会有一个唯一的 ID。",
              "$ref": "RequestId"
            },
            {
              "name": "request",
              "description": "请求的详细信息。",
              "$ref": "Network.Request"
            },
            {
              "name": "frameId",
              "description": "发起请求的帧的 id。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "resourceType",
              "description": "将如何使用所请求的资源。",
              "$ref": "Network.ResourceType"
            },
            {
              "name": "responseErrorReason",
              "description": "如果在响应阶段被拦截，则响应错误。",
              "optional": true,
              "$ref": "Network.ErrorReason"
            },
            {
              "name": "responseStatusCode",
              "description": "如果在响应阶段拦截到响应代码。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "responseStatusText",
              "description": "响应状态文本（如果在响应阶段拦截）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "responseHeaders",
              "description": "响应标头（如果在响应阶段拦截）。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "HeaderEntry"
              }
            },
            {
              "name": "networkId",
              "description": "如果被拦截的请求触发了相应的 Network.requestWillBeSent 事件，\n那么这个networkId将与requestWillBeSent事件中出现的requestId相同。",
              "optional": true,
              "$ref": "Network.RequestId"
            },
            {
              "name": "redirectedRequestId",
              "description": "如果请求是由于服务器的重定向响应引起的，则该请求的 ID\n已导致重定向。",
              "experimental": true,
              "optional": true,
              "$ref": "RequestId"
            }
          ]
        },
        {
          "name": "authRequired",
          "description": "当启用域且handleAuthRequests 设置为 true 时发出。\n请求将暂停，直到客户端使用 continueWithAuth 进行响应。",
          "parameters": [
            {
              "name": "requestId",
              "description": "页面发出的每个请求都会有一个唯一的 ID。",
              "$ref": "RequestId"
            },
            {
              "name": "request",
              "description": "请求的详细信息。",
              "$ref": "Network.Request"
            },
            {
              "name": "frameId",
              "description": "发起请求的帧的 id。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "resourceType",
              "description": "将如何使用所请求的资源。",
              "$ref": "Network.ResourceType"
            },
            {
              "name": "authChallenge",
              "description": "遇到的授权挑战的详细信息。\n如果设置了此项，客户端应使用 continueRequest 进行响应\n包含 AuthChallengeResponse。",
              "$ref": "AuthChallenge"
            }
          ]
        }
      ]
    },
    {
      "domain": "FileSystem",
      "experimental": true,
      "dependencies": [
        "Network",
        "Storage"
      ],
      "types": [
        {
          "id": "File",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "lastModified",
              "description": "时间戳",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "size",
              "description": "大小（以字节为单位）",
              "type": "number"
            },
            {
              "name": "type",
              "type": "string"
            }
          ]
        },
        {
          "id": "Directory",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "nestedDirectories",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "nestedFiles",
              "description": "直接嵌套在此目录下的文件。",
              "type": "array",
              "items": {
                "$ref": "File"
              }
            }
          ]
        },
        {
          "id": "BucketFileSystemLocator",
          "type": "object",
          "properties": [
            {
              "name": "storageKey",
              "description": "存储密钥",
              "$ref": "Storage.SerializedStorageKey"
            },
            {
              "name": "bucketName",
              "description": "桶名称。不传递“bucketName”将检索默认的 Bucket。 （https://developer.mozilla.org/en-US/docs/Web/API/Storage_API#storage_buckets）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "pathComponents",
              "description": "使用每个路径组件作为数组项的目录路径。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getDirectory",
          "parameters": [
            {
              "name": "bucketFileSystemLocator",
              "$ref": "BucketFileSystemLocator"
            }
          ],
          "returns": [
            {
              "name": "directory",
              "description": "返回路径处的目录对象。",
              "$ref": "Directory"
            }
          ]
        }
      ]
    },
    {
      "domain": "HeadlessExperimental",
      "description": "该域提供仅在无头模式下支持的实验性命令。",
      "experimental": true,
      "dependencies": [
        "Page",
        "Runtime"
      ],
      "types": [
        {
          "id": "ScreenshotParams",
          "description": "屏幕截图的编码选项。",
          "type": "object",
          "properties": [
            {
              "name": "format",
              "description": "图像压缩格式（默认为 png）。",
              "optional": true,
              "type": "string",
              "enum": [
                "jpeg",
                "png",
                "webp"
              ]
            },
            {
              "name": "quality",
              "description": "压缩质量范围为 [0..100]（仅限 jpeg 和 webp）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "optimizeForSpeed",
              "description": "优化图像编码的速度，而不是结果大小（默认为 false）",
              "optional": true,
              "type": "boolean"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "beginFrame",
          "description": "将 BeginFrame 发送到目标并在该帧完成时返回。可选择捕获一个\n结果帧的屏幕截图。要求创建目标时启用\n开始帧控制。设计用于与 --run-all-compositor-stages-before-draw 一起使用，另请参阅\nhttps://goo.gle/chrome-headless-rendering 了解更多背景。",
          "parameters": [
            {
              "name": "frameTimeTicks",
              "description": "渲染器 TimeTicks 中此 BeginFrame 的时间戳（正常运行时间的毫秒数）。如果没有设置，\n将使用当前时间。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "interval",
              "description": "报告给合成器的 BeginFrame 之间的间隔（以毫秒为单位）。\n默认为 60 帧/秒间隔，即大约 16.666 毫秒。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "noDisplayUpdates",
              "description": "是否不应提交更新并将其绘制到显示器上。默认为假。如果\ntrue，只会运行 BeginFrame 的副作用，例如布局和动画，但是\n任何视觉更新可能在显示屏或屏幕截图中不可见。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "screenshot",
              "description": "如果设置，将捕获该帧的屏幕截图并在响应中返回。否则，\n不会捕获任何屏幕截图。请注意，捕获屏幕截图可能会失败，例如，\n在渲染器初始化期间。在这种情况下，不会返回任何屏幕截图数据。",
              "optional": true,
              "$ref": "ScreenshotParams"
            }
          ],
          "returns": [
            {
              "name": "hasDamage",
              "description": "BeginFrame 是否导致损坏，并因此将新帧提交给\n显示。报告用于诊断用途，将来可能会被删除。",
              "type": "boolean"
            },
            {
              "name": "screenshotData",
              "description": "屏幕截图的 Base64 编码图像数据（如果已请求并成功获取）。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用目标的无头事件。",
          "deprecated": true
        },
        {
          "name": "enable",
          "description": "为目标启用无头事件。",
          "deprecated": true
        }
      ]
    },
    {
      "domain": "IO",
      "description": "DevTools 生成的流的输入/输出操作。",
      "types": [
        {
          "id": "StreamHandle",
          "description": "这可以从另一个方法获得，也可以指定为“blob:<uuid>”，其中\n`<uuid>` 是 Blob 的 UUID。",
          "type": "string"
        }
      ],
      "commands": [
        {
          "name": "close",
          "description": "关闭流，丢弃所有临时后备存储。",
          "parameters": [
            {
              "name": "handle",
              "description": "要关闭的流的句柄。",
              "$ref": "StreamHandle"
            }
          ]
        },
        {
          "name": "read",
          "description": "读取流的一大块",
          "parameters": [
            {
              "name": "handle",
              "description": "要读取的流的句柄。",
              "$ref": "StreamHandle"
            },
            {
              "name": "offset",
              "description": "读取之前先查找到指定的偏移量（如果未指定，则继续使用偏移量\n继上次阅读之后）。某些类型的流可能仅支持顺序读取。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "size",
              "description": "要读取的最大字节数（如果未指定，则由代理自行决定）。",
              "optional": true,
              "type": "integer"
            }
          ],
          "returns": [
            {
              "name": "base64Encoded",
              "description": "设置数据是否采用 Base64 编码",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "data",
              "description": "读取的数据。",
              "type": "string"
            },
            {
              "name": "eof",
              "description": "设置读取时是否发生文件结束条件。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "resolveBlob",
          "description": "返回由远程对象 ID 指定的 Blob 对象的 UUID。",
          "parameters": [
            {
              "name": "objectId",
              "description": "Blob 对象包装器的对象 ID。",
              "$ref": "Runtime.RemoteObjectId"
            }
          ],
          "returns": [
            {
              "name": "uuid",
              "description": "指定 Blob 的 UUID。",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "IndexedDB",
      "experimental": true,
      "dependencies": [
        "Runtime",
        "Storage"
      ],
      "types": [
        {
          "id": "DatabaseWithObjectStores",
          "description": "具有对象存储数组的数据库。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "数据库名称。",
              "type": "string"
            },
            {
              "name": "version",
              "description": "数据库版本（类型不是“整数”，作为标准\n要求版本号为“unsigned long long”）",
              "type": "number"
            },
            {
              "name": "objectStores",
              "description": "对象存储在此数据库中。",
              "type": "array",
              "items": {
                "$ref": "ObjectStore"
              }
            }
          ]
        },
        {
          "id": "ObjectStore",
          "description": "对象存储。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "对象存储名称。",
              "type": "string"
            },
            {
              "name": "keyPath",
              "description": "对象存储键路径。",
              "$ref": "KeyPath"
            },
            {
              "name": "autoIncrement",
              "description": "如果为 true，则对象存储设置了自动增量标志。",
              "type": "boolean"
            },
            {
              "name": "indexes",
              "description": "该对象存储中的索引。",
              "type": "array",
              "items": {
                "$ref": "ObjectStoreIndex"
              }
            }
          ]
        },
        {
          "id": "ObjectStoreIndex",
          "description": "对象存储索引。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "索引名称。",
              "type": "string"
            },
            {
              "name": "keyPath",
              "description": "索引键路径。",
              "$ref": "KeyPath"
            },
            {
              "name": "unique",
              "description": "如果为 true，则索引是唯一的。",
              "type": "boolean"
            },
            {
              "name": "multiEntry",
              "description": "如果为 true，则索引允许一个键有多个条目。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Key",
          "description": "钥匙。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "钥匙类型。",
              "type": "string",
              "enum": [
                "number",
                "string",
                "date",
                "array"
              ]
            },
            {
              "name": "number",
              "description": "数值。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "string",
              "description": "字符串值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "date",
              "description": "日期值。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "array",
              "description": "数组值。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Key"
              }
            }
          ]
        },
        {
          "id": "KeyRange",
          "description": "键范围。",
          "type": "object",
          "properties": [
            {
              "name": "lower",
              "description": "下限。",
              "optional": true,
              "$ref": "Key"
            },
            {
              "name": "upper",
              "description": "上限。",
              "optional": true,
              "$ref": "Key"
            },
            {
              "name": "lowerOpen",
              "description": "如果真正的下界是开放的。",
              "type": "boolean"
            },
            {
              "name": "upperOpen",
              "description": "如果真上限是开放的。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "DataEntry",
          "description": "数据输入。",
          "type": "object",
          "properties": [
            {
              "name": "key",
              "description": "关键对象。",
              "$ref": "Runtime.RemoteObject"
            },
            {
              "name": "primaryKey",
              "description": "主键对象。",
              "$ref": "Runtime.RemoteObject"
            },
            {
              "name": "value",
              "description": "值对象。",
              "$ref": "Runtime.RemoteObject"
            }
          ]
        },
        {
          "id": "KeyPath",
          "description": "关键路径。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "键路径类型。",
              "type": "string",
              "enum": [
                "null",
                "string",
                "array"
              ]
            },
            {
              "name": "string",
              "description": "字符串值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "array",
              "description": "数组值。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "clearObjectStore",
          "description": "清除对象存储中的所有条目。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "description": "数据库名称。",
              "type": "string"
            },
            {
              "name": "objectStoreName",
              "description": "对象存储名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "deleteDatabase",
          "description": "删除数据库。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "description": "数据库名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "deleteObjectStoreEntries",
          "description": "从对象存储中删除一系列条目",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "type": "string"
            },
            {
              "name": "objectStoreName",
              "type": "string"
            },
            {
              "name": "keyRange",
              "description": "要删除的输入键范围",
              "$ref": "KeyRange"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用来自后端的事件。"
        },
        {
          "name": "enable",
          "description": "启用来自后端的事件。"
        },
        {
          "name": "requestData",
          "description": "从对象存储或索引请求数据。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "description": "数据库名称。",
              "type": "string"
            },
            {
              "name": "objectStoreName",
              "description": "对象存储名称。",
              "type": "string"
            },
            {
              "name": "indexName",
              "description": "索引名称。如果未指定，它将执行对象存储数据请求。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "skipCount",
              "description": "要跳过的记录数。",
              "type": "integer"
            },
            {
              "name": "pageSize",
              "description": "要获取的记录数。",
              "type": "integer"
            },
            {
              "name": "keyRange",
              "description": "键范围。",
              "optional": true,
              "$ref": "KeyRange"
            }
          ],
          "returns": [
            {
              "name": "objectStoreDataEntries",
              "description": "对象存储数据条目的数组。",
              "type": "array",
              "items": {
                "$ref": "DataEntry"
              }
            },
            {
              "name": "hasMore",
              "description": "如果为 true，则在给定范围内有更多条目需要获取。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getMetadata",
          "description": "获取对象存储的元数据。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "description": "数据库名称。",
              "type": "string"
            },
            {
              "name": "objectStoreName",
              "description": "对象存储名称。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "entriesCount",
              "description": "条目数",
              "type": "number"
            },
            {
              "name": "keyGeneratorValue",
              "description": "密钥生成器的当前值，成为下一个插入的\n进入对象存储的密钥。如果 objectStore.autoIncrement 则有效\n是真的。",
              "type": "number"
            }
          ]
        },
        {
          "name": "requestDatabase",
          "description": "请求给定框架中给定名称的数据库。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            },
            {
              "name": "databaseName",
              "description": "数据库名称。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "databaseWithObjectStores",
              "description": "具有对象存储数组的数据库。",
              "$ref": "DatabaseWithObjectStores"
            }
          ]
        },
        {
          "name": "requestDatabaseNames",
          "description": "请求给定安全源的数据库名称。",
          "parameters": [
            {
              "name": "securityOrigin",
              "description": "至少且最多必须指定 securityOrigin、storageKey 或 storageBucket 之一。\n安全起源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "storageBucket",
              "description": "储物桶。如果未指定，则使用默认存储桶。",
              "optional": true,
              "$ref": "Storage.StorageBucket"
            }
          ],
          "returns": [
            {
              "name": "databaseNames",
              "description": "来源的数据库名称。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Input",
      "types": [
        {
          "id": "TouchPoint",
          "type": "object",
          "properties": [
            {
              "name": "x",
              "description": "事件相对于主框架视口的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "事件相对于主框架视口的 Y 坐标（以 CSS 像素为单位）。 0 指的是\n视口的顶部，Y 值随着向视口底部的移动而增加。",
              "type": "number"
            },
            {
              "name": "radiusX",
              "description": "触摸区域的 X 半径（默认值：1.0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "radiusY",
              "description": "触摸区域的 Y 半径（默认值：1.0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "rotationAngle",
              "description": "旋转角度（默认值：0.0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "force",
              "description": "力（默认值：1.0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "tangentialPressure",
              "description": "归一化切向压力，范围为 [-1,1]（默认值：0）。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "tiltX",
              "description": "Y-Z 平面与包含触笔轴和 Y 轴的平面之间的平面角度，以度数范围 [-90,90] 为单位，正向倾斜 X 向右（默认值：0）",
              "optional": true,
              "type": "number"
            },
            {
              "name": "tiltY",
              "description": "X-Z 平面与包含触笔轴和 X 轴的平面之间的平面角度，以度数范围 [-90,90] 为单位，正倾斜 Y 朝向用户（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "twist",
              "description": "笔触针绕其自身主轴顺时针旋转，以度为单位，范围为 [0,359]（默认值：0）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "id",
              "description": "用于跟踪事件之间的触摸源的标识符在事件内必须是唯一的。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "GestureSourceType",
          "experimental": true,
          "type": "string",
          "enum": [
            "default",
            "touch",
            "mouse"
          ]
        },
        {
          "id": "MouseButton",
          "type": "string",
          "enum": [
            "none",
            "left",
            "middle",
            "right",
            "back",
            "forward"
          ]
        },
        {
          "id": "TimeSinceEpoch",
          "description": "UTC 时间（以秒为单位），从 1970 年 1 月 1 日开始计算。",
          "type": "number"
        },
        {
          "id": "DragDataItem",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "mimeType",
              "description": "拖动数据的 Mime 类型。",
              "type": "string"
            },
            {
              "name": "data",
              "description": "根据“mimeType”的值，它包含拖动的链接，\n文本、HTML 标记或任何其他数据。",
              "type": "string"
            },
            {
              "name": "title",
              "description": "与链接关联的标题。仅当 `mimeType` == \"text/uri-list\" 时有效。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "baseURL",
              "description": "存储所包含标记的基本 URL。仅当“mimeType”时有效\n==“文本/html”。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "DragData",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "items",
              "type": "array",
              "items": {
                "$ref": "DragDataItem"
              }
            },
            {
              "name": "files",
              "description": "删除时应包含的文件名列表",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "dragOperationsMask",
              "description": "表示允许的拖动操作的位字段。复制 = 1、链接 = 2、移动 = 16",
              "type": "integer"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "dispatchDragEvent",
          "description": "将拖动事件分派到页面中。",
          "experimental": true,
          "parameters": [
            {
              "name": "type",
              "description": "拖动事件的类型。",
              "type": "string",
              "enum": [
                "dragEnter",
                "dragOver",
                "drop",
                "dragCancel"
              ]
            },
            {
              "name": "x",
              "description": "事件相对于主框架视口的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "事件相对于主框架视口的 Y 坐标（以 CSS 像素为单位）。 0 指的是\n视口的顶部，Y 值随着向视口底部的移动而增加。",
              "type": "number"
            },
            {
              "name": "data",
              "$ref": "DragData"
            },
            {
              "name": "modifiers",
              "description": "表示按下的修饰键的位字段。 Alt=1、Ctrl=2、元/命令=4、Shift=8\n（默认值：0）。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "dispatchKeyEvent",
          "description": "将按键事件分派到页面。",
          "parameters": [
            {
              "name": "type",
              "description": "关键事件的类型。",
              "type": "string",
              "enum": [
                "keyDown",
                "keyUp",
                "rawKeyDown",
                "char"
              ]
            },
            {
              "name": "modifiers",
              "description": "表示按下的修饰键的位字段。 Alt=1、Ctrl=2、元/命令=4、Shift=8\n（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "timestamp",
              "description": "事件发生的时间。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "text",
              "description": "通过使用键盘布局处理虚拟键代码生成的文本。不需要用于\n对于 `keyUp` 和 `rawKeyDown` 事件（默认值：“”）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "unmodifiedText",
              "description": "如果没有按下修饰键，键盘将生成的文本（除了\n转变）。对于快捷键（加速器）键处理很有用（默认值：“”）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "keyIdentifier",
              "description": "唯一密钥标识符（例如“U+0041”）（默认值：“”）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "code",
              "description": "为每个物理键（例如“KeyA”）定义的唯一 DOM 字符串值（默认值：“”）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "key",
              "description": "唯一的 DOM 定义的字符串值，描述活动上下文中键的含义\n修饰符、键盘布局等（例如“AltGr”）（默认值：“”）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "windowsVirtualKeyCode",
              "description": "Windows 虚拟键代码（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "nativeVirtualKeyCode",
              "description": "本机虚拟键代码（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "autoRepeat",
              "description": "事件是否由自动重复生成（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isKeypad",
              "description": "事件是否从键盘生成（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isSystemKey",
              "description": "该事件是否是系统按键事件（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "location",
              "description": "事件是来自键盘的左侧还是右侧。 1=左，2=右（默认值：\n0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "commands",
              "description": "编辑与按键事件一起发送的命令（例如“selectAll”）（默认值：[]）。\n这些与“document.execCommand”和 NSStandardKeyBindingResponding 中使用的命令名称相关，但不相等。\n请参阅 https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/core/editing/commands/editor_command_names.h 了解有效的命令名称。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "insertText",
          "description": "此方法模拟插入不是来自按键的文本，\n例如表情符号键盘或 IME。",
          "experimental": true,
          "parameters": [
            {
              "name": "text",
              "description": "要插入的文本。",
              "type": "string"
            }
          ]
        },
        {
          "name": "imeSetComposition",
          "description": "此方法设置 IME 的当前候选文本。\n使用 imeCommitComposition 提交最终文本。\n使用 imeSetComposition 以空字符串作为文本来取消合成。",
          "experimental": true,
          "parameters": [
            {
              "name": "text",
              "description": "要插入的文本",
              "type": "string"
            },
            {
              "name": "selectionStart",
              "description": "选择开始",
              "type": "integer"
            },
            {
              "name": "selectionEnd",
              "description": "选择结束",
              "type": "integer"
            },
            {
              "name": "replacementStart",
              "description": "更换开始",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "replacementEnd",
              "description": "更换端",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "dispatchMouseEvent",
          "description": "将鼠标事件分派到页面。",
          "parameters": [
            {
              "name": "type",
              "description": "鼠标事件的类型。",
              "type": "string",
              "enum": [
                "mousePressed",
                "mouseReleased",
                "mouseMoved",
                "mouseWheel"
              ]
            },
            {
              "name": "x",
              "description": "事件相对于主框架视口的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "事件相对于主框架视口的 Y 坐标（以 CSS 像素为单位）。 0 指的是\n视口的顶部，Y 值随着向视口底部的移动而增加。",
              "type": "number"
            },
            {
              "name": "modifiers",
              "description": "表示按下的修饰键的位字段。 Alt=1、Ctrl=2、元/命令=4、Shift=8\n（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "timestamp",
              "description": "事件发生的时间。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "button",
              "description": "鼠标按钮（默认值：“无”）。",
              "optional": true,
              "$ref": "MouseButton"
            },
            {
              "name": "buttons",
              "description": "一个数字，指示触发鼠标事件时按下鼠标上的哪些按钮。\n左=1，右=2，中=4，后=8，前=16，无=0。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "clickCount",
              "description": "单击鼠标按钮的次数（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "force",
              "description": "标准化压力，范围为 [0,1]（默认值：0）。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "tangentialPressure",
              "description": "归一化切向压力，范围为 [-1,1]（默认值：0）。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "tiltX",
              "description": "Y-Z 平面与包含触笔轴和 Y 轴的平面之间的平面角度，以度数范围 [-90,90] 为单位，正向倾斜 X 向右（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "tiltY",
              "description": "X-Z 平面与包含触笔轴和 X 轴的平面之间的平面角度，以度数范围 [-90,90] 为单位，正倾斜 Y 朝向用户（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "twist",
              "description": "笔触针绕其自身主轴顺时针旋转，以度为单位，范围为 [0,359]（默认值：0）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "deltaX",
              "description": "鼠标滚轮事件的 CSS 像素 X 增量（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "deltaY",
              "description": "鼠标滚轮事件的 CSS 像素 Y 增量（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "pointerType",
              "description": "指针类型（默认：“鼠标”）。",
              "optional": true,
              "type": "string",
              "enum": [
                "mouse",
                "pen"
              ]
            }
          ]
        },
        {
          "name": "dispatchTouchEvent",
          "description": "将触摸事件分派到页面。",
          "parameters": [
            {
              "name": "type",
              "description": "触摸事件的类型。 TouchEnd 和 TouchCancel 不得包含任何触摸点，而\nTouchStart 和 TouchMove 必须至少包含其中之一。",
              "type": "string",
              "enum": [
                "touchStart",
                "touchEnd",
                "touchMove",
                "touchCancel"
              ]
            },
            {
              "name": "touchPoints",
              "description": "触摸设备上的活动触摸点。每个更改点发生一个事件（与\n生成序列中的上一个触摸事件，模拟按下/移动/释放点\n一一。",
              "type": "array",
              "items": {
                "$ref": "TouchPoint"
              }
            },
            {
              "name": "modifiers",
              "description": "表示按下的修饰键的位字段。 Alt=1、Ctrl=2、元/命令=4、Shift=8\n（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "timestamp",
              "description": "事件发生的时间。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            }
          ]
        },
        {
          "name": "cancelDragging",
          "description": "取消页面中任何活动的拖动。"
        },
        {
          "name": "emulateTouchFromMouseEvent",
          "description": "从鼠标事件参数模拟触摸事件。",
          "experimental": true,
          "parameters": [
            {
              "name": "type",
              "description": "鼠标事件的类型。",
              "type": "string",
              "enum": [
                "mousePressed",
                "mouseReleased",
                "mouseMoved",
                "mouseWheel"
              ]
            },
            {
              "name": "x",
              "description": "DIP 中鼠标指针的 X 坐标。",
              "type": "integer"
            },
            {
              "name": "y",
              "description": "DIP 中鼠标指针的 Y 坐标。",
              "type": "integer"
            },
            {
              "name": "button",
              "description": "鼠标按钮。仅支持“无”、“左”、“右”。",
              "$ref": "MouseButton"
            },
            {
              "name": "timestamp",
              "description": "事件发生的时间（默认：当前时间）。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "deltaX",
              "description": "鼠标滚轮事件的 DIP 中的 X 增量（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "deltaY",
              "description": "鼠标滚轮事件的 DIP 中的 Y 增量（默认值：0）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "modifiers",
              "description": "表示按下的修饰键的位字段。 Alt=1、Ctrl=2、元/命令=4、Shift=8\n（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "clickCount",
              "description": "单击鼠标按钮的次数（默认值：0）。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "setIgnoreInputEvents",
          "description": "忽略输入事件（在审核页面时有用）。",
          "parameters": [
            {
              "name": "ignore",
              "description": "设置为 true 时忽略输入事件处理。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setInterceptDrags",
          "description": "防止默认的拖放行为，而是发出“Input.dragIntercepted”事件。\n拖放行为可以通过“Input.dispatchDragEvent”直接控制。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "synthesizePinchGesture",
          "description": "通过发出适当的触摸事件来合成一段时间内的捏合手势。",
          "experimental": true,
          "parameters": [
            {
              "name": "x",
              "description": "手势开始的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "手势开始的 Y 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "scaleFactor",
              "description": "缩放后的相对比例因子（>1.0 放大，<1.0 缩小）。",
              "type": "number"
            },
            {
              "name": "relativeSpeed",
              "description": "以每秒像素为单位的相对指针速度（默认值：800）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "gestureSourceType",
              "description": "生成哪种类型的输入事件（默认：'default'，查询平台\n对于首选输入类型）。",
              "optional": true,
              "$ref": "GestureSourceType"
            }
          ]
        },
        {
          "name": "synthesizeScrollGesture",
          "description": "通过发出适当的触摸事件来合成一段时间内的滚动手势。",
          "experimental": true,
          "parameters": [
            {
              "name": "x",
              "description": "手势开始的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "手势开始的 Y 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "xDistance",
              "description": "沿 X 轴滚动的距离（向左滚动为正）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "yDistance",
              "description": "沿 Y 轴滚动的距离（向上滚动为正值）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "xOverscroll",
              "description": "除了给定的像素数之外，沿 X 轴向后滚动的附加像素数\n距离。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "yOverscroll",
              "description": "除了给定的像素数之外，沿 Y 轴向后滚动的附加像素数\n距离。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "preventFling",
              "description": "防止投掷（默认值：true）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "speed",
              "description": "滑动速度（以像素/秒为单位）（默认值：800）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "gestureSourceType",
              "description": "生成哪种类型的输入事件（默认：'default'，查询平台\n对于首选输入类型）。",
              "optional": true,
              "$ref": "GestureSourceType"
            },
            {
              "name": "repeatCount",
              "description": "重复手势的次数（默认值：0）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "repeatDelayMs",
              "description": "每次重复之间的延迟毫秒数。 （默认值：250）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "interactionMarkerName",
              "description": "要生成的交互标记的名称（如果不为空）（默认值：“”）。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "synthesizeTapGesture",
          "description": "通过发出适当的触摸事件来合成一段时间内的点击手势。",
          "experimental": true,
          "parameters": [
            {
              "name": "x",
              "description": "手势开始的 X 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "手势开始的 Y 坐标（以 CSS 像素为单位）。",
              "type": "number"
            },
            {
              "name": "duration",
              "description": "触地和触地事件之间的持续时间（以毫秒为单位）（默认值：50）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "tapCount",
              "description": "执行点击的次数（例如，双击 2 次，默认值：1）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "gestureSourceType",
              "description": "生成哪种类型的输入事件（默认：'default'，查询平台\n对于首选输入类型）。",
              "optional": true,
              "$ref": "GestureSourceType"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "dragIntercepted",
          "description": "仅当启用“Input.setInterceptDrags”时发出。将此数据与“Input.dispatchDragEvent”一起使用\n恢复正常的拖放行为。",
          "experimental": true,
          "parameters": [
            {
              "name": "data",
              "$ref": "DragData"
            }
          ]
        }
      ]
    },
    {
      "domain": "Inspector",
      "experimental": true,
      "commands": [
        {
          "name": "disable",
          "description": "禁用检查器域通知。"
        },
        {
          "name": "enable",
          "description": "启用检查器域通知。"
        }
      ],
      "events": [
        {
          "name": "detached",
          "description": "当远程调试连接即将终止时触发。包含分离原因。",
          "parameters": [
            {
              "name": "reason",
              "description": "连接被终止的原因。",
              "type": "string"
            }
          ]
        },
        {
          "name": "targetCrashed",
          "description": "当调试目标崩溃时触发"
        },
        {
          "name": "targetReloadedAfterCrash",
          "description": "当调试目标在崩溃后重新加载时触发"
        },
        {
          "name": "workerScriptLoaded",
          "description": "当主工作脚本和任何导入的脚本已被评估时，在工作目标上触发。",
          "experimental": true
        }
      ]
    },
    {
      "domain": "LayerTree",
      "experimental": true,
      "dependencies": [
        "DOM"
      ],
      "types": [
        {
          "id": "LayerId",
          "description": "唯一层标识符。",
          "type": "string"
        },
        {
          "id": "SnapshotId",
          "description": "唯一的快照标识符。",
          "type": "string"
        },
        {
          "id": "ScrollRect",
          "description": "主线程上发生滚动的矩形。",
          "type": "object",
          "properties": [
            {
              "name": "rect",
              "description": "矩形本身。",
              "$ref": "DOM.Rect"
            },
            {
              "name": "type",
              "description": "矩形在主线程上强制滚动的原因",
              "type": "string",
              "enum": [
                "RepaintsOnScroll",
                "TouchEventHandler",
                "WheelEventHandler"
              ]
            }
          ]
        },
        {
          "id": "StickyPositionConstraint",
          "description": "粘性位置限制。",
          "type": "object",
          "properties": [
            {
              "name": "stickyBoxRect",
              "description": "移动前粘性元素的布局矩形",
              "$ref": "DOM.Rect"
            },
            {
              "name": "containingBlockRect",
              "description": "粘性元素包含块的布局矩形",
              "$ref": "DOM.Rect"
            },
            {
              "name": "nearestLayerShiftingStickyBox",
              "description": "移动粘性框的最近的粘性层",
              "optional": true,
              "$ref": "LayerId"
            },
            {
              "name": "nearestLayerShiftingContainingBlock",
              "description": "移动包含块的最近的粘性层",
              "optional": true,
              "$ref": "LayerId"
            }
          ]
        },
        {
          "id": "PictureTile",
          "description": "层图片的序列化片段及其在层内的偏移量。",
          "type": "object",
          "properties": [
            {
              "name": "x",
              "description": "距所属图层左边界的偏移",
              "type": "number"
            },
            {
              "name": "y",
              "description": "距所属图层顶部边界的偏移",
              "type": "number"
            },
            {
              "name": "picture",
              "description": "Base64 编码的快照数据。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            }
          ]
        },
        {
          "id": "Layer",
          "description": "有关合成层的信息。",
          "type": "object",
          "properties": [
            {
              "name": "layerId",
              "description": "该图层的唯一 ID。",
              "$ref": "LayerId"
            },
            {
              "name": "parentLayerId",
              "description": "父级的 ID（对于 root 不存在）。",
              "optional": true,
              "$ref": "LayerId"
            },
            {
              "name": "backendNodeId",
              "description": "与该层关联的节点的后端 ID。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "offsetX",
              "description": "相对于父图层的偏移量，X 坐标。",
              "type": "number"
            },
            {
              "name": "offsetY",
              "description": "相对于父图层的偏移量，Y 坐标。",
              "type": "number"
            },
            {
              "name": "width",
              "description": "层宽。",
              "type": "number"
            },
            {
              "name": "height",
              "description": "层高。",
              "type": "number"
            },
            {
              "name": "transform",
              "description": "层的变换矩阵，默认为单位矩阵",
              "optional": true,
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "name": "anchorX",
              "description": "变换锚点 X，如果未指定变换则不存在",
              "optional": true,
              "type": "number"
            },
            {
              "name": "anchorY",
              "description": "变换锚点 Y，如果未指定变换则不存在",
              "optional": true,
              "type": "number"
            },
            {
              "name": "anchorZ",
              "description": "变换锚点 Z，如果未指定变换则不存在",
              "optional": true,
              "type": "number"
            },
            {
              "name": "paintCount",
              "description": "表示该层已绘制了多少次。",
              "type": "integer"
            },
            {
              "name": "drawsContent",
              "description": "指示该层是否托管任何内容，而不是用于\n仅用于变换/滚动目的。",
              "type": "boolean"
            },
            {
              "name": "invisible",
              "description": "设置图层是否不可见。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "scrollRects",
              "description": "矩形仅在主线程上滚动。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ScrollRect"
              }
            },
            {
              "name": "stickyPositionConstraint",
              "description": "粘性位置约束信息",
              "optional": true,
              "$ref": "StickyPositionConstraint"
            }
          ]
        },
        {
          "id": "PaintProfile",
          "description": "一系列计时，每个绘画步骤一个。",
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      ],
      "commands": [
        {
          "name": "compositingReasons",
          "description": "提供合成给定图层的原因。",
          "parameters": [
            {
              "name": "layerId",
              "description": "我们想要获取其合成原因的图层的 ID。",
              "$ref": "LayerId"
            }
          ],
          "returns": [
            {
              "name": "compositingReasons",
              "description": "指定给定图层合成原因的字符串列表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "compositingReasonIds",
              "description": "指定要合成的给定图层的原因 ID 的字符串列表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用合成树检查。"
        },
        {
          "name": "enable",
          "description": "启用合成树检查。"
        },
        {
          "name": "loadSnapshot",
          "description": "返回快照标识符。",
          "parameters": [
            {
              "name": "tiles",
              "description": "组成快照的图块数组。",
              "type": "array",
              "items": {
                "$ref": "PictureTile"
              }
            }
          ],
          "returns": [
            {
              "name": "snapshotId",
              "description": "快照的 ID。",
              "$ref": "SnapshotId"
            }
          ]
        },
        {
          "name": "makeSnapshot",
          "description": "返回图层快照标识符。",
          "parameters": [
            {
              "name": "layerId",
              "description": "图层的 ID。",
              "$ref": "LayerId"
            }
          ],
          "returns": [
            {
              "name": "snapshotId",
              "description": "图层快照的 ID。",
              "$ref": "SnapshotId"
            }
          ]
        },
        {
          "name": "profileSnapshot",
          "parameters": [
            {
              "name": "snapshotId",
              "description": "图层快照的 ID。",
              "$ref": "SnapshotId"
            },
            {
              "name": "minRepeatCount",
              "description": "重放快照的最大次数（如果未指定，则为 1 次）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "minDuration",
              "description": "重放快照的最短持续时间（以秒为单位）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "clipRect",
              "description": "重播快照时要应用的剪辑矩形。",
              "optional": true,
              "$ref": "DOM.Rect"
            }
          ],
          "returns": [
            {
              "name": "timings",
              "description": "一系列油漆配置文件，每次运行一个。",
              "type": "array",
              "items": {
                "$ref": "PaintProfile"
              }
            }
          ]
        },
        {
          "name": "releaseSnapshot",
          "description": "释放后端捕获的图层快照。",
          "parameters": [
            {
              "name": "snapshotId",
              "description": "图层快照的 ID。",
              "$ref": "SnapshotId"
            }
          ]
        },
        {
          "name": "replaySnapshot",
          "description": "重播图层快照并返回结果位图。",
          "parameters": [
            {
              "name": "snapshotId",
              "description": "图层快照的 ID。",
              "$ref": "SnapshotId"
            },
            {
              "name": "fromStep",
              "description": "重播的第一步（如果未指定，则从头开始重播）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "toStep",
              "description": "重播的最后一步（如果未指定，则重播到最后）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "scale",
              "description": "重播时应用的比例（默认为 1）。",
              "optional": true,
              "type": "number"
            }
          ],
          "returns": [
            {
              "name": "dataURL",
              "description": "数据：结果图像的 URL。",
              "type": "string"
            }
          ]
        },
        {
          "name": "snapshotCommandLog",
          "description": "重播图层快照并返回画布日志。",
          "parameters": [
            {
              "name": "snapshotId",
              "description": "图层快照的 ID。",
              "$ref": "SnapshotId"
            }
          ],
          "returns": [
            {
              "name": "commandLog",
              "description": "画布函数调用的数组。",
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "layerPainted",
          "parameters": [
            {
              "name": "layerId",
              "description": "绘制层的id。",
              "$ref": "LayerId"
            },
            {
              "name": "clip",
              "description": "剪辑矩形。",
              "$ref": "DOM.Rect"
            }
          ]
        },
        {
          "name": "layerTreeDidChange",
          "parameters": [
            {
              "name": "layers",
              "description": "图层树，如果不在合成模式下则不存在。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Layer"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Log",
      "description": "提供对日志条目的访问。",
      "dependencies": [
        "Runtime",
        "Network"
      ],
      "types": [
        {
          "id": "LogEntry",
          "description": "日志条目。",
          "type": "object",
          "properties": [
            {
              "name": "source",
              "description": "日志条目来源。",
              "type": "string",
              "enum": [
                "xml",
                "javascript",
                "network",
                "storage",
                "appcache",
                "rendering",
                "security",
                "deprecation",
                "worker",
                "violation",
                "intervention",
                "recommendation",
                "other"
              ]
            },
            {
              "name": "level",
              "description": "日志条目严重性。",
              "type": "string",
              "enum": [
                "verbose",
                "info",
                "warning",
                "error"
              ]
            },
            {
              "name": "text",
              "description": "记录的文本。",
              "type": "string"
            },
            {
              "name": "category",
              "optional": true,
              "type": "string",
              "enum": [
                "cors"
              ]
            },
            {
              "name": "timestamp",
              "description": "添加此条目时的时间戳。",
              "$ref": "Runtime.Timestamp"
            },
            {
              "name": "url",
              "description": "资源的 URL（如果已知）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "lineNumber",
              "description": "资源中的行号。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "stackTrace",
              "description": "JavaScript 堆栈跟踪。",
              "optional": true,
              "$ref": "Runtime.StackTrace"
            },
            {
              "name": "networkRequestId",
              "description": "与此条目关联的网络请求的标识符。",
              "optional": true,
              "$ref": "Network.RequestId"
            },
            {
              "name": "workerId",
              "description": "与此条目关联的工作人员的标识符。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "args",
              "description": "调用参数。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Runtime.RemoteObject"
              }
            }
          ]
        },
        {
          "id": "ViolationSetting",
          "description": "违反配置设置。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "违规类型。",
              "type": "string",
              "enum": [
                "longTask",
                "longLayout",
                "blockedEvent",
                "blockedParser",
                "discouragedAPIUse",
                "handler",
                "recurringHandler"
              ]
            },
            {
              "name": "threshold",
              "description": "触发的时间阈值。",
              "type": "number"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "clear",
          "description": "清除日志。"
        },
        {
          "name": "disable",
          "description": "禁用日志域，防止向客户端报告更多日志条目。"
        },
        {
          "name": "enable",
          "description": "启用日志域，将迄今为止收集的条目通过以下方式发送到客户端\n`entryAdded` 通知。"
        },
        {
          "name": "startViolationsReport",
          "description": "开始违规举报。",
          "parameters": [
            {
              "name": "config",
              "description": "违规配置。",
              "type": "array",
              "items": {
                "$ref": "ViolationSetting"
              }
            }
          ]
        },
        {
          "name": "stopViolationsReport",
          "description": "停止违规举报。"
        }
      ],
      "events": [
        {
          "name": "entryAdded",
          "description": "记录新消息时发出。",
          "parameters": [
            {
              "name": "entry",
              "description": "条目。",
              "$ref": "LogEntry"
            }
          ]
        }
      ]
    },
    {
      "domain": "Media",
      "description": "该域允许对媒体元素进行详细检查。",
      "experimental": true,
      "types": [
        {
          "id": "PlayerId",
          "description": "玩家将获得一个在代理上下文中唯一的 ID。",
          "type": "string"
        },
        {
          "id": "Timestamp",
          "type": "number"
        },
        {
          "id": "PlayerMessage",
          "description": "MediaLogRecord::Type 中的每个条目都有一种类型\n对应kMessage",
          "type": "object",
          "properties": [
            {
              "name": "level",
              "description": "与 MediaLogMessageLevel 保持同步\n我们目前将消息级别“错误”与\nPlayerError 类型因为现在它们代表不同的东西，\n这是打印的 DVLOG(ERROR) 样式日志消息\n基于 UI 中选择的日志级别，另一个是\nmedia::PipelineStatus 对象的表示。然而很快我们就\n将不再使用 PipelineStatus 来处理错误和\n引入一种新的错误类型，有望让我们集成\n将错误日志级别写入 PlayerError 类型。",
              "type": "string",
              "enum": [
                "error",
                "warning",
                "info",
                "debug"
              ]
            },
            {
              "name": "message",
              "type": "string"
            }
          ]
        },
        {
          "id": "PlayerProperty",
          "description": "对应于kMediaPropertyChange",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "PlayerEvent",
          "description": "对应kMediaEventTriggered",
          "type": "object",
          "properties": [
            {
              "name": "timestamp",
              "$ref": "Timestamp"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "PlayerErrorSourceLocation",
          "description": "表示错误中报告的记录的源行号。\n注意：文件和行来自 chromium c++ 实现代码，而不是 js。",
          "type": "object",
          "properties": [
            {
              "name": "file",
              "type": "string"
            },
            {
              "name": "line",
              "type": "integer"
            }
          ]
        },
        {
          "id": "PlayerError",
          "description": "对应于kMediaError",
          "type": "object",
          "properties": [
            {
              "name": "errorType",
              "type": "string"
            },
            {
              "name": "code",
              "description": "Code 是一组特定错误代码的数字枚举条目，例如\n作为 media/base/pipeline_status.h 中的 PipelineStatusCodes",
              "type": "integer"
            },
            {
              "name": "stack",
              "description": "导致此错误的位置/它经过的位置的痕迹。",
              "type": "array",
              "items": {
                "$ref": "PlayerErrorSourceLocation"
              }
            },
            {
              "name": "cause",
              "description": "错误可能有根本原因错误，即 DecoderError 可能是\n由 Windows 错误引起",
              "type": "array",
              "items": {
                "$ref": "PlayerError"
              }
            },
            {
              "name": "data",
              "description": "附加到错误的额外数据，例如 HRESULT、视频编解码器等。",
              "type": "object"
            }
          ]
        },
        {
          "id": "Player",
          "type": "object",
          "properties": [
            {
              "name": "playerId",
              "$ref": "PlayerId"
            },
            {
              "name": "domNodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "playerPropertiesChanged",
          "description": "这可以被多次调用，并且可以用于设置/覆盖/\n删除玩家属性。空 propValue 表示删除。",
          "parameters": [
            {
              "name": "playerId",
              "$ref": "PlayerId"
            },
            {
              "name": "properties",
              "type": "array",
              "items": {
                "$ref": "PlayerProperty"
              }
            }
          ]
        },
        {
          "name": "playerEventsAdded",
          "description": "以列表形式发送事件，从而可以在浏览器上以更少的成本对事件进行批处理\n拥堵。如果分批进行，事件必须始终按时间顺序排列。",
          "parameters": [
            {
              "name": "playerId",
              "$ref": "PlayerId"
            },
            {
              "name": "events",
              "type": "array",
              "items": {
                "$ref": "PlayerEvent"
              }
            }
          ]
        },
        {
          "name": "playerMessagesLogged",
          "description": "发送需要传递的任何消息的列表。",
          "parameters": [
            {
              "name": "playerId",
              "$ref": "PlayerId"
            },
            {
              "name": "messages",
              "type": "array",
              "items": {
                "$ref": "PlayerMessage"
              }
            }
          ]
        },
        {
          "name": "playerErrorsRaised",
          "description": "发送需要传递的任何错误的列表。",
          "parameters": [
            {
              "name": "playerId",
              "$ref": "PlayerId"
            },
            {
              "name": "errors",
              "type": "array",
              "items": {
                "$ref": "PlayerError"
              }
            }
          ]
        },
        {
          "name": "playerCreated",
          "description": "每当创建玩家或新代理加入并接收消息时调用\n活跃玩家列表。如果代理恢复，它将收到一个\n每个活跃玩家的活动。",
          "parameters": [
            {
              "name": "player",
              "$ref": "Player"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "启用媒体域"
        },
        {
          "name": "disable",
          "description": "禁用媒体域。"
        }
      ]
    },
    {
      "domain": "Memory",
      "experimental": true,
      "types": [
        {
          "id": "PressureLevel",
          "description": "内存压力级别。",
          "type": "string",
          "enum": [
            "moderate",
            "critical"
          ]
        },
        {
          "id": "SamplingProfileNode",
          "description": "堆配置文件示例。",
          "type": "object",
          "properties": [
            {
              "name": "size",
              "description": "抽样分配的大小。",
              "type": "number"
            },
            {
              "name": "total",
              "description": "归因于此样本的总字节数。",
              "type": "number"
            },
            {
              "name": "stack",
              "description": "分配点的执行堆栈。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "SamplingProfile",
          "description": "堆配置文件样本数组。",
          "type": "object",
          "properties": [
            {
              "name": "samples",
              "type": "array",
              "items": {
                "$ref": "SamplingProfileNode"
              }
            },
            {
              "name": "modules",
              "type": "array",
              "items": {
                "$ref": "Module"
              }
            }
          ]
        },
        {
          "id": "Module",
          "description": "可执行模块信息",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "模块的名称。",
              "type": "string"
            },
            {
              "name": "uuid",
              "description": "模块的 UUID。",
              "type": "string"
            },
            {
              "name": "baseAddress",
              "description": "模块加载到内存的基地址。编码为十进制\n或十六进制（0x 前缀）字符串。",
              "type": "string"
            },
            {
              "name": "size",
              "description": "模块的大小（以字节为单位）。",
              "type": "number"
            }
          ]
        },
        {
          "id": "DOMCounter",
          "description": "DOM 对象计数器数据。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "对象名称。注意：对象名称应该被假定为易变的，并且客户端不应该期望\n返回的名称在运行中保持一致。",
              "type": "string"
            },
            {
              "name": "count",
              "description": "对象计数。",
              "type": "integer"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getDOMCounters",
          "description": "返回当前 DOM 对象计数器。",
          "returns": [
            {
              "name": "documents",
              "type": "integer"
            },
            {
              "name": "nodes",
              "type": "integer"
            },
            {
              "name": "jsEventListeners",
              "type": "integer"
            }
          ]
        },
        {
          "name": "getDOMCountersForLeakDetection",
          "description": "在准备渲染器进行泄漏检测后返回 DOM 对象计数器。",
          "returns": [
            {
              "name": "counters",
              "description": "DOM 对象计数器。",
              "type": "array",
              "items": {
                "$ref": "DOMCounter"
              }
            }
          ]
        },
        {
          "name": "prepareForLeakDetection",
          "description": "通过终止工作人员、停止拼写检查程序来准备泄漏检测，\n删除非必要的内部缓存、运行垃圾收集等。"
        },
        {
          "name": "forciblyPurgeJavaScriptMemory",
          "description": "通过清除 V8 内存来模拟 OomIntervention。"
        },
        {
          "name": "setPressureNotificationsSuppressed",
          "description": "启用/禁用抑制所有进程中的内存压力通知。",
          "parameters": [
            {
              "name": "suppressed",
              "description": "如果为 true，内存压力通知将被抑制。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "simulatePressureNotification",
          "description": "模拟所有进程中的内存压力通知。",
          "parameters": [
            {
              "name": "level",
              "description": "通知的内存压力级别。",
              "$ref": "PressureLevel"
            }
          ]
        },
        {
          "name": "startSampling",
          "description": "开始收集本机内存配置文件。",
          "parameters": [
            {
              "name": "samplingInterval",
              "description": "样本之间的平均字节数。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "suppressRandomness",
              "description": "不要随机化样本之间的间隔。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "stopSampling",
          "description": "停止收集本机内存配置文件。"
        },
        {
          "name": "getAllTimeSamplingProfile",
          "description": "检索本机内存分配配置文件\n自渲染器进程启动以来收集。",
          "returns": [
            {
              "name": "profile",
              "$ref": "SamplingProfile"
            }
          ]
        },
        {
          "name": "getBrowserSamplingProfile",
          "description": "检索本机内存分配配置文件\n自浏览器进程启动以来收集。",
          "returns": [
            {
              "name": "profile",
              "$ref": "SamplingProfile"
            }
          ]
        },
        {
          "name": "getSamplingProfile",
          "description": "检索自上次以来收集的本机内存分配配置文件\n`startSampling` 调用。",
          "returns": [
            {
              "name": "profile",
              "$ref": "SamplingProfile"
            }
          ]
        }
      ]
    },
    {
      "domain": "Network",
      "description": "网络域允许跟踪页面的网络活动。它公开了有关http的信息，\n文件、数据和其他请求和响应，它们的标头、正文、时间等。",
      "dependencies": [
        "Debugger",
        "Runtime",
        "Security"
      ],
      "types": [
        {
          "id": "ResourceType",
          "description": "渲染引擎感知的资源类型。",
          "type": "string",
          "enum": [
            "Document",
            "Stylesheet",
            "Image",
            "Media",
            "Font",
            "Script",
            "TextTrack",
            "XHR",
            "Fetch",
            "Prefetch",
            "EventSource",
            "WebSocket",
            "Manifest",
            "SignedExchange",
            "Ping",
            "CSPViolationReport",
            "Preflight",
            "FedCM",
            "Other"
          ]
        },
        {
          "id": "LoaderId",
          "description": "唯一的加载器标识符。",
          "type": "string"
        },
        {
          "id": "RequestId",
          "description": "唯一的网络请求标识符。\n请注意，这并不识别属于以下部分的单个 HTTP 请求\n网络请求。",
          "type": "string"
        },
        {
          "id": "InterceptionId",
          "description": "唯一拦截的请求标识符。",
          "type": "string"
        },
        {
          "id": "ErrorReason",
          "description": "网络级获取失败原因。",
          "type": "string",
          "enum": [
            "Failed",
            "Aborted",
            "TimedOut",
            "AccessDenied",
            "ConnectionClosed",
            "ConnectionReset",
            "ConnectionRefused",
            "ConnectionAborted",
            "ConnectionFailed",
            "NameNotResolved",
            "InternetDisconnected",
            "AddressUnreachable",
            "BlockedByClient",
            "BlockedByResponse"
          ]
        },
        {
          "id": "TimeSinceEpoch",
          "description": "UTC 时间（以秒为单位），从 1970 年 1 月 1 日开始计算。",
          "type": "number"
        },
        {
          "id": "MonotonicTime",
          "description": "自过去任意点以来单调增加的时间（以秒为单位）。",
          "type": "number"
        },
        {
          "id": "Headers",
          "description": "请求/响应标头作为 JSON 对象的键/值。",
          "type": "object"
        },
        {
          "id": "ConnectionType",
          "description": "浏览器应该使用的底层连接技术。",
          "type": "string",
          "enum": [
            "none",
            "cellular2g",
            "cellular3g",
            "cellular4g",
            "bluetooth",
            "ethernet",
            "wifi",
            "wimax",
            "other"
          ]
        },
        {
          "id": "CookieSameSite",
          "description": "代表 cookie 的“SameSite”状态：\nhttps://tools.ietf.org/html/draft-west-first-party-cookies",
          "type": "string",
          "enum": [
            "Strict",
            "Lax",
            "None"
          ]
        },
        {
          "id": "CookiePriority",
          "description": "代表 cookie 的“优先级”状态：\nhttps://tools.ietf.org/html/draft-west-cookie-priority-00",
          "experimental": true,
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ]
        },
        {
          "id": "CookieSourceScheme",
          "description": "表示最初设置cookie的源的源方案。\n“Unset”值允许协议客户端模拟该方案的旧 cookie 范围。\n这是暂时的能力，将来会被删除。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Unset",
            "NonSecure",
            "Secure"
          ]
        },
        {
          "id": "ResourceTiming",
          "description": "请求的时间信息。",
          "type": "object",
          "properties": [
            {
              "name": "requestTime",
              "description": "Timing的requestTime是以秒为单位的基线，而其他数字则以刻度为单位\n相对于该 requestTime 的毫秒数。",
              "type": "number"
            },
            {
              "name": "proxyStart",
              "description": "开始解析代理。",
              "type": "number"
            },
            {
              "name": "proxyEnd",
              "description": "完成代理解析。",
              "type": "number"
            },
            {
              "name": "dnsStart",
              "description": "开始 DNS 地址解析。",
              "type": "number"
            },
            {
              "name": "dnsEnd",
              "description": "完成DNS地址解析。",
              "type": "number"
            },
            {
              "name": "connectStart",
              "description": "开始连接到远程主机。",
              "type": "number"
            },
            {
              "name": "connectEnd",
              "description": "连接到远程主机。",
              "type": "number"
            },
            {
              "name": "sslStart",
              "description": "开始 SSL 握手。",
              "type": "number"
            },
            {
              "name": "sslEnd",
              "description": "完成 SSL 握手。",
              "type": "number"
            },
            {
              "name": "workerStart",
              "description": "开始运行ServiceWorker。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "workerReady",
              "description": "完成启动ServiceWorker。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "workerFetchStart",
              "description": "开始获取事件。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "workerRespondWithSettled",
              "description": "已解决的获取事件 respondWith Promise。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "workerRouterEvaluationStart",
              "description": "开始ServiceWorker静态路由源评估。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "workerCacheLookupStart",
              "description": "当源被评估为“缓存”时开始缓存查找。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "sendStart",
              "description": "开始发送请求。",
              "type": "number"
            },
            {
              "name": "sendEnd",
              "description": "请求发送完毕。",
              "type": "number"
            },
            {
              "name": "pushStart",
              "description": "服务器开始推送请求的时间。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "pushEnd",
              "description": "服务器完成推送请求的时间。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "receiveHeadersStart",
              "description": "开始接收响应标头。",
              "experimental": true,
              "type": "number"
            },
            {
              "name": "receiveHeadersEnd",
              "description": "完成接收响应标头。",
              "type": "number"
            }
          ]
        },
        {
          "id": "ResourcePriority",
          "description": "资源请求的加载优先级。",
          "type": "string",
          "enum": [
            "VeryLow",
            "Low",
            "Medium",
            "High",
            "VeryHigh"
          ]
        },
        {
          "id": "PostDataEntry",
          "description": "HTTP 请求的 Post 数据输入",
          "type": "object",
          "properties": [
            {
              "name": "bytes",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "Request",
          "description": "HTTP 请求数据。",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "请求 URL（不带片段）。",
              "type": "string"
            },
            {
              "name": "urlFragment",
              "description": "以哈希开头的所请求 URL 的片段（如果存在）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "method",
              "description": "HTTP 请求方法。",
              "type": "string"
            },
            {
              "name": "headers",
              "description": "HTTP 请求标头。",
              "$ref": "Headers"
            },
            {
              "name": "postData",
              "description": "HTTP POST 请求数据。\n请改用 postDataEntries。",
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "hasPostData",
              "description": "当请求有 POST 数据时为 true。请注意，当数据太长且此标志为 true 时，postData 仍可能被省略。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "postDataEntries",
              "description": "请求主体元素（将数据分为单独的条目）。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "PostDataEntry"
              }
            },
            {
              "name": "mixedContentType",
              "description": "请求的混合内容类型。",
              "optional": true,
              "$ref": "Security.MixedContentType"
            },
            {
              "name": "initialPriority",
              "description": "发送请求时资源请求的优先级。",
              "$ref": "ResourcePriority"
            },
            {
              "name": "referrerPolicy",
              "description": "请求的引荐来源网址政策，如 https://www.w3.org/TR/referrer-policy/ 中定义",
              "type": "string",
              "enum": [
                "unsafe-url",
                "no-referrer-when-downgrade",
                "no-referrer",
                "origin",
                "origin-when-cross-origin",
                "same-origin",
                "strict-origin",
                "strict-origin-when-cross-origin"
              ]
            },
            {
              "name": "isLinkPreload",
              "description": "是否通过链接预加载加载。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "trustTokenParams",
              "description": "当使用 TrustToken API 时为请求设置。包含参数\n由开发人员传递（例如通过“fetch”），如后端所理解的那样。",
              "experimental": true,
              "optional": true,
              "$ref": "TrustTokenParams"
            },
            {
              "name": "isSameSite",
              "description": "如果此资源请求被视为与 '同一站点'，则为 True\n对应主框架的请求。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isAdRelated",
              "description": "当资源请求与广告相关时为 true。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "SignedCertificateTimestamp",
          "description": "签名证书时间戳 (SCT) 的详细信息。",
          "type": "object",
          "properties": [
            {
              "name": "status",
              "description": "验证状态。",
              "type": "string"
            },
            {
              "name": "origin",
              "description": "起源。",
              "type": "string"
            },
            {
              "name": "logDescription",
              "description": "日志名称/描述。",
              "type": "string"
            },
            {
              "name": "logId",
              "description": "日志 ID。",
              "type": "string"
            },
            {
              "name": "timestamp",
              "description": "发行日期。与 TimeSinceEpoch 不同，它包含\n自 1970 年 1 月 1 日以来的毫秒数（UTC），而不是秒数。",
              "type": "number"
            },
            {
              "name": "hashAlgorithm",
              "description": "哈希算法。",
              "type": "string"
            },
            {
              "name": "signatureAlgorithm",
              "description": "签名算法。",
              "type": "string"
            },
            {
              "name": "signatureData",
              "description": "签名数据。",
              "type": "string"
            }
          ]
        },
        {
          "id": "SecurityDetails",
          "description": "有关请求的安全详细信息。",
          "type": "object",
          "properties": [
            {
              "name": "protocol",
              "description": "协议名称（例如“TLS 1.2”或“QUIC”）。",
              "type": "string"
            },
            {
              "name": "keyExchange",
              "description": "连接使用的密钥交换，或空字符串（如果不适用）。",
              "type": "string"
            },
            {
              "name": "keyExchangeGroup",
              "description": "连接使用的 (EC)DH 组（如果适用）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cipher",
              "description": "密码名称。",
              "type": "string"
            },
            {
              "name": "mac",
              "description": "TLS MAC。请注意，AEAD 密码没有单独的 MAC。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "certificateId",
              "description": "证书 ID 值。",
              "$ref": "Security.CertificateId"
            },
            {
              "name": "subjectName",
              "description": "证书主题名称。",
              "type": "string"
            },
            {
              "name": "sanList",
              "description": "使用者备用名称 (SAN) DNS 名称和 IP 地址。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "issuer",
              "description": "颁发 CA 的名称。",
              "type": "string"
            },
            {
              "name": "validFrom",
              "description": "证书自当日起有效。",
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "validTo",
              "description": "证书有效期至（到期）日期",
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "signedCertificateTimestampList",
              "description": "签名证书时间戳 (SCT) 列表。",
              "type": "array",
              "items": {
                "$ref": "SignedCertificateTimestamp"
              }
            },
            {
              "name": "certificateTransparencyCompliance",
              "description": "请求是否符合证书透明度政策",
              "$ref": "CertificateTransparencyCompliance"
            },
            {
              "name": "serverSignatureAlgorithm",
              "description": "TLS服务器签名中服务器使用的签名算法，\n表示为 TLS SignatureScheme 代码点。如果没有则省略\n适用或未知。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "encryptedClientHello",
              "description": "连接是否使用加密的ClientHello",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "CertificateTransparencyCompliance",
          "description": "请求是否符合证书透明度政策。",
          "type": "string",
          "enum": [
            "unknown",
            "not-compliant",
            "compliant"
          ]
        },
        {
          "id": "BlockedReason",
          "description": "请求被阻止的原因。",
          "type": "string",
          "enum": [
            "other",
            "csp",
            "mixed-content",
            "origin",
            "inspector",
            "integrity",
            "subresource-filter",
            "content-type",
            "coep-frame-resource-needs-coep-header",
            "coop-sandboxed-iframe-cannot-navigate-to-coop-page",
            "corp-not-same-origin",
            "corp-not-same-origin-after-defaulted-to-same-origin-by-coep",
            "corp-not-same-origin-after-defaulted-to-same-origin-by-dip",
            "corp-not-same-origin-after-defaulted-to-same-origin-by-coep-and-dip",
            "corp-not-same-site",
            "sri-message-signature-mismatch"
          ]
        },
        {
          "id": "IpProxyStatus",
          "description": "设置请求的 IP 代理的控制。\n在观察到新行为之前需要重新加载页面。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Available",
            "FeatureNotEnabled",
            "MaskedDomainListNotEnabled",
            "MaskedDomainListNotPopulated",
            "AuthTokensUnavailable",
            "Unavailable",
            "BypassedByDevTools"
          ]
        },
        {
          "id": "CorsError",
          "description": "请求被阻止的原因。",
          "type": "string",
          "enum": [
            "DisallowedByMode",
            "InvalidResponse",
            "WildcardOriginNotAllowed",
            "MissingAllowOriginHeader",
            "MultipleAllowOriginValues",
            "InvalidAllowOriginValue",
            "AllowOriginMismatch",
            "InvalidAllowCredentials",
            "CorsDisabledScheme",
            "PreflightInvalidStatus",
            "PreflightDisallowedRedirect",
            "PreflightWildcardOriginNotAllowed",
            "PreflightMissingAllowOriginHeader",
            "PreflightMultipleAllowOriginValues",
            "PreflightInvalidAllowOriginValue",
            "PreflightAllowOriginMismatch",
            "PreflightInvalidAllowCredentials",
            "PreflightMissingAllowExternal",
            "PreflightInvalidAllowExternal",
            "PreflightMissingAllowPrivateNetwork",
            "PreflightInvalidAllowPrivateNetwork",
            "InvalidAllowMethodsPreflightResponse",
            "InvalidAllowHeadersPreflightResponse",
            "MethodDisallowedByPreflightResponse",
            "HeaderDisallowedByPreflightResponse",
            "RedirectContainsCredentials",
            "InsecurePrivateNetwork",
            "InvalidPrivateNetworkAccess",
            "UnexpectedPrivateNetworkAccess",
            "NoCorsRedirectModeNotFollow",
            "PreflightMissingPrivateNetworkAccessId",
            "PreflightMissingPrivateNetworkAccessName",
            "PrivateNetworkAccessPermissionUnavailable",
            "PrivateNetworkAccessPermissionDenied",
            "LocalNetworkAccessPermissionDenied"
          ]
        },
        {
          "id": "CorsErrorStatus",
          "type": "object",
          "properties": [
            {
              "name": "corsError",
              "$ref": "CorsError"
            },
            {
              "name": "failedParameter",
              "type": "string"
            }
          ]
        },
        {
          "id": "ServiceWorkerResponseSource",
          "description": "ServiceWorker 响应的来源。",
          "type": "string",
          "enum": [
            "cache-storage",
            "http-cache",
            "fallback-code",
            "network"
          ]
        },
        {
          "id": "TrustTokenParams",
          "description": "确定执行什么类型的信任令牌操作以及\n根据类型，一些附加参数。价值观\n在third_party/blink/renderer/core/fetch/trust_token.idl中指定。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "operation",
              "$ref": "TrustTokenOperationType"
            },
            {
              "name": "refreshPolicy",
              "description": "只设置“代币兑换”操作并判断是否\n请求新的 SRR 或使用仍然有效的缓存 SRR。",
              "type": "string",
              "enum": [
                "UseCached",
                "Refresh"
              ]
            },
            {
              "name": "issuers",
              "description": "向其请求代币或赎回的发行人的来源\n记录。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "TrustTokenOperationType",
          "experimental": true,
          "type": "string",
          "enum": [
            "Issuance",
            "Redemption",
            "Signing"
          ]
        },
        {
          "id": "AlternateProtocolUsage",
          "description": "Chrome之所以使用特定的传输协议来实现HTTP语义。",
          "experimental": true,
          "type": "string",
          "enum": [
            "alternativeJobWonWithoutRace",
            "alternativeJobWonRace",
            "mainJobWonRace",
            "mappingMissing",
            "broken",
            "dnsAlpnH3JobWonWithoutRace",
            "dnsAlpnH3JobWonRace",
            "unspecifiedReason"
          ]
        },
        {
          "id": "ServiceWorkerRouterSource",
          "description": "Service Worker 路由器的来源。",
          "type": "string",
          "enum": [
            "network",
            "cache",
            "fetch-event",
            "race-network-and-fetch-handler",
            "race-network-and-cache"
          ]
        },
        {
          "id": "ServiceWorkerRouterInfo",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "ruleIdMatched",
              "description": "匹配的规则ID。如果有匹配的规则，该字段将\n被设置，否则不会设置任何值。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "matchedSourceType",
              "description": "匹配规则的路由器源。如果有匹配的规则，则此\n字段将被设置，否则不会设置任何值。",
              "optional": true,
              "$ref": "ServiceWorkerRouterSource"
            },
            {
              "name": "actualSourceType",
              "description": "实际使用的路由器源。",
              "optional": true,
              "$ref": "ServiceWorkerRouterSource"
            }
          ]
        },
        {
          "id": "Response",
          "description": "HTTP 响应数据。",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "响应网址。在重定向的情况下，此 URL 可能与 CachedResource.url 不同。",
              "type": "string"
            },
            {
              "name": "status",
              "description": "HTTP 响应状态代码。",
              "type": "integer"
            },
            {
              "name": "statusText",
              "description": "HTTP 响应状态文本。",
              "type": "string"
            },
            {
              "name": "headers",
              "description": "HTTP 响应标头。",
              "$ref": "Headers"
            },
            {
              "name": "headersText",
              "description": "HTTP 响应标头文本。它已被 Network.responseReceivedExtraInfo 中的标头取代。",
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "mimeType",
              "description": "由浏览器确定的资源 mimeType。",
              "type": "string"
            },
            {
              "name": "charset",
              "description": "由浏览器确定的资源字符集（如果适用）。",
              "type": "string"
            },
            {
              "name": "requestHeaders",
              "description": "精炼了实际通过网络传输的 HTTP 请求标头。",
              "optional": true,
              "$ref": "Headers"
            },
            {
              "name": "requestHeadersText",
              "description": "HTTP 请求标头文本。它已被 Network.requestWillBeSentExtraInfo 中的标头取代。",
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "connectionReused",
              "description": "指定该请求是否实际重用了物理连接。",
              "type": "boolean"
            },
            {
              "name": "connectionId",
              "description": "该请求实际使用的物理连接 ID。",
              "type": "number"
            },
            {
              "name": "remoteIPAddress",
              "description": "远程 IP 地址。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "远程端口。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "fromDiskCache",
              "description": "指定请求是从磁盘缓存提供的。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "fromServiceWorker",
              "description": "指定该请求是由 ServiceWorker 提供的。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "fromPrefetchCache",
              "description": "指定请求是从预取缓存提供的。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "fromEarlyHints",
              "description": "指定请求是从预取缓存提供的。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "serviceWorkerRouterInfo",
              "description": "有关如何使用 ServiceWorker 静态路由器 API 的信息。如果这个\n字段设置为“matchedSourceType”字段，则找到匹配规则。\n如果该字段没有设置“matchedSource”，则找不到匹配规则。\n否则，不会使用该 API。",
              "experimental": true,
              "optional": true,
              "$ref": "ServiceWorkerRouterInfo"
            },
            {
              "name": "encodedDataLength",
              "description": "到目前为止该请求收到的总字节数。",
              "type": "number"
            },
            {
              "name": "timing",
              "description": "给定请求的时间信息。",
              "optional": true,
              "$ref": "ResourceTiming"
            },
            {
              "name": "serviceWorkerResponseSource",
              "description": "ServiceWorker 的响应的响应源。",
              "optional": true,
              "$ref": "ServiceWorkerResponseSource"
            },
            {
              "name": "responseTime",
              "description": "返回响应的生成时间。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "cacheStorageCacheName",
              "description": "缓存存储缓存名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "protocol",
              "description": "用于获取此请求的协议。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "alternateProtocolUsage",
              "description": "Chrome之所以使用特定的传输协议来实现HTTP语义。",
              "experimental": true,
              "optional": true,
              "$ref": "AlternateProtocolUsage"
            },
            {
              "name": "securityState",
              "description": "请求资源的安全状态。",
              "$ref": "Security.SecurityState"
            },
            {
              "name": "securityDetails",
              "description": "请求的安全详细信息。",
              "optional": true,
              "$ref": "SecurityDetails"
            },
            {
              "name": "isIpProtectionUsed",
              "description": "指示请求是否通过 IP 保护代理发送。如果\n设置为 true，请求使用 IP 保护隐私功能。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "WebSocketRequest",
          "description": "WebSocket 请求数据。",
          "type": "object",
          "properties": [
            {
              "name": "headers",
              "description": "HTTP 请求标头。",
              "$ref": "Headers"
            }
          ]
        },
        {
          "id": "WebSocketResponse",
          "description": "WebSocket 响应数据。",
          "type": "object",
          "properties": [
            {
              "name": "status",
              "description": "HTTP 响应状态代码。",
              "type": "integer"
            },
            {
              "name": "statusText",
              "description": "HTTP 响应状态文本。",
              "type": "string"
            },
            {
              "name": "headers",
              "description": "HTTP 响应标头。",
              "$ref": "Headers"
            },
            {
              "name": "headersText",
              "description": "HTTP 响应标头文本。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "requestHeaders",
              "description": "HTTP 请求标头。",
              "optional": true,
              "$ref": "Headers"
            },
            {
              "name": "requestHeadersText",
              "description": "HTTP 请求标头文本。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "WebSocketFrame",
          "description": "WebSocket 消息数据。这代表了整个 WebSocket 消息，而不仅仅是顾名思义的碎片帧。",
          "type": "object",
          "properties": [
            {
              "name": "opcode",
              "description": "WebSocket 消息操作码。",
              "type": "number"
            },
            {
              "name": "mask",
              "description": "WebSocket 消息掩码。",
              "type": "boolean"
            },
            {
              "name": "payloadData",
              "description": "WebSocket 消息负载数据。\n如果操作码为 1，则这是一条文本消息，payloadData 是一个 UTF-8 字符串。\n如果操作码不是 1，则有效负载数据是表示二进制数据的 Base64 编码字符串。",
              "type": "string"
            }
          ]
        },
        {
          "id": "CachedResource",
          "description": "有关缓存资源的信息。",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "资源网址。这是原始网络请求的url。",
              "type": "string"
            },
            {
              "name": "type",
              "description": "该资源的类型。",
              "$ref": "ResourceType"
            },
            {
              "name": "response",
              "description": "缓存响应数据。",
              "optional": true,
              "$ref": "Response"
            },
            {
              "name": "bodySize",
              "description": "缓存的响应正文大小。",
              "type": "number"
            }
          ]
        },
        {
          "id": "Initiator",
          "description": "有关请求发起者的信息。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "该启动器的类型。",
              "type": "string",
              "enum": [
                "parser",
                "script",
                "preload",
                "SignedExchange",
                "preflight",
                "FedCM",
                "other"
              ]
            },
            {
              "name": "stack",
              "description": "启动器 JavaScript 堆栈跟踪，仅为脚本设置。\n需要启用调试器域。",
              "optional": true,
              "$ref": "Runtime.StackTrace"
            },
            {
              "name": "url",
              "description": "启动器 URL，为解析器类型或脚本类型（当脚本导入模块时）或 SignedExchange 类型设置。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "lineNumber",
              "description": "启动器行号，为解析器类型或脚本类型设置（当脚本导入时\n模块）（从 0 开始）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "columnNumber",
              "description": "启动器列号，为解析器类型或脚本类型设置（当脚本导入时）\n模块）（从 0 开始）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "requestId",
              "description": "设置是否有另一个请求触发此请求（例如预检）。",
              "optional": true,
              "$ref": "RequestId"
            }
          ]
        },
        {
          "id": "CookiePartitionKey",
          "description": "cookiePartitionKey 对象\n由 net/cookies/cookie_partition_key.h 中包含的 cookiePartitionKey 类创建的密钥组件的表示形式。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "topLevelSite",
              "description": "浏览器开始时访问的顶级 URL 的站点\n向设置 cookie 的端点发出请求。",
              "type": "string"
            },
            {
              "name": "hasCrossSiteAncestor",
              "description": "指示 cookie 是否有任何跨站点到 topLevelSite 的祖先。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Cookie",
          "description": "Cookie 对象",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "饼干名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "Cookie 值。",
              "type": "string"
            },
            {
              "name": "domain",
              "description": "Cookie 域。",
              "type": "string"
            },
            {
              "name": "path",
              "description": "饼干路径。",
              "type": "string"
            },
            {
              "name": "expires",
              "description": "Cookie 过期日期为自 UNIX 纪元以来的秒数。\n如果未设置到期日期，则该值设置为 -1。\n对于无法表示的值，该值可以为 null\nJSON (±Inf)。",
              "type": "number"
            },
            {
              "name": "size",
              "description": "饼干大小。",
              "type": "integer"
            },
            {
              "name": "httpOnly",
              "description": "如果 cookie 仅限 http，则为 true。",
              "type": "boolean"
            },
            {
              "name": "secure",
              "description": "如果 cookie 是安全的，则为 true。",
              "type": "boolean"
            },
            {
              "name": "session",
              "description": "如果是会话 cookie，则为 true。",
              "type": "boolean"
            },
            {
              "name": "sameSite",
              "description": "Cookie SameSite 类型。",
              "optional": true,
              "$ref": "CookieSameSite"
            },
            {
              "name": "priority",
              "description": "Cookie 优先级",
              "experimental": true,
              "$ref": "CookiePriority"
            },
            {
              "name": "sameParty",
              "description": "如果 cookie 是 SameParty，则为 true。",
              "experimental": true,
              "deprecated": true,
              "type": "boolean"
            },
            {
              "name": "sourceScheme",
              "description": "Cookie 源方案类型。",
              "experimental": true,
              "$ref": "CookieSourceScheme"
            },
            {
              "name": "sourcePort",
              "description": "Cookie 源端口。有效值为{-1, [1, 65535]}，-1表示未指定端口。\n未指定的端口值允许协议客户端模拟该端口的旧版 cookie 范围。\n这是暂时的能力，将来会被删除。",
              "experimental": true,
              "type": "integer"
            },
            {
              "name": "partitionKey",
              "description": "Cookie 分区键。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePartitionKey"
            },
            {
              "name": "partitionKeyOpaque",
              "description": "如果 cookie 分区键不透明，则为 True。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "SetCookieBlockedReason",
          "description": "无法从响应中存储 cookie 的原因类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "SecureOnly",
            "SameSiteStrict",
            "SameSiteLax",
            "SameSiteUnspecifiedTreatedAsLax",
            "SameSiteNoneInsecure",
            "UserPreferences",
            "ThirdPartyPhaseout",
            "ThirdPartyBlockedInFirstPartySet",
            "SyntaxError",
            "SchemeNotSupported",
            "OverwriteSecure",
            "InvalidDomain",
            "InvalidPrefix",
            "UnknownError",
            "SchemefulSameSiteStrict",
            "SchemefulSameSiteLax",
            "SchemefulSameSiteUnspecifiedTreatedAsLax",
            "SamePartyFromCrossPartyContext",
            "SamePartyConflictsWithOtherAttributes",
            "NameValuePairExceedsMaxSize",
            "DisallowedCharacter",
            "NoCookieContent"
          ]
        },
        {
          "id": "CookieBlockedReason",
          "description": "cookie 不能与请求一起发送的原因类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "SecureOnly",
            "NotOnPath",
            "DomainMismatch",
            "SameSiteStrict",
            "SameSiteLax",
            "SameSiteUnspecifiedTreatedAsLax",
            "SameSiteNoneInsecure",
            "UserPreferences",
            "ThirdPartyPhaseout",
            "ThirdPartyBlockedInFirstPartySet",
            "UnknownError",
            "SchemefulSameSiteStrict",
            "SchemefulSameSiteLax",
            "SchemefulSameSiteUnspecifiedTreatedAsLax",
            "SamePartyFromCrossPartyContext",
            "NameValuePairExceedsMaxSize",
            "PortMismatch",
            "SchemeMismatch",
            "AnonymousContext"
          ]
        },
        {
          "id": "CookieExemptionReason",
          "description": "Cookie 本应被 3PCD 阻止但请求豁免的原因类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "None",
            "UserSetting",
            "TPCDMetadata",
            "TPCDDeprecationTrial",
            "TopLevelTPCDDeprecationTrial",
            "TPCDHeuristics",
            "EnterprisePolicy",
            "StorageAccess",
            "TopLevelStorageAccess",
            "Scheme",
            "SameSiteNoneCookiesInSandbox"
          ]
        },
        {
          "id": "BlockedSetCookieWithReason",
          "description": "由于相应原因而未从响应中存储的 cookie。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "blockedReasons",
              "description": "此 cookie 被阻止的原因。",
              "type": "array",
              "items": {
                "$ref": "SetCookieBlockedReason"
              }
            },
            {
              "name": "cookieLine",
              "description": "表示此单独 cookie 的字符串，就像它出现在标头中一样。\n这不是完整的“cookie”或“set-cookie”标头，它们可能有多个 cookie。",
              "type": "string"
            },
            {
              "name": "cookie",
              "description": "表示未存储的 cookie 的 cookie 对象。它是可选的，因为\n有时无法获得完整的cookie信息，例如在解析的情况下\n错误。",
              "optional": true,
              "$ref": "Cookie"
            }
          ]
        },
        {
          "id": "ExemptedSetCookieWithReason",
          "description": "cookie 应该被 3PCD 阻止，但可以从响应中豁免并存储\n相应的原因。 Cookie 最多只能有一个豁免原因。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "exemptionReason",
              "description": "Cookie 被豁免的原因。",
              "$ref": "CookieExemptionReason"
            },
            {
              "name": "cookieLine",
              "description": "表示此单独 cookie 的字符串，就像它出现在标头中一样。",
              "type": "string"
            },
            {
              "name": "cookie",
              "description": "代表 cookie 的 cookie 对象。",
              "$ref": "Cookie"
            }
          ]
        },
        {
          "id": "AssociatedCookie",
          "description": "与请求关联的 cookie，可能会也可能不会随请求一起发送。\n包括 cookie 本身以及阻止或豁免的原因。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "cookie",
              "description": "表示未发送的 cookie 的 cookie 对象。",
              "$ref": "Cookie"
            },
            {
              "name": "blockedReasons",
              "description": "cookie 被阻止的原因。如果为空则表示包含 cookie。",
              "type": "array",
              "items": {
                "$ref": "CookieBlockedReason"
              }
            },
            {
              "name": "exemptionReason",
              "description": "cookie 应该被 3PCD 阻止但被豁免的原因。一块饼干可以\n至多只有一个豁免理由。",
              "optional": true,
              "$ref": "CookieExemptionReason"
            }
          ]
        },
        {
          "id": "CookieParam",
          "description": "Cookie参数对象",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "饼干名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "Cookie 值。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "与 cookie 设置关联的请求 URI。该值可以影响\n创建的 cookie 的默认域、路径、源端口和源方案值。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "domain",
              "description": "Cookie 域。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "饼干路径。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "secure",
              "description": "如果 cookie 是安全的，则为 True。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "httpOnly",
              "description": "如果 cookie 仅限 http，则为 True。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "sameSite",
              "description": "Cookie SameSite 类型。",
              "optional": true,
              "$ref": "CookieSameSite"
            },
            {
              "name": "expires",
              "description": "Cookie 过期日期，如果未设置则会话 Cookie",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "priority",
              "description": "Cookie 优先。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePriority"
            },
            {
              "name": "sameParty",
              "description": "如果 cookie 是 SameParty，则为 true。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "sourceScheme",
              "description": "Cookie 源方案类型。",
              "experimental": true,
              "optional": true,
              "$ref": "CookieSourceScheme"
            },
            {
              "name": "sourcePort",
              "description": "Cookie 源端口。有效值为{-1, [1, 65535]}，-1表示未指定端口。\n未指定的端口值允许协议客户端模拟该端口的旧版 cookie 范围。\n这是暂时的能力，将来会被删除。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "partitionKey",
              "description": "Cookie 分区键。如果未设置，cookie 将被设置为未分区。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePartitionKey"
            }
          ]
        },
        {
          "id": "AuthChallenge",
          "description": "HTTP 状态代码 401 或 407 的授权质询。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "source",
              "description": "身份验证质询的来源。",
              "optional": true,
              "type": "string",
              "enum": [
                "Server",
                "Proxy"
              ]
            },
            {
              "name": "origin",
              "description": "挑战者的起源。",
              "type": "string"
            },
            {
              "name": "scheme",
              "description": "使用的身份验证方案，例如基本或摘要",
              "type": "string"
            },
            {
              "name": "realm",
              "description": "挑战的领域。可能是空的。",
              "type": "string"
            }
          ]
        },
        {
          "id": "AuthChallengeResponse",
          "description": "对 AuthChallenge 的响应。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "response",
              "description": "决定如何应对授权挑战。  默认方式\n遵循网络堆栈的默认行为，这可能会取消\n验证或显示弹出对话框。",
              "type": "string",
              "enum": [
                "Default",
                "CancelAuth",
                "ProvideCredentials"
              ]
            },
            {
              "name": "username",
              "description": "要提供的用户名，可能为空。仅应在响应为时设置\n提供凭据。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "password",
              "description": "要提供的密码，可能为空。仅应在响应为时设置\n提供凭据。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "InterceptionStage",
          "description": "拦截阶段开始拦截。请求将在请求之前拦截\n已发送。收到响应后将拦截响应。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Request",
            "HeadersReceived"
          ]
        },
        {
          "id": "RequestPattern",
          "description": "拦截的请求模式。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "urlPattern",
              "description": "允许使用通配符（`'*'` -> 零个或多个，`'?'` -> 正好一个）。转义字符是\n反斜杠。省略相当于`\"*\"`。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "resourceType",
              "description": "如果设置，则仅拦截匹配资源类型的请求。",
              "optional": true,
              "$ref": "ResourceType"
            },
            {
              "name": "interceptionStage",
              "description": "开始拦截请求的阶段。默认为请求。",
              "optional": true,
              "$ref": "InterceptionStage"
            }
          ]
        },
        {
          "id": "SignedExchangeSignature",
          "description": "有关已签名交换签名的信息。\nhttps://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#rfc.section.3.1",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "label",
              "description": "签名交换签名标签​​。",
              "type": "string"
            },
            {
              "name": "signature",
              "description": "签名交换签名的十六进制字符串。",
              "type": "string"
            },
            {
              "name": "integrity",
              "description": "签名交换签名完整性。",
              "type": "string"
            },
            {
              "name": "certUrl",
              "description": "已签名的交换签名证书​​ URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "certSha256",
              "description": "已签名的交换签名证书​​ sha256 的十六进制字符串。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "validityUrl",
              "description": "已签署的交换签名有效性 Url。",
              "type": "string"
            },
            {
              "name": "date",
              "description": "签署交换签名日期。",
              "type": "integer"
            },
            {
              "name": "expires",
              "description": "签署的交换签名过期。",
              "type": "integer"
            },
            {
              "name": "certificates",
              "description": "编码的证书。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "SignedExchangeHeader",
          "description": "有关签名交换标头的信息。\nhttps://wicg.github.io/webpackage/draft-yasskin-httpbis-origin-signed-exchanges-impl.html#cbor-representation",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "requestUrl",
              "description": "签名的交换请求 URL。",
              "type": "string"
            },
            {
              "name": "responseCode",
              "description": "签名的交换响应代码。",
              "type": "integer"
            },
            {
              "name": "responseHeaders",
              "description": "签名的交换响应标头。",
              "$ref": "Headers"
            },
            {
              "name": "signatures",
              "description": "签署交换响应签名。",
              "type": "array",
              "items": {
                "$ref": "SignedExchangeSignature"
              }
            },
            {
              "name": "headerIntegrity",
              "description": "以“sha256-<base64-hash-value>”形式签名的交换标头完整性哈希。",
              "type": "string"
            }
          ]
        },
        {
          "id": "SignedExchangeErrorField",
          "description": "签名交换相关错误的字段类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "signatureSig",
            "signatureIntegrity",
            "signatureCertUrl",
            "signatureCertSha256",
            "signatureValidityUrl",
            "signatureTimestamps"
          ]
        },
        {
          "id": "SignedExchangeError",
          "description": "有关已签名交换响应的信息。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "message",
              "description": "错误信息。",
              "type": "string"
            },
            {
              "name": "signatureIndex",
              "description": "导致错误的签名的索引。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "errorField",
              "description": "导致错误的字段。",
              "optional": true,
              "$ref": "SignedExchangeErrorField"
            }
          ]
        },
        {
          "id": "SignedExchangeInfo",
          "description": "有关已签名交换响应的信息。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "outerResponse",
              "description": "从网络接收的签名 HTTP 交换的外部响应。",
              "$ref": "Response"
            },
            {
              "name": "hasExtraInfo",
              "description": "签名交换的网络响应是否伴随\n额外的标头。",
              "type": "boolean"
            },
            {
              "name": "header",
              "description": "有关签名交换标头的信息。",
              "optional": true,
              "$ref": "SignedExchangeHeader"
            },
            {
              "name": "securityDetails",
              "description": "签名交换标头的安全详细信息。",
              "optional": true,
              "$ref": "SecurityDetails"
            },
            {
              "name": "errors",
              "description": "处理签名交换时发生错误。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "SignedExchangeError"
              }
            }
          ]
        },
        {
          "id": "ContentEncoding",
          "description": "后端支持的内容编码列表。",
          "experimental": true,
          "type": "string",
          "enum": [
            "deflate",
            "gzip",
            "br",
            "zstd"
          ]
        },
        {
          "id": "NetworkConditions",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "urlPattern",
              "description": "只有匹配的请求才会受到这些条件的影响。模式使用 URLPattern 构造函数字符串\n语法 (https://urlpattern.spec.whatwg.org/) 并且必须是绝对的。如果模式为空，则所有请求\n匹配（包括 p2p 连接）。",
              "type": "string"
            },
            {
              "name": "latency",
              "description": "从发送请求到收到响应标头的最短延迟（毫秒）。",
              "type": "number"
            },
            {
              "name": "downloadThroughput",
              "description": "最大聚合下载吞吐量（字节/秒）。 -1 禁用下载限制。",
              "type": "number"
            },
            {
              "name": "uploadThroughput",
              "description": "最大聚合上传吞吐量（字节/秒）。  -1 禁用上传限制。",
              "type": "number"
            },
            {
              "name": "connectionType",
              "description": "连接类型（如果已知）。",
              "optional": true,
              "$ref": "ConnectionType"
            },
            {
              "name": "packetLoss",
              "description": "WebRTC 数据包丢失（百分比，0-100）。 0 禁用丢包模拟，100 丢弃所有数据包。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "packetQueueLength",
              "description": "WebRTC数据包队列长度（数据包）。 0 消除任何队列长度限制。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "packetReordering",
              "description": "WebRTC 数据包重新排序功能。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "BlockPattern",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "urlPattern",
              "description": "要匹配的 URL 模式。模式使用 URLPattern 构造函数字符串语法\n(https://urlpattern.spec.whatwg.org/) 并且必须是绝对的。示例：`*://*:*/*.css`。",
              "type": "string"
            },
            {
              "name": "block",
              "description": "是否遮挡图案。如果为 false，则即使匹配到后面的请求，也不会阻止匹配的请求\n`块模式`。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "DirectSocketDnsQueryType",
          "experimental": true,
          "type": "string",
          "enum": [
            "ipv4",
            "ipv6"
          ]
        },
        {
          "id": "DirectTCPSocketOptions",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "noDelay",
              "description": "TCP_NODELAY 选项",
              "type": "boolean"
            },
            {
              "name": "keepAliveDelay",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "sendBufferSize",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "receiveBufferSize",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "dnsQueryType",
              "optional": true,
              "$ref": "DirectSocketDnsQueryType"
            }
          ]
        },
        {
          "id": "DirectUDPSocketOptions",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "remoteAddr",
              "optional": true,
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "无符号整数 16。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "localAddr",
              "optional": true,
              "type": "string"
            },
            {
              "name": "localPort",
              "description": "无符号整数 16。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "dnsQueryType",
              "optional": true,
              "$ref": "DirectSocketDnsQueryType"
            },
            {
              "name": "sendBufferSize",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "receiveBufferSize",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "DirectUDPMessage",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "data",
              "type": "string"
            },
            {
              "name": "remoteAddr",
              "description": "连接模式为空。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "连接模式为空。\n预期为无符号整数。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "PrivateNetworkRequestPolicy",
          "experimental": true,
          "type": "string",
          "enum": [
            "Allow",
            "BlockFromInsecureToMorePrivate",
            "WarnFromInsecureToMorePrivate",
            "PreflightBlock",
            "PreflightWarn",
            "PermissionBlock",
            "PermissionWarn"
          ]
        },
        {
          "id": "IPAddressSpace",
          "experimental": true,
          "type": "string",
          "enum": [
            "Loopback",
            "Local",
            "Public",
            "Unknown"
          ]
        },
        {
          "id": "ConnectTiming",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "requestTime",
              "description": "Timing的requestTime是以秒为单位的基线，而其他数字则以刻度为单位\n相对于该 requestTime 的毫秒数。匹配 ResourceTiming 的 requestTime\n相同的请求（但不适用于重定向请求）。",
              "type": "number"
            }
          ]
        },
        {
          "id": "ClientSecurityState",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "initiatorIsSecureContext",
              "type": "boolean"
            },
            {
              "name": "initiatorIPAddressSpace",
              "$ref": "IPAddressSpace"
            },
            {
              "name": "privateNetworkRequestPolicy",
              "$ref": "PrivateNetworkRequestPolicy"
            }
          ]
        },
        {
          "id": "CrossOriginOpenerPolicyValue",
          "experimental": true,
          "type": "string",
          "enum": [
            "SameOrigin",
            "SameOriginAllowPopups",
            "RestrictProperties",
            "UnsafeNone",
            "SameOriginPlusCoep",
            "RestrictPropertiesPlusCoep",
            "NoopenerAllowPopups"
          ]
        },
        {
          "id": "CrossOriginOpenerPolicyStatus",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "value",
              "$ref": "CrossOriginOpenerPolicyValue"
            },
            {
              "name": "reportOnlyValue",
              "$ref": "CrossOriginOpenerPolicyValue"
            },
            {
              "name": "reportingEndpoint",
              "optional": true,
              "type": "string"
            },
            {
              "name": "reportOnlyReportingEndpoint",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "CrossOriginEmbedderPolicyValue",
          "experimental": true,
          "type": "string",
          "enum": [
            "None",
            "Credentialless",
            "RequireCorp"
          ]
        },
        {
          "id": "CrossOriginEmbedderPolicyStatus",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "value",
              "$ref": "CrossOriginEmbedderPolicyValue"
            },
            {
              "name": "reportOnlyValue",
              "$ref": "CrossOriginEmbedderPolicyValue"
            },
            {
              "name": "reportingEndpoint",
              "optional": true,
              "type": "string"
            },
            {
              "name": "reportOnlyReportingEndpoint",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "ContentSecurityPolicySource",
          "experimental": true,
          "type": "string",
          "enum": [
            "HTTP",
            "Meta"
          ]
        },
        {
          "id": "ContentSecurityPolicyStatus",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "effectiveDirectives",
              "type": "string"
            },
            {
              "name": "isEnforced",
              "type": "boolean"
            },
            {
              "name": "source",
              "$ref": "ContentSecurityPolicySource"
            }
          ]
        },
        {
          "id": "SecurityIsolationStatus",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "coop",
              "optional": true,
              "$ref": "CrossOriginOpenerPolicyStatus"
            },
            {
              "name": "coep",
              "optional": true,
              "$ref": "CrossOriginEmbedderPolicyStatus"
            },
            {
              "name": "csp",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ContentSecurityPolicyStatus"
              }
            }
          ]
        },
        {
          "id": "ReportStatus",
          "description": "Reporting API 报告的状态。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Queued",
            "Pending",
            "MarkedForRemoval",
            "Success"
          ]
        },
        {
          "id": "ReportId",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "ReportingApiReport",
          "description": "表示由 Reporting API 生成的报告的对象。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "id",
              "$ref": "ReportId"
            },
            {
              "name": "initiatorUrl",
              "description": "触发报告的文档的 URL。",
              "type": "string"
            },
            {
              "name": "destination",
              "description": "应用于传送报告的端点组的名称。",
              "type": "string"
            },
            {
              "name": "type",
              "description": "报告的类型（指定报告正文中包含的数据集）。",
              "type": "string"
            },
            {
              "name": "timestamp",
              "description": "报告生成时。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "depth",
              "description": "相关请求的上传深度有多少。",
              "type": "integer"
            },
            {
              "name": "completedAttempts",
              "description": "迄今为止进行的传送尝试次数，不包括主动尝试。",
              "type": "integer"
            },
            {
              "name": "body",
              "type": "object"
            },
            {
              "name": "status",
              "$ref": "ReportStatus"
            }
          ]
        },
        {
          "id": "ReportingApiEndpoint",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "可以将报告传送到的端点的 URL。",
              "type": "string"
            },
            {
              "name": "groupName",
              "description": "端点组的名称。",
              "type": "string"
            }
          ]
        },
        {
          "id": "LoadNetworkResourcePageResult",
          "description": "提供网络资源负载结果的对象。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "success",
              "type": "boolean"
            },
            {
              "name": "netError",
              "description": "用于错误报告的可选值。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "netErrorName",
              "optional": true,
              "type": "string"
            },
            {
              "name": "httpStatusCode",
              "optional": true,
              "type": "number"
            },
            {
              "name": "stream",
              "description": "如果成功，以下两个字段之一将保存结果。",
              "optional": true,
              "$ref": "IO.StreamHandle"
            },
            {
              "name": "headers",
              "description": "响应标头。",
              "optional": true,
              "$ref": "Network.Headers"
            }
          ]
        },
        {
          "id": "LoadNetworkResourceOptions",
          "description": "稍后可能会扩展以更好地支持 CORS 的选项对象，\nCORB 和流媒体。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "disableCache",
              "type": "boolean"
            },
            {
              "name": "includeCredentials",
              "type": "boolean"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getIPProtectionProxyStatus",
          "description": "返回表示请求的 IP 代理是否可用的枚举\n或它不活跃的原因。",
          "experimental": true,
          "returns": [
            {
              "name": "status",
              "description": "是否可以使用IP代理",
              "$ref": "IpProxyStatus"
            }
          ]
        },
        {
          "name": "setIPProtectionProxyBypassEnabled",
          "description": "设置绕过 IP 保护代理布尔值。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "IP代理是否被devtools绕过；默认为 false。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setAcceptedEncodings",
          "description": "设置将接受的内容编码列表。空列表意味着不接受任何编码。",
          "experimental": true,
          "parameters": [
            {
              "name": "encodings",
              "description": "可接受的内容编码列表。",
              "type": "array",
              "items": {
                "$ref": "ContentEncoding"
              }
            }
          ]
        },
        {
          "name": "clearAcceptedEncodingsOverride",
          "description": "清除 setAcceptedEncodings 设置的接受编码",
          "experimental": true
        },
        {
          "name": "canClearBrowserCache",
          "description": "告知是否支持清除浏览器缓存。",
          "deprecated": true,
          "returns": [
            {
              "name": "result",
              "description": "如果可以清除浏览器缓存，则为 true。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "canClearBrowserCookies",
          "description": "告知是否支持清除浏览器cookie。",
          "deprecated": true,
          "returns": [
            {
              "name": "result",
              "description": "如果可以清除浏览器 cookie，则为 true。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "canEmulateNetworkConditions",
          "description": "告知是否支持网络条件模拟。",
          "deprecated": true,
          "returns": [
            {
              "name": "result",
              "description": "如果支持网络条件仿真，则为 true。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "clearBrowserCache",
          "description": "清除浏览器缓存。"
        },
        {
          "name": "clearBrowserCookies",
          "description": "清除浏览器cookie。"
        },
        {
          "name": "continueInterceptedRequest",
          "description": "对 Network.requestIntercepted 的响应，它可以修改请求以继续任何操作\n修改，或阻止它，或使用提供的响应字节完成它。如果有网络\n发生 fetch 的结果是遇到重定向和附加 Network.requestIntercepted\n事件将使用相同的 InterceptionId 发送。\n已弃用，请改用 Fetch.continueRequest、Fetch.fulfillRequest 和 Fetch.failRequest。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "interceptionId",
              "$ref": "InterceptionId"
            },
            {
              "name": "errorReason",
              "description": "如果设置，这会导致请求因给定原因而失败。为请求传递“Aborted”\n标记为“isNavigationRequest”也会取消导航。不得在响应中设置\n一个 authChallenge。",
              "optional": true,
              "$ref": "ErrorReason"
            },
            {
              "name": "rawResponse",
              "description": "如果设置，则使用提供的 base64 编码的原始响应来完成请求，包括\nHTTP 状态行和标头等...不得为响应 authChallenge 而设置。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "url",
              "description": "如果设置，请求 URL 将以页面无法观察到的方式进行修改。一定不能是\n为响应 authChallenge 而设置。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "method",
              "description": "如果设置，则允许覆盖请求方法。不得为响应而设置\nauth挑战。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "postData",
              "description": "如果设置，则允许设置 postData。不得为响应 authChallenge 而设置。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "headers",
              "description": "如果设置，则允许更改请求标头。不得为响应而设置\nauth挑战。",
              "optional": true,
              "$ref": "Headers"
            },
            {
              "name": "authChallengeResponse",
              "description": "对请求的响应被 authChallenge 拦截。不得进行其他设置。",
              "optional": true,
              "$ref": "AuthChallengeResponse"
            }
          ]
        },
        {
          "name": "deleteCookies",
          "description": "删除具有匹配名称和 url 或域/路径/分区密钥对的浏览器 cookie。",
          "parameters": [
            {
              "name": "name",
              "description": "要删除的 cookie 的名称。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "如果指定，则删除域和路径匹配的具有给定名称的所有 cookie\n提供的网址。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "domain",
              "description": "如果指定，则仅删除具有确切域的 cookie。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "如果指定，则仅删除具有确切路径的 cookie。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "partitionKey",
              "description": "如果指定，则仅删除具有给定名称和分区键的 cookie，其中\n所有分区键属性都与 cookie 分区键属性匹配。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePartitionKey"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用网络跟踪，防止网络事件发送到客户端。"
        },
        {
          "name": "emulateNetworkConditions",
          "description": "激活网络条件仿真。此命令已弃用，取而代之的是 emulateNetworkConditionsByRule\n和 overrideNetworkState 命令，可以一起使用以达到相同的效果。",
          "deprecated": true,
          "parameters": [
            {
              "name": "offline",
              "description": "True 可以模拟互联网断开连接。",
              "type": "boolean"
            },
            {
              "name": "latency",
              "description": "从发送请求到收到响应标头的最短延迟（毫秒）。",
              "type": "number"
            },
            {
              "name": "downloadThroughput",
              "description": "最大聚合下载吞吐量（字节/秒）。 -1 禁用下载限制。",
              "type": "number"
            },
            {
              "name": "uploadThroughput",
              "description": "最大聚合上传吞吐量（字节/秒）。  -1 禁用上传限制。",
              "type": "number"
            },
            {
              "name": "connectionType",
              "description": "连接类型（如果已知）。",
              "optional": true,
              "$ref": "ConnectionType"
            },
            {
              "name": "packetLoss",
              "description": "WebRTC 数据包丢失（百分比，0-100）。 0 禁用丢包模拟，100 丢弃所有数据包。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "packetQueueLength",
              "description": "WebRTC数据包队列长度（数据包）。 0 消除任何队列长度限制。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "packetReordering",
              "description": "WebRTC 数据包重新排序功能。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "emulateNetworkConditionsByRule",
          "description": "使用 URL 匹配模式激活单个请求的网络条件模拟。与已弃用的不同\nNetwork.emulateNetworkConditions 此方法不会影响“navigator”状态。使用 Network.overrideNetworkState 来\n显式修改“navigator”行为。",
          "experimental": true,
          "parameters": [
            {
              "name": "offline",
              "description": "True 可以模拟互联网断开连接。",
              "type": "boolean"
            },
            {
              "name": "matchedNetworkConditions",
              "description": "配置匹配请求的条件。如果多个条目与一个请求匹配，则第一个条目获胜。  全球\n可以通过将条件的 urlPattern 留空来配置条件。这些全球条件是\n还应用于 p2p 连接的节流。",
              "type": "array",
              "items": {
                "$ref": "NetworkConditions"
              }
            }
          ],
          "returns": [
            {
              "name": "ruleIds",
              "description": "matchedNetworkConditions 中每个条目的 ID。该 ID 将包含在 requestWillBeSentExtraInfo 中\n受规则影响的请求。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "overrideNetworkState",
          "description": "覆盖 navigator.onLine 和 navigator.connection 的状态。",
          "experimental": true,
          "parameters": [
            {
              "name": "offline",
              "description": "True 可以模拟互联网断开连接。",
              "type": "boolean"
            },
            {
              "name": "latency",
              "description": "从发送请求到收到响应标头的最短延迟（毫秒）。",
              "type": "number"
            },
            {
              "name": "downloadThroughput",
              "description": "最大聚合下载吞吐量（字节/秒）。 -1 禁用下载限制。",
              "type": "number"
            },
            {
              "name": "uploadThroughput",
              "description": "最大聚合上传吞吐量（字节/秒）。  -1 禁用上传限制。",
              "type": "number"
            },
            {
              "name": "connectionType",
              "description": "连接类型（如果已知）。",
              "optional": true,
              "$ref": "ConnectionType"
            }
          ]
        },
        {
          "name": "enable",
          "description": "启用网络跟踪，网络事件现在将传递到客户端。",
          "parameters": [
            {
              "name": "maxTotalBufferSize",
              "description": "保留网络负载（XHR 等）时使用的缓冲区大小（以字节为单位）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "maxResourceBufferSize",
              "description": "保留网络有效负载（XHR 等）时使用的每个资源缓冲区大小（以字节为单位）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "maxPostDataSize",
              "description": "requestWillBeSent 通知中包含的最长帖子正文大小（以字节为单位）",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "reportDirectSocketTraffic",
              "description": "是否应报告 DirectSocket 块发送/接收事件。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "enableDurableMessages",
              "description": "启用在渲染器外部存储响应主体，以便它们能够生存\n跨进程导航。需要设置 maxTotalBufferSize。\n目前默认为 false。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getAllCookies",
          "description": "返回所有浏览器 cookie。根据后端支持，会返回详细的cookie\n“cookies”字段中的信息。\n已弃用。请改用 Storage.getCookies。",
          "deprecated": true,
          "returns": [
            {
              "name": "cookies",
              "description": "cookie 对象数组。",
              "type": "array",
              "items": {
                "$ref": "Cookie"
              }
            }
          ]
        },
        {
          "name": "getCertificate",
          "description": "返回 DER 编码的证书。",
          "experimental": true,
          "parameters": [
            {
              "name": "origin",
              "description": "获取证书的原产地。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "tableNames",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "getCookies",
          "description": "返回当前 URL 的所有浏览器 cookie。根据后端支持，会返回\n“cookies”字段中的详细 cookie 信息。",
          "parameters": [
            {
              "name": "urls",
              "description": "将获取适用 cookie 的 URL 列表。\n如果未指定，则假定将其设置为包含的列表\n页面及其所有子框架的 URL。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "returns": [
            {
              "name": "cookies",
              "description": "cookie 对象数组。",
              "type": "array",
              "items": {
                "$ref": "Cookie"
              }
            }
          ]
        },
        {
          "name": "getResponseBody",
          "description": "返回为给定请求提供的内容。",
          "parameters": [
            {
              "name": "requestId",
              "description": "要获取内容的网络请求的标识符。",
              "$ref": "RequestId"
            }
          ],
          "returns": [
            {
              "name": "body",
              "description": "响应体。",
              "type": "string"
            },
            {
              "name": "base64Encoded",
              "description": "正确，如果内容以 base64 形式发送。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getRequestPostData",
          "description": "返回随请求发送的发布数据。当请求未发送任何数据时返回错误。",
          "parameters": [
            {
              "name": "requestId",
              "description": "要获取内容的网络请求的标识符。",
              "$ref": "RequestId"
            }
          ],
          "returns": [
            {
              "name": "postData",
              "description": "请求正文字符串，省略多部分请求中的文件",
              "type": "string"
            }
          ]
        },
        {
          "name": "getResponseBodyForInterception",
          "description": "返回为给定的当前拦截的请求提供的内容。",
          "experimental": true,
          "parameters": [
            {
              "name": "interceptionId",
              "description": "要获取正文的拦截请求的标识符。",
              "$ref": "InterceptionId"
            }
          ],
          "returns": [
            {
              "name": "body",
              "description": "响应体。",
              "type": "string"
            },
            {
              "name": "base64Encoded",
              "description": "正确，如果内容以 base64 形式发送。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "takeResponseBodyForInterceptionAsStream",
          "description": "返回代表响应正文的流的句柄。请注意，执行此命令后，\n被拦截的请求不能按原样继续——你要么需要取消它，要么提供\n响应主体。该流仅支持顺序读取，如果位置不正确，IO.read将会失败\n已指定。",
          "experimental": true,
          "parameters": [
            {
              "name": "interceptionId",
              "$ref": "InterceptionId"
            }
          ],
          "returns": [
            {
              "name": "stream",
              "$ref": "IO.StreamHandle"
            }
          ]
        },
        {
          "name": "replayXHR",
          "description": "此方法发送一个与原始请求相同的新 XMLHttpRequest。以下\n参数应该相同：方法、url、异步、请求正文、额外标头、withCredentials\n属性、用户、密码。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "要重放的 XHR 的标识符。",
              "$ref": "RequestId"
            }
          ]
        },
        {
          "name": "searchInResponseBody",
          "description": "在响应内容中搜索给定字符串。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "对搜索的网络响应的标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "query",
              "description": "要搜索的字符串。",
              "type": "string"
            },
            {
              "name": "caseSensitive",
              "description": "如果为 true，则搜索区分大小写。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isRegex",
              "description": "如果为 true，则将字符串参数视为正则表达式。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "result",
              "description": "搜索匹配列表。",
              "type": "array",
              "items": {
                "$ref": "Debugger.SearchMatch"
              }
            }
          ]
        },
        {
          "name": "setBlockedURLs",
          "description": "阻止加载 URL。",
          "experimental": true,
          "parameters": [
            {
              "name": "urlPatterns",
              "description": "按照给定顺序进行匹配的模式。这些图案\n也优先于“urls”中定义的任何通配符模式。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "BlockPattern"
              }
            },
            {
              "name": "urls",
              "description": "要阻止的 URL 模式。允许使用通配符 ('*')。",
              "deprecated": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "setBypassServiceWorker",
          "description": "切换忽略每个请求的 Service Worker。",
          "parameters": [
            {
              "name": "bypass",
              "description": "绕过 Service Worker 并从网络加载。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setCacheDisabled",
          "description": "切换忽略每个请求的缓存。如果为“true”，则不会使用缓存。",
          "parameters": [
            {
              "name": "cacheDisabled",
              "description": "缓存禁用状态。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setCookie",
          "description": "使用给定的 cookie 数据设置一个 cookie；如果存在相同的 cookie，可能会覆盖它们。",
          "parameters": [
            {
              "name": "name",
              "description": "Cookie 名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "Cookie 值。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "与设置 cookie 相关联的请求 URI。此值可能影响创建 cookie 的默认域、路径、源端口和源方案。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "domain",
              "description": "饼干域。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "path",
              "description": "Cookie路径。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "secure",
              "description": "如果cookie是安全的，则为true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "httpOnly",
              "description": "如果cookie仅限http，则为true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "sameSite",
              "description": "Cookie SameSite 类型。",
              "optional": true,
              "$ref": "CookieSameSite"
            },
            {
              "name": "expires",
              "description": "Cookie过期日期，如果未设置则为会话cookie。",
              "optional": true,
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "priority",
              "description": "Cookie 优先级类型。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePriority"
            },
            {
              "name": "sameParty",
              "description": "如果 cookie 是 SameParty，则为 true。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "sourceScheme",
              "description": "Cookie 源方案类型。",
              "experimental": true,
              "optional": true,
              "$ref": "CookieSourceScheme"
            },
            {
              "name": "sourcePort",
              "description": "Cookie 允许源端口。有效值为 {-1, [1, 65535]}，-1 表示未指定端口。未指定端口值协议客户端模拟端口的传统 cookie 作用域。这是一个临时功能，以后会被移除。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "partitionKey",
              "description": "Cookie 分区键。如果未设置，则 cookie 将被设置为未分区。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePartitionKey"
            }
          ],
          "returns": [
            {
              "name": "success",
              "description": "始终为 true。如果发生错误，响应将指示协议错误。",
              "deprecated": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setCookies",
          "description": "设置给定的 cookie。",
          "parameters": [
            {
              "name": "cookies",
              "description": "待设置的 Cookie。",
              "type": "array",
              "items": {
                "$ref": "CookieParam"
              }
            }
          ]
        },
        {
          "name": "setExtraHTTPHeaders",
          "description": "指定是否始终随此页面的请求发送额外的 HTTP 标头。",
          "parameters": [
            {
              "name": "headers",
              "description": "带有额外 HTTP 标头的映射。",
              "$ref": "Headers"
            }
          ]
        },
        {
          "name": "setAttachDebugStack",
          "description": "指定是否在请求中附加页面脚本堆栈id",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否附加页面脚本堆栈以进行调试。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setRequestInterception",
          "description": "设置要拦截的与提供的模式和可选资源类型匹配的请求。\n已弃用，请改用 Fetch.enable。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "patterns",
              "description": "匹配任何这些模式的请求将被转发并等待相应的\n继续InterceptedRequest 调用。",
              "type": "array",
              "items": {
                "$ref": "RequestPattern"
              }
            }
          ]
        },
        {
          "name": "setUserAgentOverride",
          "description": "允许使用给定的字符串覆盖用户代理。",
          "redirect": "Emulation",
          "parameters": [
            {
              "name": "userAgent",
              "description": "要使用的用户代理。",
              "type": "string"
            },
            {
              "name": "acceptLanguage",
              "description": "要模拟的浏览器语言。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "platform",
              "description": "平台 navigator.platform 应该返回。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "userAgentMetadata",
              "description": "在 Sec-CH-UA-* 标头中发送并在 navigator.userAgentData 中返回",
              "experimental": true,
              "optional": true,
              "$ref": "Emulation.UserAgentMetadata"
            }
          ]
        },
        {
          "name": "streamResourceContent",
          "description": "启用给定 requestId 的响应流。\n如果启用，dataReceived 事件包含流式传输期间接收的数据。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "流请求的标识符。",
              "$ref": "RequestId"
            }
          ],
          "returns": [
            {
              "name": "bufferedData",
              "description": "启用流式传输之前已缓冲的数据。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            }
          ]
        },
        {
          "name": "getSecurityIsolationStatus",
          "description": "返回有关 COEP/COOP 隔离状态的信息。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "如果未提供frameId，则提供目标的状态。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "status",
              "$ref": "SecurityIsolationStatus"
            }
          ]
        },
        {
          "name": "enableReportingApi",
          "description": "启用对报告 API 的跟踪，报告 API 生成的事件现在将传送到客户端。\n为所有现有报告启用触发器“reportingApiReportAdded”。",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "description": "是否启用或禁用报告 API 的事件",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "loadNetworkResource",
          "description": "获取资源并返回内容。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "要获取其资源的帧 ID。对于框架目标是强制性的，并且\n对于工人目标应省略。",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "url",
              "description": "要获取其内容的资源的 URL。",
              "type": "string"
            },
            {
              "name": "options",
              "description": "请求的选项。",
              "$ref": "LoadNetworkResourceOptions"
            }
          ],
          "returns": [
            {
              "name": "resource",
              "$ref": "LoadNetworkResourcePageResult"
            }
          ]
        },
        {
          "name": "setCookieControls",
          "description": "设置第三方 cookie 访问控制\n在观察到新的 cookie 行为之前需要重新加载页面",
          "experimental": true,
          "parameters": [
            {
              "name": "enableThirdPartyCookieRestriction",
              "description": "是否启用 3 件限制。",
              "type": "boolean"
            },
            {
              "name": "disableThirdPartyCookieMetadata",
              "description": "是否启用3pc宽限期例外；默认为 false。",
              "type": "boolean"
            },
            {
              "name": "disableThirdPartyCookieHeuristics",
              "description": "是否应启用 3pc 启发式例外；默认为 false。",
              "type": "boolean"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "dataReceived",
          "description": "当通过网络接收数据块时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "dataLength",
              "description": "数据块长度。",
              "type": "integer"
            },
            {
              "name": "encodedDataLength",
              "description": "收到的实际字节（可能小于压缩编码的数据长度）。",
              "type": "integer"
            },
            {
              "name": "data",
              "description": "收到的数据。 （通过 JSON 传递时编码为 base64 字符串）",
              "experimental": true,
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "eventSourceMessageReceived",
          "description": "收到 EventSource 消息时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "eventName",
              "description": "消息类型。",
              "type": "string"
            },
            {
              "name": "eventId",
              "description": "消息标识符。",
              "type": "string"
            },
            {
              "name": "data",
              "description": "留言内容。",
              "type": "string"
            }
          ]
        },
        {
          "name": "loadingFailed",
          "description": "当 HTTP 请求加载失败时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "type",
              "description": "资源类型。",
              "$ref": "ResourceType"
            },
            {
              "name": "errorText",
              "description": "错误信息。网络错误列表：https://cs.chromium.org/chromium/src/net/base/net_error_list.h",
              "type": "string"
            },
            {
              "name": "canceled",
              "description": "如果加载被取消则为 true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "blockedReason",
              "description": "加载被阻止的原因（如果有）。",
              "optional": true,
              "$ref": "BlockedReason"
            },
            {
              "name": "corsErrorStatus",
              "description": "加载被 CORS 阻止的原因（如果有）。",
              "optional": true,
              "$ref": "CorsErrorStatus"
            }
          ]
        },
        {
          "name": "loadingFinished",
          "description": "当 HTTP 请求完成加载时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "encodedDataLength",
              "description": "此请求收到的总字节数。",
              "type": "number"
            }
          ]
        },
        {
          "name": "requestIntercepted",
          "description": "拦截的 HTTP 请求的详细信息，必须允许、阻止、修改或\n嘲笑。\n已弃用，请改用 Fetch.requestPaused。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "interceptionId",
              "description": "页面发出的每个请求都会有一个唯一的 ID，但是如果遇到任何重定向\n在处理该提取时，将使用与原始提取相同的 id 报告它们。\n同样，如果需要 HTTP 身份验证，则将使用相同的获取 ID。",
              "$ref": "InterceptionId"
            },
            {
              "name": "request",
              "$ref": "Request"
            },
            {
              "name": "frameId",
              "description": "发起请求的帧的 id。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "resourceType",
              "description": "将如何使用所请求的资源。",
              "$ref": "ResourceType"
            },
            {
              "name": "isNavigationRequest",
              "description": "这是否是一个导航请求，可以完全中止导航。",
              "type": "boolean"
            },
            {
              "name": "isDownload",
              "description": "设置请求是否是会导致下载的导航。\n仅在从服务器收到响应后才存在（即 HeadersReceived 阶段）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "redirectUrl",
              "description": "重定向位置，仅在重定向被拦截时发送。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "authChallenge",
              "description": "遇到的授权挑战的详细信息。如果这样设置的话\ncontinueInterceptedRequest 必须包含 authChallengeResponse。",
              "optional": true,
              "$ref": "AuthChallenge"
            },
            {
              "name": "responseErrorReason",
              "description": "如果在响应阶段拦截或拦截时发生重定向，则响应错误\n请求。",
              "optional": true,
              "$ref": "ErrorReason"
            },
            {
              "name": "responseStatusCode",
              "description": "如果在响应阶段拦截或拦截时发生重定向，则响应代码\n发生请求或身份验证重试。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "responseHeaders",
              "description": "如果在响应阶段拦截或者发生重定向，则响应标头\n发生拦截请求或身份验证重试。",
              "optional": true,
              "$ref": "Headers"
            },
            {
              "name": "requestId",
              "description": "如果被拦截的请求触发了相应的 requestWillBeSent 事件，那么\n此 requestId 将与 requestWillBeSent 事件中存在的 requestId 相同。",
              "optional": true,
              "$ref": "RequestId"
            }
          ]
        },
        {
          "name": "requestServedFromCache",
          "description": "如果请求最终从缓存加载，则触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            }
          ]
        },
        {
          "name": "requestWillBeSent",
          "description": "当页面即将发送 HTTP 请求时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "loaderId",
              "description": "装载机标识符。如果从工作人员获取请求，则为空字符串。",
              "$ref": "LoaderId"
            },
            {
              "name": "documentURL",
              "description": "加载此请求的文档的 URL。",
              "type": "string"
            },
            {
              "name": "request",
              "description": "请求数据。",
              "$ref": "Request"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "wallTime",
              "description": "时间戳。",
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "initiator",
              "description": "请求发起者。",
              "$ref": "Initiator"
            },
            {
              "name": "redirectHasExtraInfo",
              "description": "在填充了redirectResponse的情况下，该标志指示是否\nrequestWillBeSentExtraInfo 和 responseReceivedExtraInfo 事件将被发出\n对于刚刚重定向的请求。",
              "experimental": true,
              "type": "boolean"
            },
            {
              "name": "redirectResponse",
              "description": "重定向响应数据。",
              "optional": true,
              "$ref": "Response"
            },
            {
              "name": "type",
              "description": "该资源的类型。",
              "optional": true,
              "$ref": "ResourceType"
            },
            {
              "name": "frameId",
              "description": "帧标识符。",
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "hasUserGesture",
              "description": "请求是否由用户手势发起。默认为 false。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "resourceChangedPriority",
          "description": "资源加载优先级更改时触发",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "newPriority",
              "description": "新的优先事项",
              "$ref": "ResourcePriority"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "signedExchangeReceived",
          "description": "通过网络收到签名交换时触发",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "info",
              "description": "有关已签名交换响应的信息。",
              "$ref": "SignedExchangeInfo"
            }
          ]
        },
        {
          "name": "responseReceived",
          "description": "当 HTTP 响应可用时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "loaderId",
              "description": "装载机标识符。如果从工作人员获取请求，则为空字符串。",
              "$ref": "LoaderId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "type",
              "description": "资源类型。",
              "$ref": "ResourceType"
            },
            {
              "name": "response",
              "description": "响应数据。",
              "$ref": "Response"
            },
            {
              "name": "hasExtraInfo",
              "description": "指示是否将 requestWillBeSentExtraInfo 和 responseReceivedExtraInfo 事件\n或为此请求发出。",
              "experimental": true,
              "type": "boolean"
            },
            {
              "name": "frameId",
              "description": "帧标识符。",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ]
        },
        {
          "name": "webSocketClosed",
          "description": "WebSocket 关闭时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "webSocketCreated",
          "description": "创建 WebSocket 时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "url",
              "description": "WebSocket 请求 URL。",
              "type": "string"
            },
            {
              "name": "initiator",
              "description": "请求发起者。",
              "optional": true,
              "$ref": "Initiator"
            }
          ]
        },
        {
          "name": "webSocketFrameError",
          "description": "当 WebSocket 消息发生错误时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "errorMessage",
              "description": "WebSocket 错误消息。",
              "type": "string"
            }
          ]
        },
        {
          "name": "webSocketFrameReceived",
          "description": "收到 WebSocket 消息时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "response",
              "description": "WebSocket 响应数据。",
              "$ref": "WebSocketFrame"
            }
          ]
        },
        {
          "name": "webSocketFrameSent",
          "description": "发送 WebSocket 消息时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "response",
              "description": "WebSocket 响应数据。",
              "$ref": "WebSocketFrame"
            }
          ]
        },
        {
          "name": "webSocketHandshakeResponseReceived",
          "description": "当 WebSocket 握手响应可用时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "response",
              "description": "WebSocket 响应数据。",
              "$ref": "WebSocketResponse"
            }
          ]
        },
        {
          "name": "webSocketWillSendHandshakeRequest",
          "description": "当 WebSocket 即将发起握手时触发。",
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "wallTime",
              "description": "UTC 时间戳。",
              "$ref": "TimeSinceEpoch"
            },
            {
              "name": "request",
              "description": "WebSocket 请求数据。",
              "$ref": "WebSocketRequest"
            }
          ]
        },
        {
          "name": "webTransportCreated",
          "description": "创建 WebTransport 时触发。",
          "parameters": [
            {
              "name": "transportId",
              "description": "Web 传输标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "url",
              "description": "WebTransport 请求 URL。",
              "type": "string"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            },
            {
              "name": "initiator",
              "description": "请求发起者。",
              "optional": true,
              "$ref": "Initiator"
            }
          ]
        },
        {
          "name": "webTransportConnectionEstablished",
          "description": "当 WebTransport 握手完成时触发。",
          "parameters": [
            {
              "name": "transportId",
              "description": "Web 传输标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "webTransportClosed",
          "description": "当 WebTransport 被处置时触发。",
          "parameters": [
            {
              "name": "transportId",
              "description": "Web 传输标识符。",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "description": "时间戳。",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directTCPSocketCreated",
          "description": "在 direct_socket.TCPSocket 创建时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "remoteAddr",
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "无符号整数 16。",
              "type": "integer"
            },
            {
              "name": "options",
              "$ref": "DirectTCPSocketOptions"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            },
            {
              "name": "initiator",
              "optional": true,
              "$ref": "Initiator"
            }
          ]
        },
        {
          "name": "directTCPSocketOpened",
          "description": "当 direct_socket.TCPSocket 连接打开时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "remoteAddr",
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "预期为无符号整数。",
              "type": "integer"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            },
            {
              "name": "localAddr",
              "optional": true,
              "type": "string"
            },
            {
              "name": "localPort",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "directTCPSocketAborted",
          "description": "当 direct_socket.TCPSocket 中止时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "errorMessage",
              "type": "string"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directTCPSocketClosed",
          "description": "当 direct_socket.TCPSocket 关闭时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directTCPSocketChunkSent",
          "description": "当数据发送到 tcp 直接套接字流时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "data",
              "type": "string"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directTCPSocketChunkReceived",
          "description": "从 tcp 直接套接字流接收数据时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "data",
              "type": "string"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directUDPSocketCreated",
          "description": "在 direct_socket.UDPSocket 创建时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "options",
              "$ref": "DirectUDPSocketOptions"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            },
            {
              "name": "initiator",
              "optional": true,
              "$ref": "Initiator"
            }
          ]
        },
        {
          "name": "directUDPSocketOpened",
          "description": "当 direct_socket.UDPSocket 连接打开时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "localAddr",
              "type": "string"
            },
            {
              "name": "localPort",
              "description": "预期为无符号整数。",
              "type": "integer"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            },
            {
              "name": "remoteAddr",
              "optional": true,
              "type": "string"
            },
            {
              "name": "remotePort",
              "description": "预期为无符号整数。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "directUDPSocketAborted",
          "description": "当 direct_socket.UDPSocket 中止时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "errorMessage",
              "type": "string"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directUDPSocketClosed",
          "description": "当 direct_socket.UDPSocket 关闭时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directUDPSocketChunkSent",
          "description": "当消息发送到 udp 直接套接字流时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "message",
              "$ref": "DirectUDPMessage"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "directUDPSocketChunkReceived",
          "description": "从 udp 直接套接字流接收消息时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "RequestId"
            },
            {
              "name": "message",
              "$ref": "DirectUDPMessage"
            },
            {
              "name": "timestamp",
              "$ref": "MonotonicTime"
            }
          ]
        },
        {
          "name": "requestWillBeSentExtraInfo",
          "description": "当有关 requestWillBeSent 事件的附加信息可从\n网络堆栈。并非每个 requestWillBeSent 事件都会有一个额外的\nrequestWillBeSentExtraInfo 为其触发，并且不能保证 requestWillBeSent 是否有效\n或 requestWillBeSentExtraInfo 将首先针对同一请求被触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。用于将此信息与现有 requestWillBeSent 事件相匹配。",
              "$ref": "RequestId"
            },
            {
              "name": "associatedCookies",
              "description": "可能与请求的 URL 关联的 cookie 列表。这包括发送的两个cookie\n请求和未发送的请求；后者的区别在于设置了blockedReasons 字段。",
              "type": "array",
              "items": {
                "$ref": "AssociatedCookie"
              }
            },
            {
              "name": "headers",
              "description": "原始请求标头，因为它们将通过线路发送。",
              "$ref": "Headers"
            },
            {
              "name": "connectTiming",
              "description": "请求的连接计时信息。",
              "experimental": true,
              "$ref": "ConnectTiming"
            },
            {
              "name": "clientSecurityState",
              "description": "为请求设置的客户端安全状态。",
              "optional": true,
              "$ref": "ClientSecurityState"
            },
            {
              "name": "siteHasCookieInOtherPartition",
              "description": "站点是否将分区 cookie 存储在与当前分区不同的分区中。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "appliedNetworkConditionsId",
              "description": "如果此请求受到通过配置的网络条件的影响，则网络条件 ID\n按规则模拟网络条件。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "responseReceivedExtraInfo",
          "description": "当可从网络获取有关 responseReceived 事件的附加信息时触发\n堆栈。并非每个responseReceived事件都会有一个额外的responseReceivedExtraInfo\n它，并且可以在responseReceived之前或之后触发responseReceivedExtraInfo。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。用于将此信息与另一个responseReceived 事件相匹配。",
              "$ref": "RequestId"
            },
            {
              "name": "blockedCookies",
              "description": "未从响应中存储的 cookie 列表以及相应的信息\n阻塞的原因。这里的cookie可能由于语法错误而无效，这\n由无效的 cookie 行字符串而不是正确的 cookie 表示。",
              "type": "array",
              "items": {
                "$ref": "BlockedSetCookieWithReason"
              }
            },
            {
              "name": "headers",
              "description": "通过网络接收的原始响应标头。\n响应中的重复标头表示为单个键及其值\n使用“\\n”作为分隔符连接。\n另请参阅包含 HTTP/1.* 逐字文本的“headersText”。",
              "$ref": "Headers"
            },
            {
              "name": "resourceIPAddressSpace",
              "description": "资源的 IP 地址空间。地址空间只有在传输完成后才能确定\n建立了连接，因此我们无法在“requestWillBeSentExtraInfo”中发送它。",
              "$ref": "IPAddressSpace"
            },
            {
              "name": "statusCode",
              "description": "响应的状态代码。这在请求失败且未收到响应的情况下很有用\n事件被触发，例如 CORS 错误就是这种情况。这也是正确的状态码\n对于缓存的请求，responseReceived 中的状态是 200，这将是 304。",
              "type": "integer"
            },
            {
              "name": "headersText",
              "description": "通过网络接收到的原始响应标头文本。原始文本可能并不总是\n可用，例如在 HTTP/2 或 QUIC 的情况下。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cookiePartitionKey",
              "description": "将用于存储此响应中设置的分区 cookie 的 cookie 分区键。\n仅在启用分区 cookie 时发送。",
              "experimental": true,
              "optional": true,
              "$ref": "CookiePartitionKey"
            },
            {
              "name": "cookiePartitionKeyOpaque",
              "description": "如果启用了分区 cookie，则为 true，但分区键不可序列化为字符串。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "exemptedCookies",
              "description": "本应被 3PCD 阻止但已豁免并存储的 cookie 列表\n响应并附有相应的原因。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ExemptedSetCookieWithReason"
              }
            }
          ]
        },
        {
          "name": "responseReceivedEarlyHints",
          "description": "除了公共响应之外，还收到 103 个 Early Hints 标头时触发。\n并非每个responseReceived 事件都会触发responseReceivedEarlyHints。\n每个responseReceived 事件只能触发一个responseReceivedEarlyHints。",
          "experimental": true,
          "parameters": [
            {
              "name": "requestId",
              "description": "请求标识符。用于将此信息与另一个responseReceived 事件相匹配。",
              "$ref": "RequestId"
            },
            {
              "name": "headers",
              "description": "通过网络接收的原始响应标头。\n响应中的重复标头表示为单个键及其值\n使用“\\n”作为分隔符连接。\n另请参阅包含 HTTP/1.* 逐字文本的“headersText”。",
              "$ref": "Headers"
            }
          ]
        },
        {
          "name": "trustTokenOperationDone",
          "description": "每个信任令牌操作仅触发一次。取决于\n操作的类型以及操作是否成功或\n失败，在发送相应的请求之前触发该事件\n或收到回复后。",
          "experimental": true,
          "parameters": [
            {
              "name": "status",
              "description": "操作的详细成功或错误状态。\n'AlreadyExists' 也表示操作成功，结果\n该操作已存在，因此该操作被中止\n先发制人（例如缓存命中）。",
              "type": "string",
              "enum": [
                "Ok",
                "InvalidArgument",
                "MissingIssuerKeys",
                "FailedPrecondition",
                "ResourceExhausted",
                "AlreadyExists",
                "ResourceLimited",
                "Unauthorized",
                "BadResponse",
                "InternalError",
                "UnknownError",
                "FulfilledLocally",
                "SiteIssuerLimit"
              ]
            },
            {
              "name": "type",
              "$ref": "TrustTokenOperationType"
            },
            {
              "name": "requestId",
              "$ref": "RequestId"
            },
            {
              "name": "topLevelOrigin",
              "description": "顶级起源。尝试操作的上下文。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "issuerOrigin",
              "description": "进行“发行”或“赎回”操作时发行人的来源。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "issuedTokenCount",
              "description": "成功“发行”操作后获得的信任代币数量。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "policyUpdated",
          "description": "更新安全策略后触发。",
          "experimental": true
        },
        {
          "name": "reportingApiReportAdded",
          "description": "每当添加新报告时发送。\n在所有现有报告的“enableReportingApi”之后。",
          "experimental": true,
          "parameters": [
            {
              "name": "report",
              "$ref": "ReportingApiReport"
            }
          ]
        },
        {
          "name": "reportingApiReportUpdated",
          "experimental": true,
          "parameters": [
            {
              "name": "report",
              "$ref": "ReportingApiReport"
            }
          ]
        },
        {
          "name": "reportingApiEndpointsChangedForOrigin",
          "experimental": true,
          "parameters": [
            {
              "name": "origin",
              "description": "配置端点的文档的来源。",
              "type": "string"
            },
            {
              "name": "endpoints",
              "type": "array",
              "items": {
                "$ref": "ReportingApiEndpoint"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Overlay",
      "description": "该域提供与在检查页面顶部绘图相关的各种功能。",
      "experimental": true,
      "dependencies": [
        "DOM",
        "Page",
        "Runtime"
      ],
      "types": [
        {
          "id": "SourceOrderConfig",
          "description": "用于绘制子元素的源顺序的配置数据。",
          "type": "object",
          "properties": [
            {
              "name": "parentOutlineColor",
              "description": "勾画给定元素轮廓的颜色。",
              "$ref": "DOM.RGBA"
            },
            {
              "name": "childOutlineColor",
              "description": "勾画子元素轮廓的颜色。",
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "GridHighlightConfig",
          "description": "用于突出显示网格元素的配置数据。",
          "type": "object",
          "properties": [
            {
              "name": "showGridExtensionLines",
              "description": "是否应显示从网格单元到标尺的延长线（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showPositiveLineNumbers",
              "description": "显示正行号标签（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showNegativeLineNumbers",
              "description": "显示负行号标签（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showAreaNames",
              "description": "显示区域名称标签（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showLineNames",
              "description": "显示行名称标签（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showTrackSizes",
              "description": "显示轨道大小标签（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "gridBorderColor",
              "description": "网格容器边框突出显示颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "cellBorderColor",
              "description": "单元格边框颜色（默认：透明）。已弃用，请使用 rowLineColor 和 columnLineColor 代替。",
              "deprecated": true,
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "rowLineColor",
              "description": "行线颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "columnLineColor",
              "description": "列线颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "gridBorderDash",
              "description": "网格边框是否为虚线（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "cellBorderDash",
              "description": "单元格边框是否为虚线（默认值： false）。已弃用，请使用 rowLineDash 和 columnLineDash 代替。",
              "deprecated": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "rowLineDash",
              "description": "行线是否为虚线（默认值：false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "columnLineDash",
              "description": "列线是否为虚线（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "rowGapColor",
              "description": "行间隙突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "rowHatchColor",
              "description": "行间隙阴影填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "columnGapColor",
              "description": "列间隙突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "columnHatchColor",
              "description": "列间隙阴影填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "areaBorderColor",
              "description": "命名的网格区域边框颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "gridBackgroundColor",
              "description": "网格容器背景颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "FlexContainerHighlightConfig",
          "description": "用于突出显示 Flex 容器元素的配置数据。",
          "type": "object",
          "properties": [
            {
              "name": "containerBorder",
              "description": "容器边框的样式",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "lineSeparator",
              "description": "行与行之间分隔符的样式",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "itemSeparator",
              "description": "项目之间分隔符的样式",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "mainDistributedSpace",
              "description": "主轴上内容分布空间的样式（justify-content）。",
              "optional": true,
              "$ref": "BoxStyle"
            },
            {
              "name": "crossDistributedSpace",
              "description": "横轴上内容分布空间的样式（align-content）。",
              "optional": true,
              "$ref": "BoxStyle"
            },
            {
              "name": "rowGapSpace",
              "description": "由行间隙（gap/row-gap）引起的空白空间的样式。",
              "optional": true,
              "$ref": "BoxStyle"
            },
            {
              "name": "columnGapSpace",
              "description": "由列间隙（间隙/列间隙）引起的空白空间的样式。",
              "optional": true,
              "$ref": "BoxStyle"
            },
            {
              "name": "crossAlignment",
              "description": "自对齐线的样式（align-items）。",
              "optional": true,
              "$ref": "LineStyle"
            }
          ]
        },
        {
          "id": "FlexItemHighlightConfig",
          "description": "用于突出显示 Flex 项目元素的配置数据。",
          "type": "object",
          "properties": [
            {
              "name": "baseSizeBox",
              "description": "代表商品基本尺寸的盒子样式",
              "optional": true,
              "$ref": "BoxStyle"
            },
            {
              "name": "baseSizeBorder",
              "description": "表示项目基本尺寸的框周围边框的样式",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "flexibilityArrow",
              "description": "表示项目增大或缩小的箭头样式",
              "optional": true,
              "$ref": "LineStyle"
            }
          ]
        },
        {
          "id": "LineStyle",
          "description": "用于绘制线条的样式信息。",
          "type": "object",
          "properties": [
            {
              "name": "color",
              "description": "线条的颜色（默认：透明）",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "pattern",
              "description": "线条图案（默认：实线）",
              "optional": true,
              "type": "string",
              "enum": [
                "dashed",
                "dotted"
              ]
            }
          ]
        },
        {
          "id": "BoxStyle",
          "description": "绘制盒子的样式信息。",
          "type": "object",
          "properties": [
            {
              "name": "fillColor",
              "description": "框的背景颜色（默认：透明）",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "hatchColor",
              "description": "框的阴影颜色（默认：透明）",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "ContrastAlgorithm",
          "type": "string",
          "enum": [
            "aa",
            "aaa",
            "apca"
          ]
        },
        {
          "id": "HighlightConfig",
          "description": "用于突出显示页面元素的配置数据。",
          "type": "object",
          "properties": [
            {
              "name": "showInfo",
              "description": "是否应显示节点信息工具提示（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showStyles",
              "description": "工具提示中的节点样式是否相同（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showRulers",
              "description": "是否应显示标尺（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showAccessibilityInfo",
              "description": "是否应显示 a11y 信息（默认值：true）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "showExtensionLines",
              "description": "是否应显示从节点到标尺的延长线（默认值： false）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "contentColor",
              "description": "内容框突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "paddingColor",
              "description": "填充突出显示填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "borderColor",
              "description": "边框突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "marginColor",
              "description": "边距突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "eventTargetColor",
              "description": "事件目标元素突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "shapeColor",
              "description": "形状外部的填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "shapeMarginColor",
              "description": "形状边距填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "cssGridColor",
              "description": "网格布局颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "colorFormat",
              "description": "用于格式化颜色样式的颜色格式（默认值：十六进制）。",
              "optional": true,
              "$ref": "ColorFormat"
            },
            {
              "name": "gridHighlightConfig",
              "description": "网格布局突出显示配置（默认：全透明）。",
              "optional": true,
              "$ref": "GridHighlightConfig"
            },
            {
              "name": "flexContainerHighlightConfig",
              "description": "Flex 容器突出显示配置（默认：全透明）。",
              "optional": true,
              "$ref": "FlexContainerHighlightConfig"
            },
            {
              "name": "flexItemHighlightConfig",
              "description": "弹性项目突出显示配置（默认：全透明）。",
              "optional": true,
              "$ref": "FlexItemHighlightConfig"
            },
            {
              "name": "contrastAlgorithm",
              "description": "用于对比度的对比度算法（默认值：aa）。",
              "optional": true,
              "$ref": "ContrastAlgorithm"
            },
            {
              "name": "containerQueryContainerHighlightConfig",
              "description": "容器查询容器高亮配置（默认：全透明）。",
              "optional": true,
              "$ref": "ContainerQueryContainerHighlightConfig"
            }
          ]
        },
        {
          "id": "ColorFormat",
          "type": "string",
          "enum": [
            "rgb",
            "hsl",
            "hwb",
            "hex"
          ]
        },
        {
          "id": "GridNodeHighlightConfig",
          "description": "持久网格突出显示的配置",
          "type": "object",
          "properties": [
            {
              "name": "gridHighlightConfig",
              "description": "高光外观的描述符。",
              "$ref": "GridHighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的节点的标识符。",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "id": "FlexNodeHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "flexContainerHighlightConfig",
              "description": "Flex 容器突出显示外观的描述符。",
              "$ref": "FlexContainerHighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的节点的标识符。",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "id": "ScrollSnapContainerHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "snapportBorder",
              "description": "snapport边框的样式（默认：透明）",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "snapAreaBorder",
              "description": "捕捉区域边框的样式（默认：透明）",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "scrollMarginColor",
              "description": "边距突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "scrollPaddingColor",
              "description": "填充突出显示填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "ScrollSnapHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "scrollSnapContainerHighlightConfig",
              "description": "滚动捕捉容器的突出显示外观的描述符。",
              "$ref": "ScrollSnapContainerHighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的节点的标识符。",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "id": "HingeConfig",
          "description": "双屏铰链配置",
          "type": "object",
          "properties": [
            {
              "name": "rect",
              "description": "矩形代表铰链",
              "$ref": "DOM.Rect"
            },
            {
              "name": "contentColor",
              "description": "内容框突出显示填充颜色（默认：深色）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "outlineColor",
              "description": "内容框突出显示轮廓颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "WindowControlsOverlayConfig",
          "description": "窗口控件覆盖的配置",
          "type": "object",
          "properties": [
            {
              "name": "showCSS",
              "description": "模拟窗口控件叠加时是否应显示标题栏 CSS。",
              "type": "boolean"
            },
            {
              "name": "selectedPlatform",
              "description": "显示叠加层的选定平台。",
              "type": "string"
            },
            {
              "name": "themeColor",
              "description": "应用清单中定义的主题颜色。",
              "type": "string"
            }
          ]
        },
        {
          "id": "ContainerQueryHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "containerQueryContainerHighlightConfig",
              "description": "容器查询容器的突出显示外观的描述符。",
              "$ref": "ContainerQueryContainerHighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的容器节点的标识符。",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "id": "ContainerQueryContainerHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "containerBorder",
              "description": "容器边框的样式。",
              "optional": true,
              "$ref": "LineStyle"
            },
            {
              "name": "descendantBorder",
              "description": "子孙边框的样式。",
              "optional": true,
              "$ref": "LineStyle"
            }
          ]
        },
        {
          "id": "IsolatedElementHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "isolationModeHighlightConfig",
              "description": "隔离模式下元素突出显示外观的描述符。",
              "$ref": "IsolationModeHighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的隔离元素的标识符。",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "id": "IsolationModeHighlightConfig",
          "type": "object",
          "properties": [
            {
              "name": "resizerColor",
              "description": "缩放器的填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "resizerHandleColor",
              "description": "缩放手柄的填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "maskColor",
              "description": "覆盖非隔离元素的遮罩的填充颜色（默认值：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "id": "InspectMode",
          "type": "string",
          "enum": [
            "searchForNode",
            "searchForUAShadowDOM",
            "captureAreaScreenshot",
            "none"
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用域通知。"
        },
        {
          "name": "enable",
          "description": "启用域通知。"
        },
        {
          "name": "getHighlightObjectForTest",
          "description": "用于测试。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要获取其突出显示对象的节点的 ID。",
              "$ref": "DOM.NodeId"
            },
            {
              "name": "includeDistance",
              "description": "是否包含距离信息。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includeStyle",
              "description": "是否包含样式信息。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "colorFormat",
              "description": "获取配置的颜色格式（默认值：十六进制）。",
              "optional": true,
              "$ref": "ColorFormat"
            },
            {
              "name": "showAccessibilityInfo",
              "description": "是否显示辅助功能信息（默认值：true）。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "highlight",
              "description": "突出显示节点的数据。",
              "type": "object"
            }
          ]
        },
        {
          "name": "getGridHighlightObjectsForTest",
          "description": "用于持久网格测试。",
          "parameters": [
            {
              "name": "nodeIds",
              "description": "要获取其突出显示对象的节点的 ID。",
              "type": "array",
              "items": {
                "$ref": "DOM.NodeId"
              }
            }
          ],
          "returns": [
            {
              "name": "highlights",
              "description": "网格突出显示所提供的节点 ID 的数据。",
              "type": "object"
            }
          ]
        },
        {
          "name": "getSourceOrderHighlightObjectForTest",
          "description": "用于源订单查看器测试。",
          "parameters": [
            {
              "name": "nodeId",
              "description": "要突出显示的节点的 ID。",
              "$ref": "DOM.NodeId"
            }
          ],
          "returns": [
            {
              "name": "highlight",
              "description": "所提供的节点 ID 的源订单突出显示数据。",
              "type": "object"
            }
          ]
        },
        {
          "name": "hideHighlight",
          "description": "隐藏任何亮点。"
        },
        {
          "name": "highlightFrame",
          "description": "突出显示具有给定 id 的框架的所有者元素。\n已弃用：无法可靠工作，并且由于流程原因无法修复\n分离（所有者节点可能位于不同的进程中）。确定\n客户端中的所有者节点并使用highlightNode。",
          "deprecated": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "Identifier of the frame to highlight.",
              "$ref": "Page.FrameId"
            },
            {
              "name": "contentColor",
              "description": "内容框突出显示填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "contentOutlineColor",
              "description": "内容框突出显示轮廓颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "name": "highlightNode",
          "description": "突出显示具有给定 id 或给定 JavaScript 对象包装器的 DOM 节点。节点 ID 或\n必须指定 objectId。",
          "parameters": [
            {
              "name": "highlightConfig",
              "description": "A descriptor for the highlight appearance.",
              "$ref": "HighlightConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的节点的标识符。",
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "要突出显示的后端节点的标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "要突出显示的节点的 JavaScript 对象 ID。",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            },
            {
              "name": "selector",
              "description": "Selectors to highlight relevant nodes.",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "highlightQuad",
          "description": "突出显示给定的四边形。坐标相对于主框架视口是绝对的。",
          "parameters": [
            {
              "name": "quad",
              "description": "四边形突出显示",
              "$ref": "DOM.Quad"
            },
            {
              "name": "color",
              "description": "高亮填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "outlineColor",
              "description": "The highlight outline color (default: transparent).",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "name": "highlightRect",
          "description": "Highlights given rectangle. Coordinates are absolute with respect to the main frame viewport.\nIssue: the method does not handle device pixel ratio (DPR) correctly.\nThe coordinates currently have to be adjusted by the client\nif DPR is not 1 (see crbug.com/437807128).",
          "parameters": [
            {
              "name": "x",
              "description": "X坐标",
              "type": "integer"
            },
            {
              "name": "y",
              "description": "Y coordinate",
              "type": "integer"
            },
            {
              "name": "width",
              "description": "矩形宽度",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "矩形高度",
              "type": "integer"
            },
            {
              "name": "color",
              "description": "高亮填充颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            },
            {
              "name": "outlineColor",
              "description": "高亮轮廓颜色（默认：透明）。",
              "optional": true,
              "$ref": "DOM.RGBA"
            }
          ]
        },
        {
          "name": "highlightSourceOrder",
          "description": "突出显示具有给定 id 或给定 DOM 节点的子节点的源顺序\nJavaScript 对象包装器。必须指定nodeId 或objectId。",
          "parameters": [
            {
              "name": "sourceOrderConfig",
              "description": "覆盖图外观的描述符。",
              "$ref": "SourceOrderConfig"
            },
            {
              "name": "nodeId",
              "description": "要突出显示的节点的标识符。",
              "optional": true,
              "$ref": "DOM.NodeId"
            },
            {
              "name": "backendNodeId",
              "description": "要突出显示的后端节点的标识符。",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "objectId",
              "description": "JavaScript object id of the node to be highlighted.",
              "optional": true,
              "$ref": "Runtime.RemoteObjectId"
            }
          ]
        },
        {
          "name": "setInspectMode",
          "description": "进入“检查”模式。在此模式下，用户将鼠标悬停在其上的元素会突出显示。\n然后后端在选择元素时生成“inspectNodeRequested”事件。",
          "parameters": [
            {
              "name": "mode",
              "description": "设置检查模式。",
              "$ref": "InspectMode"
            },
            {
              "name": "highlightConfig",
              "description": "悬停节点的突出显示外观的描述符。如果“启用”则可以省略\n==假`。",
              "optional": true,
              "$ref": "HighlightConfig"
            }
          ]
        },
        {
          "name": "setShowAdHighlights",
          "description": "突出显示检测为广告的所有框架的所有者元素。",
          "parameters": [
            {
              "name": "show",
              "description": "适用于显示广告亮点",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setPausedInDebuggerMessage",
          "parameters": [
            {
              "name": "message",
              "description": "要显示的消息还会触发恢复和单步控制。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setShowDebugBorders",
          "description": "请求后端显示层上的调试边界",
          "parameters": [
            {
              "name": "show",
              "description": "True 用于显示调试边界",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowFPSCounter",
          "description": "请求后端显示 FPS 计数器",
          "parameters": [
            {
              "name": "show",
              "description": "True 用于显示 FPS 计数器",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowGridOverlays",
          "description": "Highlight multiple elements with the CSS Grid overlay.",
          "parameters": [
            {
              "name": "gridNodeHighlightConfigs",
              "description": "高亮显示的节点标识符和描述符的数组。",
              "type": "array",
              "items": {
                "$ref": "GridNodeHighlightConfig"
              }
            }
          ]
        },
        {
          "name": "setShowFlexOverlays",
          "parameters": [
            {
              "name": "flexNodeHighlightConfigs",
              "description": "高亮显示的节点标识符和描述符的数组。",
              "type": "array",
              "items": {
                "$ref": "FlexNodeHighlightConfig"
              }
            }
          ]
        },
        {
          "name": "setShowScrollSnapOverlays",
          "parameters": [
            {
              "name": "scrollSnapHighlightConfigs",
              "description": "An array of node identifiers and descriptors for the highlight appearance.",
              "type": "array",
              "items": {
                "$ref": "ScrollSnapHighlightConfig"
              }
            }
          ]
        },
        {
          "name": "setShowContainerQueryOverlays",
          "parameters": [
            {
              "name": "containerQueryHighlightConfigs",
              "description": "An array of node identifiers and descriptors for the highlight appearance.",
              "type": "array",
              "items": {
                "$ref": "ContainerQueryHighlightConfig"
              }
            }
          ]
        },
        {
          "name": "setShowPaintRects",
          "description": "请求后端显示绘制矩形",
          "parameters": [
            {
              "name": "result",
              "description": "适用于显示绘制矩形",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowLayoutShiftRegions",
          "description": "请求后端显示布局移动区域",
          "parameters": [
            {
              "name": "result",
              "description": "适用于显示布局移位区域",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowScrollBottleneckRects",
          "description": "请求后端显示滚动瓶颈矩形",
          "parameters": [
            {
              "name": "show",
              "description": "True 用于显示滚动瓶颈矩形",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowHitTestBorders",
          "description": "已弃用，不再有任何作用。",
          "deprecated": true,
          "parameters": [
            {
              "name": "show",
              "description": "适用于显示命中测试边框",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowWebVitals",
          "description": "已弃用，不再有任何作用。",
          "deprecated": true,
          "parameters": [
            {
              "name": "show",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowViewportSizeOnResize",
          "description": "根据主框架调整大小绘制视口大小。",
          "parameters": [
            {
              "name": "show",
              "description": "是否绘制尺寸。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setShowHinge",
          "description": "添加双屏设备铰链",
          "parameters": [
            {
              "name": "hingeConfig",
              "description": "铰链数据，null表示隐藏铰链",
              "optional": true,
              "$ref": "HingeConfig"
            }
          ]
        },
        {
          "name": "setShowIsolatedElements",
          "description": "使用叠加层以隔离模式显示元素。",
          "parameters": [
            {
              "name": "isolatedElementHighlightConfigs",
              "description": "高亮显示的节点标识符和描述符的数组。",
              "type": "array",
              "items": {
                "$ref": "IsolatedElementHighlightConfig"
              }
            }
          ]
        },
        {
          "name": "setShowWindowControlsOverlay",
          "description": "显示 PWA 的窗口控件叠加",
          "parameters": [
            {
              "name": "windowControlsOverlayConfig",
              "description": "Window Controls Overlay数据，null表示隐藏Window Controls Overlay",
              "optional": true,
              "$ref": "WindowControlsOverlayConfig"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "inspectNodeRequested",
          "description": "当应该检查节点时触发。这种情况发生在调用“setInspectMode”之后或当\n用户手动检查元素。",
          "parameters": [
            {
              "name": "backendNodeId",
              "description": "要检查的节点的 ID。",
              "$ref": "DOM.BackendNodeId"
            }
          ]
        },
        {
          "name": "nodeHighlightRequested",
          "description": "Fired when the node should be highlighted. This happens after call to `setInspectMode`.",
          "parameters": [
            {
              "name": "nodeId",
              "$ref": "DOM.NodeId"
            }
          ]
        },
        {
          "name": "screenshotRequested",
          "description": "当用户要求捕获页面上某些区域的屏幕截图时触发。",
          "parameters": [
            {
              "name": "viewport",
              "description": "Viewport to capture, in device independent pixels (dip).",
              "$ref": "Page.Viewport"
            }
          ]
        },
        {
          "name": "inspectModeCanceled",
          "description": "当用户取消检查模式时触发。"
        }
      ]
    },
    {
      "domain": "PWA",
      "description": "该域允许与浏览器交互以控制 PWA。",
      "experimental": true,
      "types": [
        {
          "id": "FileHandlerAccept",
          "description": "以下类型是其复制品\nhttps://crsrc.org/c/chrome/browser/web_applications/proto/web_app_os_integration_state.proto;drc=9910d3be894c8f142c977ba1023f30a656bc13fc;l=67",
          "type": "object",
          "properties": [
            {
              "name": "mediaType",
              "description": "mimetype 的新名称根据\nhttps://www.iana.org/assignments/media-types/media-types.xhtml",
              "type": "string"
            },
            {
              "name": "fileExtensions",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "FileHandler",
          "type": "object",
          "properties": [
            {
              "name": "action",
              "type": "string"
            },
            {
              "name": "accepts",
              "type": "array",
              "items": {
                "$ref": "FileHandlerAccept"
              }
            },
            {
              "name": "displayName",
              "type": "string"
            }
          ]
        },
        {
          "id": "DisplayMode",
          "description": "如果用户喜欢在浏览器或应用程序窗口中打开应用程序。",
          "type": "string",
          "enum": [
            "standalone",
            "browser"
          ]
        }
      ],
      "commands": [
        {
          "name": "getOsAppState",
          "description": "返回给定清单 ID 的以下操作系统状态。",
          "parameters": [
            {
              "name": "manifestId",
              "description": "来自 web 应用程序清单文件的 id，通常是该应用程序的 url\n安装 web 应用程序的站点。参见\nhttps://web.dev/learn/pwa/web-app-manifest。",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "badgeCount",
              "type": "integer"
            },
            {
              "name": "fileHandlers",
              "type": "array",
              "items": {
                "$ref": "FileHandler"
              }
            }
          ]
        },
        {
          "name": "install",
          "description": "安装给定的清单标识，可以选择使用给定的 installUrlOrBundleUrl\n\nIWA 特定的安装说明：\nmanifestId 对应isolated-app:// + web_package::SignedWebBundleId\n\n文件安装方式：\ninstallUrlOrBundleUrl 可以是 file:// 或 http(s):// 指向\n到已签名的 Web 包 (.swbn)。在这种情况下，SignedWebBundleId 必须对应于\n.swbn 文件的签名密钥。\n\n开发代理安装方式：\ninstallUrlOrBundleUrl 必须是为开发模式 IWA 提供服务的 http(s)://。\nweb_package::SignedWebBundleId 必须是 dev proxy 类型。\n\ndev代理模式的优点是所有对IWA的修改\n自动将反映在正在运行的应用程序中，无需\n重新安装。\n\n要生成代理模式的捆绑包 ID：\n1. 生成32个随机字节。\n2.按照文档在最后添加特定的后缀\n   https://github.com/WICG/isolated-web-apps/blob/main/Scheme.md#suffix\n3. 使用 Base32 对整个序列进行编码，无需填充。\n\n如果 Chrome 不在 IWA 开发中\n模式下，无论允许列表的状态如何，安装都会失败。",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            },
            {
              "name": "installUrlOrBundleUrl",
              "description": "The location of the app or bundle overriding the one derived from the\nmanifestId.",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "uninstall",
          "description": "卸载给定的manifest_id并关闭所有打开的应用程序窗口。",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            }
          ]
        },
        {
          "name": "launch",
          "description": "启动已安装的 Web 应用程序，或同一 Web 应用程序中的 URL，而不是\n默认起始网址（如果提供）。返回一个页面Target.TargetID，其中\n可用于通过 Target.attachToTarget 或类似 API 进行附加。",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            },
            {
              "name": "url",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "targetId",
              "description": "结果创建的选项卡目标的 ID。",
              "$ref": "Target.TargetID"
            }
          ]
        },
        {
          "name": "launchFilesInApp",
          "description": "Opens one or more local files from an installed web app identified by its\nmanifestId. The web app needs to have file handlers registered to process\nthe files. The API returns one or more page Target.TargetIDs which can be\nused to attach to via Target.attachToTarget or similar APIs.\nIf some files in the parameters cannot be handled by the web app, they will\nbe ignored. If none of the files can be handled, this API returns an error.\nIf no files are provided as the parameter, this API also returns an error.\n\nAccording to the definition of the file handlers in the manifest file, one\nTarget.TargetID may represent a page handling one or more files. The order\nof the returned Target.TargetIDs is not guaranteed.\n\nTODO(crbug.com/339454034): Check the existences of the input files.",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            },
            {
              "name": "files",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "returns": [
            {
              "name": "targetIds",
              "description": "结果创建的选项卡目标的 ID。",
              "type": "array",
              "items": {
                "$ref": "Target.TargetID"
              }
            }
          ]
        },
        {
          "name": "openCurrentPageInApp",
          "description": "打开由清单 ID 标识的 Web 应用程序中的当前页面，需要\n在页面目标上调用。该函数立即返回，无需\n等待应用程序完成加载。",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            }
          ]
        },
        {
          "name": "changeAppUserSettings",
          "description": "更改由其manifestId标识的Web应用程序的用户设置。如果\n应用程序未安装，此命令返回错误。取消设置参数将\n被忽视；无法识别的值将导致错误。\n\n与 Web 应用程序的清单文件中定义的不同，这些\n设置由浏览器提供并由用户控制，他们\n影响浏览器处理网络应用程序的方式。\n\n请参阅每个参数的注释。",
          "parameters": [
            {
              "name": "manifestId",
              "type": "string"
            },
            {
              "name": "linkCapturing",
              "description": "如果用户允许用户在应用程序范围内单击链接，或者\n扩展范围（如果清单具有范围扩展和标志）\n`DesktopPWAsLinkCapturingWithScopeExtensions` 和\n已启用“WebAppEnableScopeExtensions”。\n\n请注意，该 API 不支持将 linkCapturing 重置为\n初始值，卸载并再次安装Web应用程序将重置\n它。\n\nTODO(crbug.com/339453269)：在 ChromeOS 上设置此值不是\n还支持。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "displayMode",
              "optional": true,
              "$ref": "DisplayMode"
            }
          ]
        }
      ]
    },
    {
      "domain": "Page",
      "description": "与被检查页面相关的操作和事件属于页面域。",
      "dependencies": [
        "Debugger",
        "DOM",
        "IO",
        "Network",
        "Runtime"
      ],
      "types": [
        {
          "id": "FrameId",
          "description": "唯一的帧标识符。",
          "type": "string"
        },
        {
          "id": "AdFrameType",
          "description": "Indicates whether a frame has been identified as an ad.",
          "experimental": true,
          "type": "string",
          "enum": [
            "none",
            "child",
            "root"
          ]
        },
        {
          "id": "AdFrameExplanation",
          "experimental": true,
          "type": "string",
          "enum": [
            "ParentIsAd",
            "CreatedByAdScript",
            "MatchedBlockingRule"
          ]
        },
        {
          "id": "AdFrameStatus",
          "description": "指示某个帧是否已被识别为广告以及原因。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "adFrameType",
              "$ref": "AdFrameType"
            },
            {
              "name": "explanations",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "AdFrameExplanation"
              }
            }
          ]
        },
        {
          "id": "AdScriptId",
          "description": "标识导致脚本或框架被标记为\n广告。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "scriptId",
              "description": "导致脚本或框架被标记为的脚本的脚本 ID\n一则广告。",
              "$ref": "Runtime.ScriptId"
            },
            {
              "name": "debuggerId",
              "description": "scriptId 的调试器的 ID。",
              "$ref": "Runtime.UniqueDebuggerId"
            }
          ]
        },
        {
          "id": "AdScriptAncestry",
          "description": "封装脚本祖先和根脚本过滤列表规则\n导致该帧被标记为广告。仅在 `ancestryChain` 时创建\n不为空。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "ancestryChain",
              "description": "代表广告脚本祖先的“AdScriptId”链\n导致了框架的创建。该链是根据脚本排序的\n本身（较低级别）直到其标记的根祖先\n过滤器列表。",
              "type": "array",
              "items": {
                "$ref": "AdScriptId"
              }
            },
            {
              "name": "rootScriptFilterlistRule",
              "description": "导致根（最后）脚本出现的过滤列表规则\n要添加广告标签的“ancestryChain”。仅当规则满足时才填充\n可用。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "SecureContextType",
          "description": "Indicates whether the frame is a secure context and why it is the case.",
          "experimental": true,
          "type": "string",
          "enum": [
            "Secure",
            "SecureLocalhost",
            "InsecureScheme",
            "InsecureAncestor"
          ]
        },
        {
          "id": "CrossOriginIsolatedContextType",
          "description": "指示该帧是否跨源隔离以及为什么会出现这种情况。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Isolated",
            "NotIsolated",
            "NotIsolatedFeatureDisabled"
          ]
        },
        {
          "id": "GatedAPIFeatures",
          "experimental": true,
          "type": "string",
          "enum": [
            "SharedArrayBuffers",
            "SharedArrayBuffersTransferAllowed",
            "PerformanceMeasureMemory",
            "PerformanceProfile"
          ]
        },
        {
          "id": "PermissionsPolicyFeature",
          "description": "所有权限策略功能。该枚举应该与定义的枚举相匹配\n在 services/network/public/cpp/permissions_policy/permissions_policy_features.json5 中。\nLINT.IfChange(PermissionsPolicyFeature)",
          "experimental": true,
          "type": "string",
          "enum": [
            "accelerometer",
            "all-screens-capture",
            "ambient-light-sensor",
            "aria-notify",
            "attribution-reporting",
            "autoplay",
            "bluetooth",
            "browsing-topics",
            "camera",
            "captured-surface-control",
            "ch-dpr",
            "ch-device-memory",
            "ch-downlink",
            "ch-ect",
            "ch-prefers-color-scheme",
            "ch-prefers-reduced-motion",
            "ch-prefers-reduced-transparency",
            "ch-rtt",
            "ch-save-data",
            "ch-ua",
            "ch-ua-arch",
            "ch-ua-bitness",
            "ch-ua-high-entropy-values",
            "ch-ua-platform",
            "ch-ua-model",
            "ch-ua-mobile",
            "ch-ua-form-factors",
            "ch-ua-full-version",
            "ch-ua-full-version-list",
            "ch-ua-platform-version",
            "ch-ua-wow64",
            "ch-viewport-height",
            "ch-viewport-width",
            "ch-width",
            "clipboard-read",
            "clipboard-write",
            "compute-pressure",
            "controlled-frame",
            "cross-origin-isolated",
            "deferred-fetch",
            "deferred-fetch-minimal",
            "device-attributes",
            "digital-credentials-create",
            "digital-credentials-get",
            "direct-sockets",
            "direct-sockets-multicast",
            "direct-sockets-private",
            "display-capture",
            "document-domain",
            "encrypted-media",
            "execution-while-out-of-viewport",
            "execution-while-not-rendered",
            "fenced-unpartitioned-storage-read",
            "focus-without-user-activation",
            "fullscreen",
            "frobulate",
            "gamepad",
            "geolocation",
            "gyroscope",
            "hid",
            "identity-credentials-get",
            "idle-detection",
            "interest-cohort",
            "join-ad-interest-group",
            "keyboard-map",
            "language-detector",
            "language-model",
            "local-fonts",
            "local-network-access",
            "magnetometer",
            "media-playback-while-not-visible",
            "microphone",
            "midi",
            "on-device-speech-recognition",
            "otp-credentials",
            "payment",
            "picture-in-picture",
            "popins",
            "private-aggregation",
            "private-state-token-issuance",
            "private-state-token-redemption",
            "publickey-credentials-create",
            "publickey-credentials-get",
            "record-ad-auction-events",
            "rewriter",
            "run-ad-auction",
            "screen-wake-lock",
            "serial",
            "shared-autofill",
            "shared-storage",
            "shared-storage-select-url",
            "smart-card",
            "speaker-selection",
            "storage-access",
            "sub-apps",
            "summarizer",
            "sync-xhr",
            "translator",
            "unload",
            "usb",
            "usb-unrestricted",
            "vertical-scroll",
            "web-app-installation",
            "web-printing",
            "web-share",
            "window-management",
            "writer",
            "xr-spatial-tracking"
          ]
        },
        {
          "id": "PermissionsPolicyBlockReason",
          "description": "禁用权限策略功能的原因。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Header",
            "IframeAttribute",
            "InFencedFrameTree",
            "InIsolatedApp"
          ]
        },
        {
          "id": "PermissionsPolicyBlockLocator",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "frameId",
              "$ref": "FrameId"
            },
            {
              "name": "blockReason",
              "$ref": "PermissionsPolicyBlockReason"
            }
          ]
        },
        {
          "id": "PermissionsPolicyFeatureState",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "feature",
              "$ref": "PermissionsPolicyFeature"
            },
            {
              "name": "allowed",
              "type": "boolean"
            },
            {
              "name": "locator",
              "optional": true,
              "$ref": "PermissionsPolicyBlockLocator"
            }
          ]
        },
        {
          "id": "OriginTrialTokenStatus",
          "description": "Origin 试用 (https://www.chromium.org/blink/origin-trials) 支持。\nOrigin 试用令牌的状态。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Success",
            "NotSupported",
            "Insecure",
            "Expired",
            "WrongOrigin",
            "InvalidSignature",
            "Malformed",
            "WrongVersion",
            "FeatureDisabled",
            "TokenDisabled",
            "FeatureDisabledForUser",
            "UnknownTrial"
          ]
        },
        {
          "id": "OriginTrialStatus",
          "description": "Status for an Origin Trial.",
          "experimental": true,
          "type": "string",
          "enum": [
            "Enabled",
            "ValidTokenNotProvided",
            "OSNotSupported",
            "TrialNotAllowed"
          ]
        },
        {
          "id": "OriginTrialUsageRestriction",
          "experimental": true,
          "type": "string",
          "enum": [
            "None",
            "Subset"
          ]
        },
        {
          "id": "OriginTrialToken",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "origin",
              "type": "string"
            },
            {
              "name": "matchSubDomains",
              "type": "boolean"
            },
            {
              "name": "trialName",
              "type": "string"
            },
            {
              "name": "expiryTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "isThirdParty",
              "type": "boolean"
            },
            {
              "name": "usageRestriction",
              "$ref": "OriginTrialUsageRestriction"
            }
          ]
        },
        {
          "id": "OriginTrialTokenWithStatus",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "rawTokenText",
              "type": "string"
            },
            {
              "name": "parsedToken",
              "description": "仅当令牌可提取并且\n可解析的。",
              "optional": true,
              "$ref": "OriginTrialToken"
            },
            {
              "name": "status",
              "$ref": "OriginTrialTokenStatus"
            }
          ]
        },
        {
          "id": "OriginTrial",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "trialName",
              "type": "string"
            },
            {
              "name": "status",
              "$ref": "OriginTrialStatus"
            },
            {
              "name": "tokensWithStatus",
              "type": "array",
              "items": {
                "$ref": "OriginTrialTokenWithStatus"
              }
            }
          ]
        },
        {
          "id": "SecurityOriginDetails",
          "description": "有关框架文档的安全来源的附加信息。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "isLocalhost",
              "description": "指示框架文档的安全来源是否为一\n本地主机名（例如“localhost”）或 IP 地址（IPv4\n127.0.0.0/8 或 IPv6 ::1)。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Frame",
          "description": "页面上有关框架的信息。",
          "type": "object",
          "properties": [
            {
              "name": "id",
              "description": "帧唯一标识符。",
              "$ref": "FrameId"
            },
            {
              "name": "parentId",
              "description": "父框架标识符。",
              "optional": true,
              "$ref": "FrameId"
            },
            {
              "name": "loaderId",
              "description": "与该帧关联的加载程序的标识符。",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "name",
              "description": "Frame's name as specified in the tag.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "url",
              "description": "框架文档的 URL，不带片段。",
              "type": "string"
            },
            {
              "name": "urlFragment",
              "description": "框架文档的 URL 片段包括“#”。",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "domainAndRegistry",
              "description": "框架文档的注册域，考虑公共后缀列表。\n从框架的 url 中提取。\n示例网址：http://www.google.com/file.html ->“google.com”\n              http://a.b.co.uk/file.html ->“b.co.uk”",
              "experimental": true,
              "type": "string"
            },
            {
              "name": "securityOrigin",
              "description": "框架文档的安全来源。",
              "type": "string"
            },
            {
              "name": "securityOriginDetails",
              "description": "有关框架文档安全来源的其他详细信息。",
              "experimental": true,
              "optional": true,
              "$ref": "SecurityOriginDetails"
            },
            {
              "name": "mimeType",
              "description": "由浏览器确定的框架文档的 mimeType。",
              "type": "string"
            },
            {
              "name": "unreachableUrl",
              "description": "如果框架加载失败，则包含无法加载的 URL。请注意，与上面的 url 不同，此 URL 可能包含片段。",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "adFrameStatus",
              "description": "指示该帧是否被标记为广告以及原因。",
              "experimental": true,
              "optional": true,
              "$ref": "AdFrameStatus"
            },
            {
              "name": "secureContextType",
              "description": "指示主文档是否是安全上下文并解释原因。",
              "experimental": true,
              "$ref": "SecureContextType"
            },
            {
              "name": "crossOriginIsolatedContextType",
              "description": "指示这是否是跨源隔离上下文。",
              "experimental": true,
              "$ref": "CrossOriginIsolatedContextType"
            },
            {
              "name": "gatedAPIFeatures",
              "description": "Indicated which gated APIs / features are available.",
              "experimental": true,
              "type": "array",
              "items": {
                "$ref": "GatedAPIFeatures"
              }
            }
          ]
        },
        {
          "id": "FrameResource",
          "description": "Information about the Resource on the page.",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "资源网址。",
              "type": "string"
            },
            {
              "name": "type",
              "description": "Type of this resource.",
              "$ref": "Network.ResourceType"
            },
            {
              "name": "mimeType",
              "description": "由浏览器确定的资源 mimeType。",
              "type": "string"
            },
            {
              "name": "lastModified",
              "description": "last-modified timestamp as reported by server.",
              "optional": true,
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "contentSize",
              "description": "资源内容大小。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "failed",
              "description": "如果资源加载失败则为 true。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "canceled",
              "description": "如果资源在加载期间被取消，则为 true。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "FrameResourceTree",
          "description": "Information about the Frame hierarchy along with their cached resources.",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "frame",
              "description": "该树项目的框架信息。",
              "$ref": "Frame"
            },
            {
              "name": "childFrames",
              "description": "儿童框架。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FrameResourceTree"
              }
            },
            {
              "name": "resources",
              "description": "有关框架资源的信息。",
              "type": "array",
              "items": {
                "$ref": "FrameResource"
              }
            }
          ]
        },
        {
          "id": "FrameTree",
          "description": "Information about the Frame hierarchy.",
          "type": "object",
          "properties": [
            {
              "name": "frame",
              "description": "该树项目的框架信息。",
              "$ref": "Frame"
            },
            {
              "name": "childFrames",
              "description": "儿童框架。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FrameTree"
              }
            }
          ]
        },
        {
          "id": "ScriptIdentifier",
          "description": "唯一的脚本标识符。",
          "type": "string"
        },
        {
          "id": "TransitionType",
          "description": "Transition type.",
          "type": "string",
          "enum": [
            "link",
            "typed",
            "address_bar",
            "auto_bookmark",
            "auto_subframe",
            "manual_subframe",
            "generated",
            "auto_toplevel",
            "form_submit",
            "reload",
            "keyword",
            "keyword_generated",
            "other"
          ]
        },
        {
          "id": "NavigationEntry",
          "description": "Navigation history entry.",
          "type": "object",
          "properties": [
            {
              "name": "id",
              "description": "导航历史记录条目的唯一 ID。",
              "type": "integer"
            },
            {
              "name": "url",
              "description": "URL of the navigation history entry.",
              "type": "string"
            },
            {
              "name": "userTypedURL",
              "description": "用户在地址栏中输入的 URL。",
              "type": "string"
            },
            {
              "name": "title",
              "description": "Title of the navigation history entry.",
              "type": "string"
            },
            {
              "name": "transitionType",
              "description": "过渡类型。",
              "$ref": "TransitionType"
            }
          ]
        },
        {
          "id": "ScreencastFrameMetadata",
          "description": "截屏帧元数据。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "offsetTop",
              "description": "DIP 中的顶部偏移。",
              "type": "number"
            },
            {
              "name": "pageScaleFactor",
              "description": "页面比例因子。",
              "type": "number"
            },
            {
              "name": "deviceWidth",
              "description": "DIP 中的设备屏幕宽度。",
              "type": "number"
            },
            {
              "name": "deviceHeight",
              "description": "以 DIP 表示的设备屏幕高度。",
              "type": "number"
            },
            {
              "name": "scrollOffsetX",
              "description": "CSS 像素中水平滚动的位置。",
              "type": "number"
            },
            {
              "name": "scrollOffsetY",
              "description": "CSS 像素中垂直滚动的位置。",
              "type": "number"
            },
            {
              "name": "timestamp",
              "description": "帧交换时间戳。",
              "optional": true,
              "$ref": "Network.TimeSinceEpoch"
            }
          ]
        },
        {
          "id": "DialogType",
          "description": "Javascript dialog type.",
          "type": "string",
          "enum": [
            "alert",
            "confirm",
            "prompt",
            "beforeunload"
          ]
        },
        {
          "id": "AppManifestError",
          "description": "配对应用程序清单时出错。",
          "type": "object",
          "properties": [
            {
              "name": "message",
              "description": "错误信息。",
              "type": "string"
            },
            {
              "name": "critical",
              "description": "如果严重的话，这是一个不可恢复的解析错误。",
              "type": "integer"
            },
            {
              "name": "line",
              "description": "错误线。",
              "type": "integer"
            },
            {
              "name": "column",
              "description": "错误栏。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "AppManifestParsedProperties",
          "description": "解析的应用程序清单属性。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "scope",
              "description": "计算范围值",
              "type": "string"
            }
          ]
        },
        {
          "id": "LayoutViewport",
          "description": "布局视口位置和尺寸。",
          "type": "object",
          "properties": [
            {
              "name": "pageX",
              "description": "相对于文档的水平偏移（CSS 像素）。",
              "type": "integer"
            },
            {
              "name": "pageY",
              "description": "Vertical offset relative to the document (CSS pixels).",
              "type": "integer"
            },
            {
              "name": "clientWidth",
              "description": "宽度（CSS 像素），不包括滚动条（如果存在）。",
              "type": "integer"
            },
            {
              "name": "clientHeight",
              "description": "高度（CSS 像素），不包括滚动条（如果存在）。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "VisualViewport",
          "description": "视觉视口位置、尺寸和比例。",
          "type": "object",
          "properties": [
            {
              "name": "offsetX",
              "description": "相对于布局视口的水平偏移（CSS 像素）。",
              "type": "number"
            },
            {
              "name": "offsetY",
              "description": "相对于布局视口的垂直偏移（CSS 像素）。",
              "type": "number"
            },
            {
              "name": "pageX",
              "description": "相对于文档的水平偏移（CSS 像素）。",
              "type": "number"
            },
            {
              "name": "pageY",
              "description": "相对于文档的垂直偏移（CSS 像素）。",
              "type": "number"
            },
            {
              "name": "clientWidth",
              "description": "宽度（CSS 像素），不包括滚动条（如果存在）。",
              "type": "number"
            },
            {
              "name": "clientHeight",
              "description": "高度（CSS 像素），不包括滚动条（如果存在）。",
              "type": "number"
            },
            {
              "name": "scale",
              "description": "相对于理想视口的缩放（宽度=设备宽度的尺寸）。",
              "type": "number"
            },
            {
              "name": "zoom",
              "description": "页面缩放系数（CSS 与设备独立像素之比）。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "id": "Viewport",
          "description": "用于捕获屏幕截图的视口。",
          "type": "object",
          "properties": [
            {
              "name": "x",
              "description": "与设备无关的像素中的 X 偏移（倾斜）。",
              "type": "number"
            },
            {
              "name": "y",
              "description": "与设备无关的像素中的 Y 偏移（倾斜）。",
              "type": "number"
            },
            {
              "name": "width",
              "description": "Rectangle width in device independent pixels (dip).",
              "type": "number"
            },
            {
              "name": "height",
              "description": "矩形高度（以设备无关像素为单位）（dip）。",
              "type": "number"
            },
            {
              "name": "scale",
              "description": "页面比例因子。",
              "type": "number"
            }
          ]
        },
        {
          "id": "FontFamilies",
          "description": "通用字体系列集合。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "standard",
              "description": "标准字体系列。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "fixed",
              "description": "The fixed font-family.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "serif",
              "description": "衬线字体系列。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "sansSerif",
              "description": "The sansSerif font-family.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cursive",
              "description": "草书字体系列。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "fantasy",
              "description": "幻想字体系列。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "math",
              "description": "The math font-family.",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "ScriptFontFamilies",
          "description": "脚本的字体系列集合。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "script",
              "description": "Name of the script which these font families are defined for.",
              "type": "string"
            },
            {
              "name": "fontFamilies",
              "description": "脚本的通用字体系列集合。",
              "$ref": "FontFamilies"
            }
          ]
        },
        {
          "id": "FontSizes",
          "description": "默认字体大小。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "standard",
              "description": "Default standard font size.",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "fixed",
              "description": "默认固定字体大小。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "ClientNavigationReason",
          "experimental": true,
          "type": "string",
          "enum": [
            "anchorClick",
            "formSubmissionGet",
            "formSubmissionPost",
            "httpHeaderRefresh",
            "initialFrameNavigation",
            "metaTagRefresh",
            "other",
            "pageBlockInterstitial",
            "reload",
            "scriptInitiated"
          ]
        },
        {
          "id": "ClientNavigationDisposition",
          "experimental": true,
          "type": "string",
          "enum": [
            "currentTab",
            "newTab",
            "newWindow",
            "download"
          ]
        },
        {
          "id": "InstallabilityErrorArgument",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "参数名称（例如名称：'最小图标大小像素'）。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "参数值（例如值：'64'）。",
              "type": "string"
            }
          ]
        },
        {
          "id": "InstallabilityError",
          "description": "可安装性错误",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "errorId",
              "description": "错误 ID（例如“manifest-missing-suitable-icon”）。",
              "type": "string"
            },
            {
              "name": "errorArguments",
              "description": "The list of error arguments (e.g. {name:'minimum-icon-size-in-pixels', value:'64'}).",
              "type": "array",
              "items": {
                "$ref": "InstallabilityErrorArgument"
              }
            }
          ]
        },
        {
          "id": "ReferrerPolicy",
          "description": "The referring-policy used for the navigation.",
          "experimental": true,
          "type": "string",
          "enum": [
            "noReferrer",
            "noReferrerWhenDowngrade",
            "origin",
            "originWhenCrossOrigin",
            "sameOrigin",
            "strictOrigin",
            "strictOriginWhenCrossOrigin",
            "unsafeUrl"
          ]
        },
        {
          "id": "CompilationCacheParams",
          "description": "“Page.productCompilationCache”的每个脚本编译缓存参数",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "为其生成编译缓存条目的脚本的 URL。",
              "type": "string"
            },
            {
              "name": "eager",
              "description": "A hint to the backend whether eager compilation is recommended.\n(the actual compilation mode used is upon backend discretion).",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "FileFilter",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "optional": true,
              "type": "string"
            },
            {
              "name": "accepts",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "FileHandler",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "action",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "icons",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ImageResource"
              }
            },
            {
              "name": "accepts",
              "description": "模仿地图，名称是键，接受是值。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FileFilter"
              }
            },
            {
              "name": "launchType",
              "description": "不再重复枚举，使用字符串方便比较。与\n下面的其他枚举。",
              "type": "string"
            }
          ]
        },
        {
          "id": "ImageResource",
          "description": "图标和屏幕截图中使用的图像定义。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "定义中的 src 字段，但更改为 url 以支持\n一致性。",
              "type": "string"
            },
            {
              "name": "sizes",
              "optional": true,
              "type": "string"
            },
            {
              "name": "type",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "LaunchHandler",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "clientMode",
              "type": "string"
            }
          ]
        },
        {
          "id": "ProtocolHandler",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "protocol",
              "type": "string"
            },
            {
              "name": "url",
              "type": "string"
            }
          ]
        },
        {
          "id": "RelatedApplication",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "id",
              "optional": true,
              "type": "string"
            },
            {
              "name": "url",
              "type": "string"
            }
          ]
        },
        {
          "id": "ScopeExtension",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "origin",
              "description": "该字段始终返回序列化字符串，而不是使用元组\n以便于理解和比较。",
              "type": "string"
            },
            {
              "name": "hasOriginWildcard",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Screenshot",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "image",
              "$ref": "ImageResource"
            },
            {
              "name": "formFactor",
              "type": "string"
            },
            {
              "name": "label",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "ShareTarget",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "action",
              "type": "string"
            },
            {
              "name": "method",
              "type": "string"
            },
            {
              "name": "enctype",
              "type": "string"
            },
            {
              "name": "title",
              "description": "嵌入 ShareTargetParams",
              "optional": true,
              "type": "string"
            },
            {
              "name": "text",
              "optional": true,
              "type": "string"
            },
            {
              "name": "url",
              "optional": true,
              "type": "string"
            },
            {
              "name": "files",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FileFilter"
              }
            }
          ]
        },
        {
          "id": "Shortcut",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "url",
              "type": "string"
            }
          ]
        },
        {
          "id": "WebAppManifest",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "backgroundColor",
              "optional": true,
              "type": "string"
            },
            {
              "name": "description",
              "description": "清单提供的额外描述。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "dir",
              "optional": true,
              "type": "string"
            },
            {
              "name": "display",
              "optional": true,
              "type": "string"
            },
            {
              "name": "displayOverrides",
              "description": "由用户控制的覆盖显示模式。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "fileHandlers",
              "description": "打开文件的处理程序。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "FileHandler"
              }
            },
            {
              "name": "icons",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ImageResource"
              }
            },
            {
              "name": "id",
              "optional": true,
              "type": "string"
            },
            {
              "name": "lang",
              "optional": true,
              "type": "string"
            },
            {
              "name": "launchHandler",
              "description": "TODO(crbug.com/1231886)：该字段是非标准的，是 Chrome 的一部分\n实验。参见：\nhttps://github.com/WICG/web-app-launch/blob/main/launch_handler.md",
              "optional": true,
              "$ref": "LaunchHandler"
            },
            {
              "name": "name",
              "optional": true,
              "type": "string"
            },
            {
              "name": "orientation",
              "optional": true,
              "type": "string"
            },
            {
              "name": "preferRelatedApplications",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "protocolHandlers",
              "description": "The handlers to open protocols.",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ProtocolHandler"
              }
            },
            {
              "name": "relatedApplications",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "RelatedApplication"
              }
            },
            {
              "name": "scope",
              "optional": true,
              "type": "string"
            },
            {
              "name": "scopeExtensions",
              "description": "Non-standard, see\nhttps://github.com/WICG/manifest-incubations/blob/gh-pages/scope_extensions-explainer.md",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ScopeExtension"
              }
            },
            {
              "name": "screenshots",
              "description": "Chromium 使用的屏幕截图。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Screenshot"
              }
            },
            {
              "name": "shareTarget",
              "optional": true,
              "$ref": "ShareTarget"
            },
            {
              "name": "shortName",
              "optional": true,
              "type": "string"
            },
            {
              "name": "shortcuts",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Shortcut"
              }
            },
            {
              "name": "startUrl",
              "optional": true,
              "type": "string"
            },
            {
              "name": "themeColor",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "NavigationType",
          "description": "FrameNaviated 事件的类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "Navigation",
            "BackForwardCacheRestore"
          ]
        },
        {
          "id": "BackForwardCacheNotRestoredReason",
          "description": "前后缓存未恢复原因列表。",
          "experimental": true,
          "type": "string",
          "enum": [
            "NotPrimaryMainFrame",
            "BackForwardCacheDisabled",
            "RelatedActiveContentsExist",
            "HTTPStatusNotOK",
            "SchemeNotHTTPOrHTTPS",
            "Loading",
            "WasGrantedMediaAccess",
            "DisableForRenderFrameHostCalled",
            "DomainNotAllowed",
            "HTTPMethodNotGET",
            "SubframeIsNavigating",
            "Timeout",
            "CacheLimit",
            "JavaScriptExecution",
            "RendererProcessKilled",
            "RendererProcessCrashed",
            "SchedulerTrackedFeatureUsed",
            "ConflictingBrowsingInstance",
            "CacheFlushed",
            "ServiceWorkerVersionActivation",
            "SessionRestored",
            "ServiceWorkerPostMessage",
            "EnteredBackForwardCacheBeforeServiceWorkerHostAdded",
            "RenderFrameHostReused_SameSite",
            "RenderFrameHostReused_CrossSite",
            "ServiceWorkerClaim",
            "IgnoreEventAndEvict",
            "HaveInnerContents",
            "TimeoutPuttingInCache",
            "BackForwardCacheDisabledByLowMemory",
            "BackForwardCacheDisabledByCommandLine",
            "NetworkRequestDatapipeDrainedAsBytesConsumer",
            "NetworkRequestRedirected",
            "NetworkRequestTimeout",
            "NetworkExceedsBufferLimit",
            "NavigationCancelledWhileRestoring",
            "NotMostRecentNavigationEntry",
            "BackForwardCacheDisabledForPrerender",
            "UserAgentOverrideDiffers",
            "ForegroundCacheLimit",
            "BrowsingInstanceNotSwapped",
            "BackForwardCacheDisabledForDelegate",
            "UnloadHandlerExistsInMainFrame",
            "UnloadHandlerExistsInSubFrame",
            "ServiceWorkerUnregistration",
            "CacheControlNoStore",
            "CacheControlNoStoreCookieModified",
            "CacheControlNoStoreHTTPOnlyCookieModified",
            "NoResponseHead",
            "Unknown",
            "ActivationNavigationsDisallowedForBug1234857",
            "ErrorDocument",
            "FencedFramesEmbedder",
            "CookieDisabled",
            "HTTPAuthRequired",
            "CookieFlushed",
            "BroadcastChannelOnMessage",
            "WebViewSettingsChanged",
            "WebViewJavaScriptObjectChanged",
            "WebViewMessageListenerInjected",
            "WebViewSafeBrowsingAllowlistChanged",
            "WebViewDocumentStartJavascriptChanged",
            "WebSocket",
            "WebTransport",
            "WebRTC",
            "MainResourceHasCacheControlNoStore",
            "MainResourceHasCacheControlNoCache",
            "SubresourceHasCacheControlNoStore",
            "SubresourceHasCacheControlNoCache",
            "ContainsPlugins",
            "DocumentLoaded",
            "OutstandingNetworkRequestOthers",
            "RequestedMIDIPermission",
            "RequestedAudioCapturePermission",
            "RequestedVideoCapturePermission",
            "RequestedBackForwardCacheBlockedSensors",
            "RequestedBackgroundWorkPermission",
            "BroadcastChannel",
            "WebXR",
            "SharedWorker",
            "SharedWorkerMessage",
            "SharedWorkerWithNoActiveClient",
            "WebLocks",
            "WebHID",
            "WebBluetooth",
            "WebShare",
            "RequestedStorageAccessGrant",
            "WebNfc",
            "OutstandingNetworkRequestFetch",
            "OutstandingNetworkRequestXHR",
            "AppBanner",
            "Printing",
            "WebDatabase",
            "PictureInPicture",
            "SpeechRecognizer",
            "IdleManager",
            "PaymentManager",
            "SpeechSynthesis",
            "KeyboardLock",
            "WebOTPService",
            "OutstandingNetworkRequestDirectSocket",
            "InjectedJavascript",
            "InjectedStyleSheet",
            "KeepaliveRequest",
            "IndexedDBEvent",
            "Dummy",
            "JsNetworkRequestReceivedCacheControlNoStoreResource",
            "WebRTCUsedWithCCNS",
            "WebTransportUsedWithCCNS",
            "WebSocketUsedWithCCNS",
            "SmartCard",
            "LiveMediaStreamTrack",
            "UnloadHandler",
            "ParserAborted",
            "ContentSecurityHandler",
            "ContentWebAuthenticationAPI",
            "ContentFileChooser",
            "ContentSerial",
            "ContentFileSystemAccess",
            "ContentMediaDevicesDispatcherHost",
            "ContentWebBluetooth",
            "ContentWebUSB",
            "ContentMediaSessionService",
            "ContentScreenReader",
            "ContentDiscarded",
            "EmbedderPopupBlockerTabHelper",
            "EmbedderSafeBrowsingTriggeredPopupBlocker",
            "EmbedderSafeBrowsingThreatDetails",
            "EmbedderAppBannerManager",
            "EmbedderDomDistillerViewerSource",
            "EmbedderDomDistillerSelfDeletingRequestDelegate",
            "EmbedderOomInterventionTabHelper",
            "EmbedderOfflinePage",
            "EmbedderChromePasswordManagerClientBindCredentialManager",
            "EmbedderPermissionRequestManager",
            "EmbedderModalDialog",
            "EmbedderExtensions",
            "EmbedderExtensionMessaging",
            "EmbedderExtensionMessagingForOpenPort",
            "EmbedderExtensionSentMessageToCachedFrame",
            "RequestedByWebViewClient",
            "PostMessageByWebViewClient",
            "CacheControlNoStoreDeviceBoundSessionTerminated",
            "CacheLimitPrunedOnModerateMemoryPressure",
            "CacheLimitPrunedOnCriticalMemoryPressure"
          ]
        },
        {
          "id": "BackForwardCacheNotRestoredReasonType",
          "description": "后退缓存未恢复原因的类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "SupportPending",
            "PageSupportNeeded",
            "Circumstantial"
          ]
        },
        {
          "id": "BackForwardCacheBlockingDetails",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "发生阻塞的文件的 URL。由于测试而可选。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "function",
              "description": "发生阻塞的函数名称。由于匿名函数和测试，所以可选。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "lineNumber",
              "description": "Line number in the script (0-based).",
              "type": "integer"
            },
            {
              "name": "columnNumber",
              "description": "脚本中的列号（从 0 开始）。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "BackForwardCacheNotRestoredExplanation",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "Type of the reason",
              "$ref": "BackForwardCacheNotRestoredReasonType"
            },
            {
              "name": "reason",
              "description": "未恢复原因",
              "$ref": "BackForwardCacheNotRestoredReason"
            },
            {
              "name": "context",
              "description": "Context associated with the reason. The meaning of this context is\ndependent on the reason:\n- EmbedderExtensionSentMessageToCachedFrame: the extension ID.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "details",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "BackForwardCacheBlockingDetails"
              }
            }
          ]
        },
        {
          "id": "BackForwardCacheNotRestoredExplanationTree",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "每个框架的 URL",
              "type": "string"
            },
            {
              "name": "explanations",
              "description": "各帧未恢复原因",
              "type": "array",
              "items": {
                "$ref": "BackForwardCacheNotRestoredExplanation"
              }
            },
            {
              "name": "children",
              "description": "Array of children frame",
              "type": "array",
              "items": {
                "$ref": "BackForwardCacheNotRestoredExplanationTree"
              }
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "addScriptToEvaluateOnLoad",
          "description": "已弃用，请改用 addScriptToEvaluateOnNewDocument。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "scriptSource",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "identifier",
              "description": "Identifier of the added script.",
              "$ref": "ScriptIdentifier"
            }
          ]
        },
        {
          "name": "addScriptToEvaluateOnNewDocument",
          "description": "Evaluates given script in every frame upon creation (before loading frame's scripts).",
          "parameters": [
            {
              "name": "source",
              "type": "string"
            },
            {
              "name": "worldName",
              "description": "If specified, creates an isolated world with the given name and evaluates given script in it.\nThis world name will be used as the ExecutionContextDescription::name when the corresponding\nevent is emitted.",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "includeCommandLineAPI",
              "description": "Specifies whether command line API should be available to the script, defaults\nto false.",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "runImmediately",
              "description": "如果为 true，则立即在现有执行上下文或世界上运行脚本。\n默认值：假。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "identifier",
              "description": "添加的脚本的标识符。",
              "$ref": "ScriptIdentifier"
            }
          ]
        },
        {
          "name": "bringToFront",
          "description": "Brings page to front (activates tab)."
        },
        {
          "name": "captureScreenshot",
          "description": "捕获页面截图。",
          "parameters": [
            {
              "name": "format",
              "description": "图像压缩格式（默认为 png）。",
              "optional": true,
              "type": "string",
              "enum": [
                "jpeg",
                "png",
                "webp"
              ]
            },
            {
              "name": "quality",
              "description": "压缩质量范围为 [0..100]（仅限 jpeg）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "clip",
              "description": "Capture the screenshot of a given region only.",
              "optional": true,
              "$ref": "Viewport"
            },
            {
              "name": "fromSurface",
              "description": "从表面而不是视图捕获屏幕截图。默认为 true。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "captureBeyondViewport",
              "description": "捕获视口之外的屏幕截图。默认为 false。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "optimizeForSpeed",
              "description": "优化图像编码的速度，而不是结果大小（默认为 false）",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "data",
              "description": "Base64 编码的图像数据。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            }
          ]
        },
        {
          "name": "captureSnapshot",
          "description": "以字符串形式返回页面的快照。对于MHTML格式，序列化包括\niframe、shadow DOM、外部资源和元素内联样式。",
          "experimental": true,
          "parameters": [
            {
              "name": "format",
              "description": "Format (defaults to mhtml).",
              "optional": true,
              "type": "string",
              "enum": [
                "mhtml"
              ]
            }
          ],
          "returns": [
            {
              "name": "data",
              "description": "序列化页面数据。",
              "type": "string"
            }
          ]
        },
        {
          "name": "clearDeviceMetricsOverride",
          "description": "Clears the overridden device metrics.",
          "experimental": true,
          "deprecated": true,
          "redirect": "Emulation"
        },
        {
          "name": "clearDeviceOrientationOverride",
          "description": "清除覆盖的设备方向。",
          "experimental": true,
          "deprecated": true,
          "redirect": "DeviceOrientation"
        },
        {
          "name": "clearGeolocationOverride",
          "description": "清除覆盖的地理位置位置和错误。",
          "deprecated": true,
          "redirect": "Emulation"
        },
        {
          "name": "createIsolatedWorld",
          "description": "为给定框架创建一个孤立的世界。",
          "parameters": [
            {
              "name": "frameId",
              "description": "应在其中创建孤立世界的框架的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "worldName",
              "description": "在执行上下文中报告的可选名称。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "grantUniveralAccess",
              "description": "是否应该向孤立的世界授予普遍访问权。这是一个强大的\n选项，谨慎使用。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "executionContextId",
              "description": "孤立世界的执行上下文。",
              "$ref": "Runtime.ExecutionContextId"
            }
          ]
        },
        {
          "name": "deleteCookie",
          "description": "删除具有给定名称、域和路径的浏览器 cookie。",
          "experimental": true,
          "deprecated": true,
          "redirect": "Network",
          "parameters": [
            {
              "name": "cookieName",
              "description": "要删除的 cookie 的名称。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "匹配 Cooke 域和路径的 URL。",
              "type": "string"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用页面域通知。"
        },
        {
          "name": "enable",
          "description": "启用页面域通知。",
          "parameters": [
            {
              "name": "enableFileChooserOpenedEvent",
              "description": "如果为 true，则无论设置的状态如何，都会发出“Page.fileChooserOpened”事件\n`Page.setInterceptFileChooserDialog` 命令（默认值： false）。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getAppManifest",
          "description": "获取当前文档的已处理清单。\n  此 API 始终等待清单加载。\n  如果提供了manifestId，并且它与manifest的manifest不匹配\n    当前文档中，此 API 出错。\n  如果没有加载页面，该 API 会立即出错。",
          "parameters": [
            {
              "name": "manifestId",
              "optional": true,
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "url",
              "description": "Manifest location.",
              "type": "string"
            },
            {
              "name": "errors",
              "type": "array",
              "items": {
                "$ref": "AppManifestError"
              }
            },
            {
              "name": "data",
              "description": "体现内容。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "parsed",
              "description": "已解析的清单属性。已弃用，请改用清单。",
              "experimental": true,
              "deprecated": true,
              "optional": true,
              "$ref": "AppManifestParsedProperties"
            },
            {
              "name": "manifest",
              "experimental": true,
              "$ref": "WebAppManifest"
            }
          ]
        },
        {
          "name": "getInstallabilityErrors",
          "experimental": true,
          "returns": [
            {
              "name": "installabilityErrors",
              "type": "array",
              "items": {
                "$ref": "InstallabilityError"
              }
            }
          ]
        },
        {
          "name": "getManifestIcons",
          "description": "已弃用，因为不能保证返回的图标实际上是用于 PWA 安装的图标。",
          "experimental": true,
          "deprecated": true,
          "returns": [
            {
              "name": "primaryIcon",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getAppId",
          "description": "返回唯一的 (PWA) 应用程序 ID。\n仅当启用功能标志“WebAppEnableManifestId”时才返回值",
          "experimental": true,
          "returns": [
            {
              "name": "appId",
              "description": "应用程序 ID，来自清单的 id 属性或根据 start_url 计算",
              "optional": true,
              "type": "string"
            },
            {
              "name": "recommendedId",
              "description": "建议清单的 id 属性匹配从 start_url 计算出的当前 id",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "getAdScriptAncestry",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "$ref": "FrameId"
            }
          ],
          "returns": [
            {
              "name": "adScriptAncestry",
              "description": "导致此框架的广告脚本标识符的祖先链\n创建，以及根脚本的过滤列表规则。血统\n链是从最直接的脚本排序的（在框架创建中\n堆栈）到更远的祖先（创建了紧邻的前一个\n脚本）。仅当框架被标记为广告并且 ID 可用时才发送。",
              "optional": true,
              "$ref": "AdScriptAncestry"
            }
          ]
        },
        {
          "name": "getFrameTree",
          "description": "返回当前的帧树结构。",
          "returns": [
            {
              "name": "frameTree",
              "description": "呈现框架树结构。",
              "$ref": "FrameTree"
            }
          ]
        },
        {
          "name": "getLayoutMetrics",
          "description": "返回与页面布局相关的指标，例如视口边界/比例。",
          "returns": [
            {
              "name": "layoutViewport",
              "description": "已弃用与布局视口相关的指标。以设备像素为单位。请改用“cssLayoutViewport”。",
              "deprecated": true,
              "$ref": "LayoutViewport"
            },
            {
              "name": "visualViewport",
              "description": "已弃用与视觉视口相关的指标。以设备像素为单位。请改用“cssVisualViewport”。",
              "deprecated": true,
              "$ref": "VisualViewport"
            },
            {
              "name": "contentSize",
              "description": "Deprecated size of scrollable area. Is in DP. Use `cssContentSize` instead.",
              "deprecated": true,
              "$ref": "DOM.Rect"
            },
            {
              "name": "cssLayoutViewport",
              "description": "Metrics relating to the layout viewport in CSS pixels.",
              "$ref": "LayoutViewport"
            },
            {
              "name": "cssVisualViewport",
              "description": "Metrics relating to the visual viewport in CSS pixels.",
              "$ref": "VisualViewport"
            },
            {
              "name": "cssContentSize",
              "description": "可滚动区域的大小（以 CSS 像素为单位）。",
              "$ref": "DOM.Rect"
            }
          ]
        },
        {
          "name": "getNavigationHistory",
          "description": "返回当前页面的导航历史记录。",
          "returns": [
            {
              "name": "currentIndex",
              "description": "当前导航历史条目的索引。",
              "type": "integer"
            },
            {
              "name": "entries",
              "description": "导航历史条目数组。",
              "type": "array",
              "items": {
                "$ref": "NavigationEntry"
              }
            }
          ]
        },
        {
          "name": "resetNavigationHistory",
          "description": "重置当前页面的导航历史记录。"
        },
        {
          "name": "getResourceContent",
          "description": "返回给定资源的内容。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "要获取资源的帧 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "url",
              "description": "URL of the resource to get content for.",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "content",
              "description": "资源内容。",
              "type": "string"
            },
            {
              "name": "base64Encoded",
              "description": "True, if content was served as base64.",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getResourceTree",
          "description": "返回当前帧/资源树结构。",
          "experimental": true,
          "returns": [
            {
              "name": "frameTree",
              "description": "Present frame / resource tree structure.",
              "$ref": "FrameResourceTree"
            }
          ]
        },
        {
          "name": "handleJavaScriptDialog",
          "description": "接受或关闭 JavaScript 启动的对话框（警报、确认、提示或 onbeforeunload）。",
          "parameters": [
            {
              "name": "accept",
              "description": "是否接受或关闭对话框。",
              "type": "boolean"
            },
            {
              "name": "promptText",
              "description": "接受之前要输入到对话框提示中的文本。仅当这是提示时才使用\n对话框。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "navigate",
          "description": "Navigates current page to the given URL.",
          "parameters": [
            {
              "name": "url",
              "description": "将页面导航到的 URL。",
              "type": "string"
            },
            {
              "name": "referrer",
              "description": "引荐来源网址。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "transitionType",
              "description": "预期的过渡类型。",
              "optional": true,
              "$ref": "TransitionType"
            },
            {
              "name": "frameId",
              "description": "Frame id to navigate, if not specified navigates the top frame.",
              "optional": true,
              "$ref": "FrameId"
            },
            {
              "name": "referrerPolicy",
              "description": "Referrer-policy used for the navigation.",
              "experimental": true,
              "optional": true,
              "$ref": "ReferrerPolicy"
            }
          ],
          "returns": [
            {
              "name": "frameId",
              "description": "Frame id that has navigated (or failed to navigate)",
              "$ref": "FrameId"
            },
            {
              "name": "loaderId",
              "description": "装载机标识符。在同一文档导航的情况下，这被省略，\n因为之前提交的 loaderId 不会改变。",
              "optional": true,
              "$ref": "Network.LoaderId"
            },
            {
              "name": "errorText",
              "description": "用户友好的错误消息，当且仅当导航失败时才会出现。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "isDownload",
              "description": "导航是否导致下载。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "navigateToHistoryEntry",
          "description": "Navigates current page to the given history entry.",
          "parameters": [
            {
              "name": "entryId",
              "description": "要导航到的条目的唯一 ID。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "printToPDF",
          "description": "将页面打印为 PDF。",
          "parameters": [
            {
              "name": "landscape",
              "description": "纸张方向。默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "displayHeaderFooter",
              "description": "Display header and footer. Defaults to false.",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "printBackground",
              "description": "打印背景图形。默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "scale",
              "description": "Scale of the webpage rendering. Defaults to 1.",
              "optional": true,
              "type": "number"
            },
            {
              "name": "paperWidth",
              "description": "纸张宽度（以英寸为单位）。默认为 8.5 英寸。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "paperHeight",
              "description": "纸张高度（以英寸为单位）。默认为 11 英寸。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "marginTop",
              "description": "上边距（以英寸为单位）。默认为 1 厘米（~0.4 英寸）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "marginBottom",
              "description": "底部边距以英寸为单位。默认为 1 厘米（~0.4 英寸）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "marginLeft",
              "description": "左边距以英寸为单位。默认为 1 厘米（~0.4 英寸）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "marginRight",
              "description": "右边距以英寸为单位。默认为 1 厘米（~0.4 英寸）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "pageRanges",
              "description": "要打印的纸张范围，以一种为基础，例如“1-5、8、11-13”。页面是\n按文档顺序打印，不按指定顺序打印，并且不\n不止一次。\n默认为空字符串，这意味着打印整个文档。\n页码悄悄地限制为实际页数\n文档，超出文档末尾的范围将被忽略。\n如果这导致没有页面可打印，则会报告错误。\n指定起始值大于结束值的范围是错误的。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "headerTemplate",
              "description": "打印标题的 HTML 模板。应该是有效的 HTML 标记，如下所示\n用于向其中注入打印值的类：\n- `date`：格式化打印日期\n- `title`: 文档标题\n- `url`: 文档位置\n- `pageNumber`：当前页码\n- `totalPages`：文档中的总页数\n\n例如，`<span class=title></span>`将生成包含标题的span。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "footerTemplate",
              "description": "HTML template for the print footer. Should use the same format as the `headerTemplate`.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "preferCSSPageSize",
              "description": "是否首选 css 定义的页面大小。默认为 false，\n在这种情况下，内容将缩放以适合纸张尺寸。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "transferMode",
              "description": "作为流返回",
              "experimental": true,
              "optional": true,
              "type": "string",
              "enum": [
                "ReturnAsBase64",
                "ReturnAsStream"
              ]
            },
            {
              "name": "generateTaggedPDF",
              "description": "是否生成带标签的（可访问的）PDF。默认为嵌入器选择。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "generateDocumentOutline",
              "description": "是否将文档大纲嵌入到 PDF 中。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "data",
              "description": "Base64 编码的 pdf 数据。如果 |returnAsStream| 则为空已指定。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            },
            {
              "name": "stream",
              "description": "保存生成的 PDF 数据的流的句柄。",
              "experimental": true,
              "optional": true,
              "$ref": "IO.StreamHandle"
            }
          ]
        },
        {
          "name": "reload",
          "description": "Reloads given page optionally ignoring the cache.",
          "parameters": [
            {
              "name": "ignoreCache",
              "description": "如果为 true，则浏览器缓存将被忽略（就像用户按下 Shift+刷新）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "scriptToEvaluateOnLoad",
              "description": "If set, the script will be injected into all frames of the inspected page after reload.\nArgument will be ignored if reloading dataURL origin.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "loaderId",
              "description": "如果设置，如果目标页面的主框架的\n加载程序 ID 与提供的 ID 不匹配。这样可以防止意外\n重新加载非预期目标，以防出现赛车导航。",
              "experimental": true,
              "optional": true,
              "$ref": "Network.LoaderId"
            }
          ]
        },
        {
          "name": "removeScriptToEvaluateOnLoad",
          "description": "已弃用，请改用removeScriptToEvaluateOnNewDocument。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "identifier",
              "$ref": "ScriptIdentifier"
            }
          ]
        },
        {
          "name": "removeScriptToEvaluateOnNewDocument",
          "description": "Removes given script from the list.",
          "parameters": [
            {
              "name": "identifier",
              "$ref": "ScriptIdentifier"
            }
          ]
        },
        {
          "name": "screencastFrameAck",
          "description": "确认前端已收到截屏视频帧。",
          "experimental": true,
          "parameters": [
            {
              "name": "sessionId",
              "description": "帧数。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "searchInResource",
          "description": "Searches for given string in resource content.",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "Frame id for resource to search in.",
              "$ref": "FrameId"
            },
            {
              "name": "url",
              "description": "要搜索的资源的 URL。",
              "type": "string"
            },
            {
              "name": "query",
              "description": "要搜索的字符串。",
              "type": "string"
            },
            {
              "name": "caseSensitive",
              "description": "如果为 true，则搜索区分大小写。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isRegex",
              "description": "If true, treats string parameter as regex.",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "result",
              "description": "搜索匹配列表。",
              "type": "array",
              "items": {
                "$ref": "Debugger.SearchMatch"
              }
            }
          ]
        },
        {
          "name": "setAdBlockingEnabled",
          "description": "在所有网站上启用 Chrome 的实验性广告过滤器。",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "是否屏蔽广告。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setBypassCSP",
          "description": "启用页面内容安全策略绕过。",
          "parameters": [
            {
              "name": "enabled",
              "description": "Whether to bypass page CSP.",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getPermissionsPolicyState",
          "description": "获取给定框架上的权限策略状态。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "$ref": "FrameId"
            }
          ],
          "returns": [
            {
              "name": "states",
              "type": "array",
              "items": {
                "$ref": "PermissionsPolicyFeatureState"
              }
            }
          ]
        },
        {
          "name": "getOriginTrials",
          "description": "获取给定帧上的原始试验。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "$ref": "FrameId"
            }
          ],
          "returns": [
            {
              "name": "originTrials",
              "type": "array",
              "items": {
                "$ref": "OriginTrial"
              }
            }
          ]
        },
        {
          "name": "setDeviceMetricsOverride",
          "description": "覆盖设备屏幕尺寸的值（window.screen.width、window.screen.height、\nwindow.innerWidth、window.innerHeight 和“device-width”/“device-height”相关 CSS 媒体\n查询结果）。",
          "experimental": true,
          "deprecated": true,
          "redirect": "Emulation",
          "parameters": [
            {
              "name": "width",
              "description": "覆盖宽度值（以像素为单位）（最小值 0，最大值 10000000）。 0 禁用覆盖。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "Overriding height value in pixels (minimum 0, maximum 10000000). 0 disables the override.",
              "type": "integer"
            },
            {
              "name": "deviceScaleFactor",
              "description": "覆盖设备比例因子值。 0 禁用覆盖。",
              "type": "number"
            },
            {
              "name": "mobile",
              "description": "是否模拟移动设备。这包括视口元标记、覆盖滚动条、文本\n自动调整大小等等。",
              "type": "boolean"
            },
            {
              "name": "scale",
              "description": "缩放以应用于生成的视图图像。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "screenWidth",
              "description": "覆盖屏幕宽度值（以像素为单位）（最小值 0，最大值 10000000）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "screenHeight",
              "description": "覆盖屏幕高度值（以像素为单位）（最小值 0，最大值 10000000）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "positionX",
              "description": "覆盖屏幕上视图的 X 位置（以像素为单位）（最小值 0，最大值 10000000）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "positionY",
              "description": "覆盖屏幕上的视图 Y 位置（以像素为单位）（最小值 0，最大值 10000000）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "dontSetVisibleSize",
              "description": "不要设置可见视图大小，依赖于显式的 setVisibleSize 调用。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "screenOrientation",
              "description": "屏幕方向覆盖。",
              "optional": true,
              "$ref": "Emulation.ScreenOrientation"
            },
            {
              "name": "viewport",
              "description": "视口尺寸和比例。如果未设置，则覆盖将被清除。",
              "optional": true,
              "$ref": "Viewport"
            }
          ]
        },
        {
          "name": "setDeviceOrientationOverride",
          "description": "覆盖设备方向。",
          "experimental": true,
          "deprecated": true,
          "redirect": "DeviceOrientation",
          "parameters": [
            {
              "name": "alpha",
              "description": "模拟阿尔法",
              "type": "number"
            },
            {
              "name": "beta",
              "description": "模拟测试版",
              "type": "number"
            },
            {
              "name": "gamma",
              "description": "模拟伽玛",
              "type": "number"
            }
          ]
        },
        {
          "name": "setFontFamilies",
          "description": "设置通用字体系列。",
          "experimental": true,
          "parameters": [
            {
              "name": "fontFamilies",
              "description": "指定要设置的字体系列。如果未指定字体系列，则不会更改。",
              "$ref": "FontFamilies"
            },
            {
              "name": "forScripts",
              "description": "Specifies font families to set for individual scripts.",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "ScriptFontFamilies"
              }
            }
          ]
        },
        {
          "name": "setFontSizes",
          "description": "设置默认字体大小。",
          "experimental": true,
          "parameters": [
            {
              "name": "fontSizes",
              "description": "指定要设置的字体大小。如果未指定字体大小，则不会更改。",
              "$ref": "FontSizes"
            }
          ]
        },
        {
          "name": "setDocumentContent",
          "description": "将给定标记设置为文档的 HTML。",
          "parameters": [
            {
              "name": "frameId",
              "description": "Frame id to set HTML for.",
              "$ref": "FrameId"
            },
            {
              "name": "html",
              "description": "HTML content to set.",
              "type": "string"
            }
          ]
        },
        {
          "name": "setDownloadBehavior",
          "description": "设置下载文件时的行为。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "behavior",
              "description": "是否允许所有或拒绝所有下载请求，或者在以下情况下使用默认 Chrome 行为：\n可用（否则拒绝）。",
              "type": "string",
              "enum": [
                "deny",
                "allow",
                "default"
              ]
            },
            {
              "name": "downloadPath",
              "description": "The default path to save downloaded files to. This is required if behavior is set to 'allow'",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "setGeolocationOverride",
          "description": "覆盖地理位置或错误。省略任何参数模拟位置\n不可用。",
          "deprecated": true,
          "redirect": "Emulation",
          "parameters": [
            {
              "name": "latitude",
              "description": "Mock latitude",
              "optional": true,
              "type": "number"
            },
            {
              "name": "longitude",
              "description": "模拟经度",
              "optional": true,
              "type": "number"
            },
            {
              "name": "accuracy",
              "description": "模拟准确率",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "setLifecycleEventsEnabled",
          "description": "控制页面是否发出生命周期事件。",
          "parameters": [
            {
              "name": "enabled",
              "description": "如果为 true，则开始发出生命周期事件。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setTouchEmulationEnabled",
          "description": "切换基于鼠标事件的触摸事件模拟。",
          "experimental": true,
          "deprecated": true,
          "redirect": "Emulation",
          "parameters": [
            {
              "name": "enabled",
              "description": "是否应启用触摸事件模拟。",
              "type": "boolean"
            },
            {
              "name": "configuration",
              "description": "触摸/手势事件配置。默认值：当前平台。",
              "optional": true,
              "type": "string",
              "enum": [
                "mobile",
                "desktop"
              ]
            }
          ]
        },
        {
          "name": "startScreencast",
          "description": "使用“screencastFrame”事件开始发送每个帧。",
          "experimental": true,
          "parameters": [
            {
              "name": "format",
              "description": "图像压缩格式。",
              "optional": true,
              "type": "string",
              "enum": [
                "jpeg",
                "png"
              ]
            },
            {
              "name": "quality",
              "description": "压缩质量范围为 [0..100]。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "maxWidth",
              "description": "Maximum screenshot width.",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "maxHeight",
              "description": "最大屏幕截图高度。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "everyNthFrame",
              "description": "每第 n 帧发送一次。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "stopLoading",
          "description": "强制页面停止所有导航和挂起的资源获取。"
        },
        {
          "name": "crash",
          "description": "使 IO 线程上的渲染器崩溃，生成小型转储。",
          "experimental": true
        },
        {
          "name": "close",
          "description": "尝试关闭页面，运行其 beforeunload 挂钩（如果有）。"
        },
        {
          "name": "setWebLifecycleState",
          "description": "尝试更新页面的 Web 生命周期状态。\n它将根据以下方式将页面转换到给定状态：\nhttps://github.com/WICG/web-lifecycle/",
          "experimental": true,
          "parameters": [
            {
              "name": "state",
              "description": "目标生命周期状态",
              "type": "string",
              "enum": [
                "frozen",
                "active"
              ]
            }
          ]
        },
        {
          "name": "stopScreencast",
          "description": "Stops sending each frame in the `screencastFrame`.",
          "experimental": true
        },
        {
          "name": "produceCompilationCache",
          "description": "请求后端为指定脚本生成编译缓存。\n`scripts` 被附加到缓存的脚本列表中\n将被生产。该列表可能会在页面导航期间重置。\n当遇到具有匹配 URL 的脚本时，可以选择缓存\n基于内部启发法，由后端自行决定生成。\n另请参阅：“Page.compilationCacheProduced”。",
          "experimental": true,
          "parameters": [
            {
              "name": "scripts",
              "type": "array",
              "items": {
                "$ref": "CompilationCacheParams"
              }
            }
          ]
        },
        {
          "name": "addCompilationCache",
          "description": "给定 url 的种子编译缓存。编译缓存不存在\n跨进程导航。",
          "experimental": true,
          "parameters": [
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "data",
              "description": "Base64-encoded data (Encoded as a base64 string when passed over JSON)",
              "type": "string"
            }
          ]
        },
        {
          "name": "clearCompilationCache",
          "description": "Clears seeded compilation cache.",
          "experimental": true
        },
        {
          "name": "setSPCTransactionMode",
          "description": "设置安全支付确认交易模式。\nhttps://w3c.github.io/secure- payment-confirmation/#sctn-automation-set-spc-transaction-mode",
          "experimental": true,
          "parameters": [
            {
              "name": "mode",
              "type": "string",
              "enum": [
                "none",
                "autoAccept",
                "autoChooseToAuthAnotherWay",
                "autoReject",
                "autoOptOut"
              ]
            }
          ]
        },
        {
          "name": "setRPHRegistrationMode",
          "description": "自定义处理程序 API 的扩展：\nhttps://html.spec.whatwg.org/multipage/system-state.html#rph-automation",
          "experimental": true,
          "parameters": [
            {
              "name": "mode",
              "type": "string",
              "enum": [
                "none",
                "autoAccept",
                "autoReject"
              ]
            }
          ]
        },
        {
          "name": "generateTestReport",
          "description": "生成测试报告。",
          "experimental": true,
          "parameters": [
            {
              "name": "message",
              "description": "Message to be displayed in the report.",
              "type": "string"
            },
            {
              "name": "group",
              "description": "指定要将报告传送到的端点组。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "waitForDebugger",
          "description": "暂停页面执行。可以使用通用 Runtime.runIfWaitingForDebugger 恢复。",
          "experimental": true
        },
        {
          "name": "setInterceptFileChooserDialog",
          "description": "拦截文件选择器请求并将控制权转移给协议客户端。\n启用文件选择器拦截后，不会显示本机文件选择器对话框。\n相反，会发出协议事件“Page.fileChooserOpened”。",
          "parameters": [
            {
              "name": "enabled",
              "type": "boolean"
            },
            {
              "name": "cancel",
              "description": "如果为 true，则通过发出相关事件（如果有）来取消对话框\n除了不显示是否启用拦截之外\n（默认值：假）。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setPrerenderingAllowed",
          "description": "手动启用/禁用预渲染。\n\n此命令是 https://crbug.com/1440085 的短期解决方案。\n请参阅https://docs.google.com/document/d/12HVmFxYj5Jc-eJr5OmWsa2bqTJsbgGLKI6ZIyx0_wpA\n了解更多详情。\n\nTODO(https://crbug.com/1440085)：一旦 Puppeteer 支持选项卡目标，请删除此选项。",
          "experimental": true,
          "parameters": [
            {
              "name": "isAllowed",
              "type": "boolean"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "domContentEventFired",
          "parameters": [
            {
              "name": "timestamp",
              "$ref": "Network.MonotonicTime"
            }
          ]
        },
        {
          "name": "fileChooserOpened",
          "description": "Emitted only when `page.interceptFileChooser` is enabled.",
          "parameters": [
            {
              "name": "frameId",
              "description": "包含输入节点的帧的 ID。",
              "experimental": true,
              "$ref": "FrameId"
            },
            {
              "name": "mode",
              "description": "输入模式。",
              "type": "string",
              "enum": [
                "selectSingle",
                "selectMultiple"
              ]
            },
            {
              "name": "backendNodeId",
              "description": "输入节点 ID。仅适用于通过“<input type=\"file\">”元素打开的文件选择器。",
              "experimental": true,
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        },
        {
          "name": "frameAttached",
          "description": "当框架已附加到其父级时触发。",
          "parameters": [
            {
              "name": "frameId",
              "description": "已附加的框架的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "parentFrameId",
              "description": "Parent frame identifier.",
              "$ref": "FrameId"
            },
            {
              "name": "stack",
              "description": "附加框架时的 JavaScript 堆栈跟踪，仅在框架从脚本启动时设置。",
              "optional": true,
              "$ref": "Runtime.StackTrace"
            }
          ]
        },
        {
          "name": "frameClearedScheduledNavigation",
          "description": "当框架不再具有预定导航时触发。",
          "deprecated": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "已清除其计划导航的框架的 ID。",
              "$ref": "FrameId"
            }
          ]
        },
        {
          "name": "frameDetached",
          "description": "当框架与其父框架分离时触发。",
          "parameters": [
            {
              "name": "frameId",
              "description": "Id of the frame that has been detached.",
              "$ref": "FrameId"
            },
            {
              "name": "reason",
              "experimental": true,
              "type": "string",
              "enum": [
                "remove",
                "swap"
              ]
            }
          ]
        },
        {
          "name": "frameSubtreeWillBeDetached",
          "description": "在分离框架子树之前触发。在任何帧之前发出\n子树实际上是分离的。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "作为将分离的子树的根的帧的 ID。",
              "$ref": "FrameId"
            }
          ]
        },
        {
          "name": "frameNavigated",
          "description": "Fired once navigation of the frame has completed. Frame is now associated with the new loader.",
          "parameters": [
            {
              "name": "frame",
              "description": "框架对象。",
              "$ref": "Frame"
            },
            {
              "name": "type",
              "experimental": true,
              "$ref": "NavigationType"
            }
          ]
        },
        {
          "name": "documentOpened",
          "description": "打开要写入的文档时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "frame",
              "description": "框架对象。",
              "$ref": "Frame"
            }
          ]
        },
        {
          "name": "frameResized",
          "experimental": true
        },
        {
          "name": "frameStartedNavigating",
          "description": "导航开始时触发。双方都会触发此事件\n渲染器启动和浏览器启动的导航。对于渲染器启动的\n导航，该事件在“frameRequestedNavigation”之后触发。\n事件发出后导航仍可能被取消。多个事件\n可以针对单个导航触发，例如，当同一文档\n导航变成跨文档导航（例如在\n框架集）。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "正在导航的框架的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "url",
              "description": "导航开始的 URL。最终 URL 可能不同。",
              "type": "string"
            },
            {
              "name": "loaderId",
              "description": "Loader identifier. Even though it is present in case of same-document\nnavigation, the previously committed loaderId would not change unless\nthe navigation changes from a same-document to a cross-document\nnavigation.",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "navigationType",
              "type": "string",
              "enum": [
                "reload",
                "reloadBypassingCache",
                "restore",
                "restoreWithPost",
                "historySameDocument",
                "historyDifferentDocument",
                "sameDocument",
                "differentDocument"
              ]
            }
          ]
        },
        {
          "name": "frameRequestedNavigation",
          "description": "Fired when a renderer-initiated navigation is requested.\nNavigation may still be cancelled after the event is issued.",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "正在导航的框架的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "reason",
              "description": "导航的原因。",
              "$ref": "ClientNavigationReason"
            },
            {
              "name": "url",
              "description": "所请求导航的目标 URL。",
              "type": "string"
            },
            {
              "name": "disposition",
              "description": "导航的配置。",
              "$ref": "ClientNavigationDisposition"
            }
          ]
        },
        {
          "name": "frameScheduledNavigation",
          "description": "当框架安排潜在的导航时触发。",
          "deprecated": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "Id of the frame that has scheduled a navigation.",
              "$ref": "FrameId"
            },
            {
              "name": "delay",
              "description": "延迟（以秒为单位）直到预定导航开始。导航不是\n保证启动。",
              "type": "number"
            },
            {
              "name": "reason",
              "description": "导航的原因。",
              "$ref": "ClientNavigationReason"
            },
            {
              "name": "url",
              "description": "计划导航的目标 URL。",
              "type": "string"
            }
          ]
        },
        {
          "name": "frameStartedLoading",
          "description": "当框架开始加载时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "已开始加载的帧的 ID。",
              "$ref": "FrameId"
            }
          ]
        },
        {
          "name": "frameStoppedLoading",
          "description": "当框架停止加载时触发。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "Id of the frame that has stopped loading.",
              "$ref": "FrameId"
            }
          ]
        },
        {
          "name": "downloadWillBegin",
          "description": "当页面即将开始下载时触发​​。\n已弃用。请改用 Browser.downloadWillBegin。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "导致下载开始的帧的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "guid",
              "description": "下载的全局唯一标识符。",
              "type": "string"
            },
            {
              "name": "url",
              "description": "正在下载的资源的 URL。",
              "type": "string"
            },
            {
              "name": "suggestedFilename",
              "description": "资源的建议文件名（磁盘上保存的实际文件名可能有所不同）。",
              "type": "string"
            }
          ]
        },
        {
          "name": "downloadProgress",
          "description": "下载取得进展时触发。最后一次通话已|完成| == 正确。\n已弃用。请改用 Browser.downloadProgress。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "guid",
              "description": "Global unique identifier of the download.",
              "type": "string"
            },
            {
              "name": "totalBytes",
              "description": "Total expected bytes to download.",
              "type": "number"
            },
            {
              "name": "receivedBytes",
              "description": "收到的总字节数。",
              "type": "number"
            },
            {
              "name": "state",
              "description": "下载状态。",
              "type": "string",
              "enum": [
                "inProgress",
                "completed",
                "canceled"
              ]
            }
          ]
        },
        {
          "name": "interstitialHidden",
          "description": "隐藏插页式页面时触发"
        },
        {
          "name": "interstitialShown",
          "description": "显示插页式页面时触发"
        },
        {
          "name": "javascriptDialogClosed",
          "description": "当 JavaScript 启动的对话框（警报、确认、提示或 onbeforeunload）已被触发时触发\n关闭。",
          "parameters": [
            {
              "name": "frameId",
              "description": "帧 ID。",
              "experimental": true,
              "$ref": "FrameId"
            },
            {
              "name": "result",
              "description": "对话是否被确认。",
              "type": "boolean"
            },
            {
              "name": "userInput",
              "description": "用户在出现提示时输入。",
              "type": "string"
            }
          ]
        },
        {
          "name": "javascriptDialogOpening",
          "description": "当 JavaScript 启动的对话框（警报、确认、提示或 onbeforeunload）即将启动时触发\n打开。",
          "parameters": [
            {
              "name": "url",
              "description": "框架网址。",
              "type": "string"
            },
            {
              "name": "frameId",
              "description": "Frame id.",
              "experimental": true,
              "$ref": "FrameId"
            },
            {
              "name": "message",
              "description": "对话框将显示的消息。",
              "type": "string"
            },
            {
              "name": "type",
              "description": "对话框类型。",
              "$ref": "DialogType"
            },
            {
              "name": "hasBrowserHandler",
              "description": "真正的 iff 浏览器能够显示或作用于给定的对话框。当浏览器没有\n给定目标的对话框处理程序，在使用页面域时调用警报将停止\n页面执行。可以通过调用 Page.handleJavaScriptDialog 来恢复执行。",
              "type": "boolean"
            },
            {
              "name": "defaultPrompt",
              "description": "Default dialog prompt.",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "name": "lifecycleEvent",
          "description": "当前生命周期事件（导航、加载、绘制等）触发\n目标（包括本地帧）。",
          "parameters": [
            {
              "name": "frameId",
              "description": "帧的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "loaderId",
              "description": "装载机标识符。如果从工作人员获取请求，则为空字符串。",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "timestamp",
              "$ref": "Network.MonotonicTime"
            }
          ]
        },
        {
          "name": "backForwardCacheNotUsed",
          "description": "如果启用 BackForwardCache 功能，则因 bfcache 历史导航失败而触发。做\n不假设 Page.frameNaviged 事件有任何顺序。此事件仅针对\n文档更改的主机历史导航（非同一文档导航），\n当 bfcache 导航失败时。",
          "experimental": true,
          "parameters": [
            {
              "name": "loaderId",
              "description": "关联导航的加载程序 ID。",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "frameId",
              "description": "关联帧的帧 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "notRestoredExplanations",
              "description": "无法缓存页面的一系列原因。这不能为空。",
              "type": "array",
              "items": {
                "$ref": "BackForwardCacheNotRestoredExplanation"
              }
            },
            {
              "name": "notRestoredExplanationsTree",
              "description": "每个帧无法缓存页面的原因的树结构。",
              "optional": true,
              "$ref": "BackForwardCacheNotRestoredExplanationTree"
            }
          ]
        },
        {
          "name": "loadEventFired",
          "parameters": [
            {
              "name": "timestamp",
              "$ref": "Network.MonotonicTime"
            }
          ]
        },
        {
          "name": "navigatedWithinDocument",
          "description": "当发生相同文档导航时触发，例如由于历史 API 使用或锚点导航。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "description": "帧的 ID。",
              "$ref": "FrameId"
            },
            {
              "name": "url",
              "description": "框架的新网址。",
              "type": "string"
            },
            {
              "name": "navigationType",
              "description": "导航类型",
              "type": "string",
              "enum": [
                "fragment",
                "historyApi",
                "other"
              ]
            }
          ]
        },
        {
          "name": "screencastFrame",
          "description": "`startScreencast` 请求的压缩图像数据。",
          "experimental": true,
          "parameters": [
            {
              "name": "data",
              "description": "Base64-encoded compressed image. (Encoded as a base64 string when passed over JSON)",
              "type": "string"
            },
            {
              "name": "metadata",
              "description": "截屏帧元数据。",
              "$ref": "ScreencastFrameMetadata"
            },
            {
              "name": "sessionId",
              "description": "帧数。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "screencastVisibilityChanged",
          "description": "当显示或隐藏当前启用的截屏视频的页面时触发`。",
          "experimental": true,
          "parameters": [
            {
              "name": "visible",
              "description": "如果页面可见则为 true。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "windowOpen",
          "description": "当要打开新窗口时触发，通过 window.open()、链接单击、表单提交，\n等等",
          "parameters": [
            {
              "name": "url",
              "description": "新窗口的 URL。",
              "type": "string"
            },
            {
              "name": "windowName",
              "description": "窗口名称。",
              "type": "string"
            },
            {
              "name": "windowFeatures",
              "description": "An array of enabled window features.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "userGesture",
              "description": "是否由用户手势触发。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "compilationCacheProduced",
          "description": "为生成的每个编译缓存发出。",
          "experimental": true,
          "parameters": [
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "data",
              "description": "Base64 编码数据（通过 JSON 传递时编码为 Base64 字符串）",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "Performance",
      "types": [
        {
          "id": "Metric",
          "description": "运行时执行指标。",
          "type": "object",
          "properties": [
            {
              "name": "name",
              "description": "指标名称。",
              "type": "string"
            },
            {
              "name": "value",
              "description": "Metric value.",
              "type": "number"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用收集和报告指标。"
        },
        {
          "name": "enable",
          "description": "启用收集和报告指标。",
          "parameters": [
            {
              "name": "timeDomain",
              "description": "用于收集和报告持续时间指标的时域。",
              "optional": true,
              "type": "string",
              "enum": [
                "timeTicks",
                "threadTicks"
              ]
            }
          ]
        },
        {
          "name": "setTimeDomain",
          "description": "设置用于收集和报告持续时间指标的时域。\n请注意，必须在启用指标收集之前调用此函数。呼唤\n当启用指标收集时，此方法会返回错误。",
          "experimental": true,
          "deprecated": true,
          "parameters": [
            {
              "name": "timeDomain",
              "description": "时域",
              "type": "string",
              "enum": [
                "timeTicks",
                "threadTicks"
              ]
            }
          ]
        },
        {
          "name": "getMetrics",
          "description": "检索运行时指标的当前值。",
          "returns": [
            {
              "name": "metrics",
              "description": "Current values for run-time metrics.",
              "type": "array",
              "items": {
                "$ref": "Metric"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "metrics",
          "description": "Current values of the metrics.",
          "parameters": [
            {
              "name": "metrics",
              "description": "Current values of the metrics.",
              "type": "array",
              "items": {
                "$ref": "Metric"
              }
            },
            {
              "name": "title",
              "description": "时间戳标题。",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "PerformanceTimeline",
      "description": "报告性能时间线事件，如中指定\nhttps://w3c.github.io/performance-timeline/#dom-performanceobserver。",
      "experimental": true,
      "dependencies": [
        "DOM",
        "Network"
      ],
      "types": [
        {
          "id": "LargestContentfulPaint",
          "description": "请参阅 https://github.com/WICG/LargestContentfulPaint 和largest_contentful_paint.idl",
          "type": "object",
          "properties": [
            {
              "name": "renderTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "loadTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "size",
              "description": "正在绘制的像素数。",
              "type": "number"
            },
            {
              "name": "elementId",
              "description": "元素的 id 属性（如果可用）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "url",
              "description": "图像的 URL（可能会被修剪）。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "nodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        },
        {
          "id": "LayoutShiftAttribution",
          "type": "object",
          "properties": [
            {
              "name": "previousRect",
              "$ref": "DOM.Rect"
            },
            {
              "name": "currentRect",
              "$ref": "DOM.Rect"
            },
            {
              "name": "nodeId",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            }
          ]
        },
        {
          "id": "LayoutShift",
          "description": "请参阅https://wicg.github.io/layout-instability/#sec-layout-shift 和layout_shift.idl",
          "type": "object",
          "properties": [
            {
              "name": "value",
              "description": "本次活动产生的分数增量。",
              "type": "number"
            },
            {
              "name": "hadRecentInput",
              "type": "boolean"
            },
            {
              "name": "lastInputTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "sources",
              "type": "array",
              "items": {
                "$ref": "LayoutShiftAttribution"
              }
            }
          ]
        },
        {
          "id": "TimelineEvent",
          "type": "object",
          "properties": [
            {
              "name": "frameId",
              "description": "标识与该事件相关的帧。对于非框架目标为空。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "type",
              "description": "事件类型，如 https://w3c.github.io/performance-timeline/#dom-performanceentry-entrytype 中指定\n这确定了存在哪些可选的“详细信息”字段。",
              "type": "string"
            },
            {
              "name": "name",
              "description": "根据类型，名称可能为空。",
              "type": "string"
            },
            {
              "name": "time",
              "description": "自纪元以来的时间（以秒为单位），在文档生命周期内单调增加。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "duration",
              "description": "活动持续时间（如果适用）。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "lcpDetails",
              "optional": true,
              "$ref": "LargestContentfulPaint"
            },
            {
              "name": "layoutShiftDetails",
              "optional": true,
              "$ref": "LayoutShift"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "先前缓冲的事件将在方法返回之前报告。\n另请参阅：时间线事件添加",
          "parameters": [
            {
              "name": "eventTypes",
              "description": "要报告的事件类型，如中指定的\nhttps://w3c.github.io/performance-timeline/#dom-performanceentry-entrytype\n指定的过滤器将覆盖任何先前的过滤器，传递空\n过滤器禁用记录。\n请注意，目前并非所有暴露于 Web 平台的类型都受支持。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "timelineEventAdded",
          "description": "添加性能时间线事件时发送。请参阅reportPerformanceTimeline 方法。",
          "parameters": [
            {
              "name": "event",
              "$ref": "TimelineEvent"
            }
          ]
        }
      ]
    },
    {
      "domain": "Preload",
      "experimental": true,
      "types": [
        {
          "id": "RuleSetId",
          "description": "唯一ID",
          "type": "string"
        },
        {
          "id": "RuleSet",
          "description": "Corresponds to SpeculationRuleSet",
          "type": "object",
          "properties": [
            {
              "name": "id",
              "$ref": "RuleSetId"
            },
            {
              "name": "loaderId",
              "description": "标识与规则集关联的文档。",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "sourceText",
              "description": "表示规则集的 JSON 源文本。如果它来自\n`<script>` 标签，它是节点的文本内容。请注意，它是\n有效案例的 JSON。\n\n另请参阅：\n- https://wicg.github.io/nav-speculation/speculation-rules.html\n- https://github.com/WICG/nav-speculation/blob/main/triggers.md",
              "type": "string"
            },
            {
              "name": "backendNodeId",
              "description": "推测规则集可以通过内联添加\n`<script>` 标签或通过外部资源\n“推测规则”HTTP 标头。对于第一种情况，我们包括\n相关 `<script>` 标记的 BackendNodeId。对于第二个\n在这种情况下，我们包含加载规则集的外部 URL\nfrom，如果启用了网络域，还有 RequestId。\n\n另请参阅：\n- https://wicg.github.io/nav-speculation/speculation-rules.html#speculation-rules-script\n- https://wicg.github.io/nav-speculation/speculation-rules.html#speculation-rules-header",
              "optional": true,
              "$ref": "DOM.BackendNodeId"
            },
            {
              "name": "url",
              "optional": true,
              "type": "string"
            },
            {
              "name": "requestId",
              "optional": true,
              "$ref": "Network.RequestId"
            },
            {
              "name": "errorType",
              "description": "错误信息\n当且仅当“errorType”为空时，“errorMessage”为空。",
              "optional": true,
              "$ref": "RuleSetErrorType"
            },
            {
              "name": "errorMessage",
              "description": "TODO(https://crbug.com/1425354): Replace this property with structured error.",
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "tag",
              "description": "For more details, see:\nhttps://github.com/WICG/nav-speculation/blob/main/speculation-rules-tags.md",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "RuleSetErrorType",
          "type": "string",
          "enum": [
            "SourceIsNotJsonObject",
            "InvalidRulesSkipped",
            "InvalidRulesetLevelTag"
          ]
        },
        {
          "id": "SpeculationAction",
          "description": "尝试预加载的类型。它对应于\nmojom::SpeculationAction （尽管 PrefetchWithSubresources 被省略，因为它\n没有被客户使用）。",
          "type": "string",
          "enum": [
            "Prefetch",
            "Prerender",
            "PrerenderUntilScript"
          ]
        },
        {
          "id": "SpeculationTargetHint",
          "description": "对应于 mojom::SpeculationTargetHint。\n请参阅 https://github.com/WICG/nav-speculation/blob/main/triggers.md#window-name-targeting-hints",
          "type": "string",
          "enum": [
            "Blank",
            "Self"
          ]
        },
        {
          "id": "PreloadingAttemptKey",
          "description": "标识预加载尝试的密钥。\n\n使用的url是触发器指定的url（即初始URL），并且\n不是导航到的最终 url。例如，预渲染允许\n尝试期间同源主机导航，但尝试是\n仍然使用初始 URL。",
          "type": "object",
          "properties": [
            {
              "name": "loaderId",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "action",
              "$ref": "SpeculationAction"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "targetHint",
              "optional": true,
              "$ref": "SpeculationTargetHint"
            }
          ]
        },
        {
          "id": "PreloadingAttemptSource",
          "description": "列出预加载尝试的源，特别是规则集的 ID\n有一个触发尝试的推测规则，并且\n触发的 <a href> 或 <area href> 元素的 BackendNodeIds\n尝试（在由文档规则触发的尝试的情况下）。它是\n多个规则集和链接可能会触发一次尝试。",
          "type": "object",
          "properties": [
            {
              "name": "key",
              "$ref": "PreloadingAttemptKey"
            },
            {
              "name": "ruleSetIds",
              "type": "array",
              "items": {
                "$ref": "RuleSetId"
              }
            },
            {
              "name": "nodeIds",
              "type": "array",
              "items": {
                "$ref": "DOM.BackendNodeId"
              }
            }
          ]
        },
        {
          "id": "PreloadPipelineId",
          "description": "Chrome 使用以下方法一起管理不同类型的预加载\n预加载管道的概念。例如，如果一个网站使用\n对于预渲染的推测规则，Chrome 首先启动预取，然后\n然后将其升级为预渲染。\n\n它们的 CDP 事件是单独发出的，但它们共享\n`PreloadPipelineId`。",
          "type": "string"
        },
        {
          "id": "PrerenderFinalStatus",
          "description": "Prerender2 的 FinalStatus 原因列表。",
          "type": "string",
          "enum": [
            "Activated",
            "Destroyed",
            "LowEndDevice",
            "InvalidSchemeRedirect",
            "InvalidSchemeNavigation",
            "NavigationRequestBlockedByCsp",
            "MojoBinderPolicy",
            "RendererProcessCrashed",
            "RendererProcessKilled",
            "Download",
            "TriggerDestroyed",
            "NavigationNotCommitted",
            "NavigationBadHttpStatus",
            "ClientCertRequested",
            "NavigationRequestNetworkError",
            "CancelAllHostsForTesting",
            "DidFailLoad",
            "Stop",
            "SslCertificateError",
            "LoginAuthRequested",
            "UaChangeRequiresReload",
            "BlockedByClient",
            "AudioOutputDeviceRequested",
            "MixedContent",
            "TriggerBackgrounded",
            "MemoryLimitExceeded",
            "DataSaverEnabled",
            "TriggerUrlHasEffectiveUrl",
            "ActivatedBeforeStarted",
            "InactivePageRestriction",
            "StartFailed",
            "TimeoutBackgrounded",
            "CrossSiteRedirectInInitialNavigation",
            "CrossSiteNavigationInInitialNavigation",
            "SameSiteCrossOriginRedirectNotOptInInInitialNavigation",
            "SameSiteCrossOriginNavigationNotOptInInInitialNavigation",
            "ActivationNavigationParameterMismatch",
            "ActivatedInBackground",
            "EmbedderHostDisallowed",
            "ActivationNavigationDestroyedBeforeSuccess",
            "TabClosedByUserGesture",
            "TabClosedWithoutUserGesture",
            "PrimaryMainFrameRendererProcessCrashed",
            "PrimaryMainFrameRendererProcessKilled",
            "ActivationFramePolicyNotCompatible",
            "PreloadingDisabled",
            "BatterySaverEnabled",
            "ActivatedDuringMainFrameNavigation",
            "PreloadingUnsupportedByWebContents",
            "CrossSiteRedirectInMainFrameNavigation",
            "CrossSiteNavigationInMainFrameNavigation",
            "SameSiteCrossOriginRedirectNotOptInInMainFrameNavigation",
            "SameSiteCrossOriginNavigationNotOptInInMainFrameNavigation",
            "MemoryPressureOnTrigger",
            "MemoryPressureAfterTriggered",
            "PrerenderingDisabledByDevTools",
            "SpeculationRuleRemoved",
            "ActivatedWithAuxiliaryBrowsingContexts",
            "MaxNumOfRunningEagerPrerendersExceeded",
            "MaxNumOfRunningNonEagerPrerendersExceeded",
            "MaxNumOfRunningEmbedderPrerendersExceeded",
            "PrerenderingUrlHasEffectiveUrl",
            "RedirectedPrerenderingUrlHasEffectiveUrl",
            "ActivationUrlHasEffectiveUrl",
            "JavaScriptInterfaceAdded",
            "JavaScriptInterfaceRemoved",
            "AllPrerenderingCanceled",
            "WindowClosed",
            "SlowNetwork",
            "OtherPrerenderedPageActivated",
            "V8OptimizerDisabled",
            "PrerenderFailedDuringPrefetch",
            "BrowsingDataRemoved",
            "PrerenderHostReused"
          ]
        },
        {
          "id": "PreloadingStatus",
          "description": "预加载状态值，另请参阅 PreloadingTriggeringOutcome。这个\n状态由 prefetchStatusUpdated 和 prerenderStatusUpdated 共享。",
          "type": "string",
          "enum": [
            "Pending",
            "Running",
            "Ready",
            "Success",
            "Failure",
            "NotSupported"
          ]
        },
        {
          "id": "PrefetchStatus",
          "description": "TODO(https://crbug.com/1384419)：重新访问 PrefetchStatus 和列表\n过滤掉开发人员不需要的内容。",
          "type": "string",
          "enum": [
            "PrefetchAllowed",
            "PrefetchFailedIneligibleRedirect",
            "PrefetchFailedInvalidRedirect",
            "PrefetchFailedMIMENotSupported",
            "PrefetchFailedNetError",
            "PrefetchFailedNon2XX",
            "PrefetchEvictedAfterBrowsingDataRemoved",
            "PrefetchEvictedAfterCandidateRemoved",
            "PrefetchEvictedForNewerPrefetch",
            "PrefetchHeldback",
            "PrefetchIneligibleRetryAfter",
            "PrefetchIsPrivacyDecoy",
            "PrefetchIsStale",
            "PrefetchNotEligibleBrowserContextOffTheRecord",
            "PrefetchNotEligibleDataSaverEnabled",
            "PrefetchNotEligibleExistingProxy",
            "PrefetchNotEligibleHostIsNonUnique",
            "PrefetchNotEligibleNonDefaultStoragePartition",
            "PrefetchNotEligibleSameSiteCrossOriginPrefetchRequiredProxy",
            "PrefetchNotEligibleSchemeIsNotHttps",
            "PrefetchNotEligibleUserHasCookies",
            "PrefetchNotEligibleUserHasServiceWorker",
            "PrefetchNotEligibleUserHasServiceWorkerNoFetchHandler",
            "PrefetchNotEligibleRedirectFromServiceWorker",
            "PrefetchNotEligibleRedirectToServiceWorker",
            "PrefetchNotEligibleBatterySaverEnabled",
            "PrefetchNotEligiblePreloadingDisabled",
            "PrefetchNotFinishedInTime",
            "PrefetchNotStarted",
            "PrefetchNotUsedCookiesChanged",
            "PrefetchProxyNotAvailable",
            "PrefetchResponseUsed",
            "PrefetchSuccessfulButNotUsed",
            "PrefetchNotUsedProbeFailed"
          ]
        },
        {
          "id": "PrerenderMismatchedHeaders",
          "description": "发生标题不匹配时显示的标题信息。",
          "type": "object",
          "properties": [
            {
              "name": "headerName",
              "type": "string"
            },
            {
              "name": "initialValue",
              "optional": true,
              "type": "string"
            },
            {
              "name": "activationValue",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable"
        },
        {
          "name": "disable"
        }
      ],
      "events": [
        {
          "name": "ruleSetUpdated",
          "description": "Upsert. Currently, it is only emitted when a rule set added.",
          "parameters": [
            {
              "name": "ruleSet",
              "$ref": "RuleSet"
            }
          ]
        },
        {
          "name": "ruleSetRemoved",
          "parameters": [
            {
              "name": "id",
              "$ref": "RuleSetId"
            }
          ]
        },
        {
          "name": "preloadEnabledStateUpdated",
          "description": "当预加载启用状态更新时触发。",
          "parameters": [
            {
              "name": "disabledByPreference",
              "type": "boolean"
            },
            {
              "name": "disabledByDataSaver",
              "type": "boolean"
            },
            {
              "name": "disabledByBatterySaver",
              "type": "boolean"
            },
            {
              "name": "disabledByHoldbackPrefetchSpeculationRules",
              "type": "boolean"
            },
            {
              "name": "disabledByHoldbackPrerenderSpeculationRules",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "prefetchStatusUpdated",
          "description": "更新预取尝试时触发。",
          "parameters": [
            {
              "name": "key",
              "$ref": "PreloadingAttemptKey"
            },
            {
              "name": "pipelineId",
              "$ref": "PreloadPipelineId"
            },
            {
              "name": "initiatingFrameId",
              "description": "启动预取的帧的帧 ID。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "prefetchUrl",
              "type": "string"
            },
            {
              "name": "status",
              "$ref": "PreloadingStatus"
            },
            {
              "name": "prefetchStatus",
              "$ref": "PrefetchStatus"
            },
            {
              "name": "requestId",
              "$ref": "Network.RequestId"
            }
          ]
        },
        {
          "name": "prerenderStatusUpdated",
          "description": "Fired when a prerender attempt is updated.",
          "parameters": [
            {
              "name": "key",
              "$ref": "PreloadingAttemptKey"
            },
            {
              "name": "pipelineId",
              "$ref": "PreloadPipelineId"
            },
            {
              "name": "status",
              "$ref": "PreloadingStatus"
            },
            {
              "name": "prerenderStatus",
              "optional": true,
              "$ref": "PrerenderFinalStatus"
            },
            {
              "name": "disallowedMojoInterface",
              "description": "用于向用户提供有关 Mojo 界面名称的更多信息\n这与预渲染不兼容并导致尝试被取消。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "mismatchedHeaders",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "PrerenderMismatchedHeaders"
              }
            }
          ]
        },
        {
          "name": "preloadingAttemptSourcesUpdated",
          "description": "发送文档中所有预加载尝试的源列表。",
          "parameters": [
            {
              "name": "loaderId",
              "$ref": "Network.LoaderId"
            },
            {
              "name": "preloadingAttemptSources",
              "type": "array",
              "items": {
                "$ref": "PreloadingAttemptSource"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Security",
      "types": [
        {
          "id": "CertificateId",
          "description": "内部证书 ID 值。",
          "type": "integer"
        },
        {
          "id": "MixedContentType",
          "description": "混合内容（HTTPS 页面上的 HTTP 资源）的描述，定义为\nhttps://www.w3.org/TR/mixed-content/#categories",
          "type": "string",
          "enum": [
            "blockable",
            "optionally-blockable",
            "none"
          ]
        },
        {
          "id": "SecurityState",
          "description": "页面或资源的安全级别。",
          "type": "string",
          "enum": [
            "unknown",
            "neutral",
            "insecure",
            "secure",
            "info",
            "insecure-broken"
          ]
        },
        {
          "id": "CertificateSecurityState",
          "description": "有关页面证书的安全状态的详细信息。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "protocol",
              "description": "协议名称（例如“TLS 1.2”或“QUIC”）。",
              "type": "string"
            },
            {
              "name": "keyExchange",
              "description": "连接使用的密钥交换，或空字符串（如果不适用）。",
              "type": "string"
            },
            {
              "name": "keyExchangeGroup",
              "description": "(EC)DH group used by the connection, if applicable.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "cipher",
              "description": "密码名称。",
              "type": "string"
            },
            {
              "name": "mac",
              "description": "TLS MAC. Note that AEAD ciphers do not have separate MACs.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "certificate",
              "description": "页证书。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "subjectName",
              "description": "证书主题名称。",
              "type": "string"
            },
            {
              "name": "issuer",
              "description": "颁发 CA 的名称。",
              "type": "string"
            },
            {
              "name": "validFrom",
              "description": "证书自当日起有效。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "validTo",
              "description": "证书有效期至（到期）日期",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "certificateNetworkError",
              "description": "The highest priority network error code, if the certificate has an error.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "certificateHasWeakSignature",
              "description": "如果证书使用弱签名算法，则为 True。",
              "type": "boolean"
            },
            {
              "name": "certificateHasSha1Signature",
              "description": "如果证书在链中具有 SHA1 签名，则为 True。",
              "type": "boolean"
            },
            {
              "name": "modernSSL",
              "description": "如果是现代 SSL，则为真",
              "type": "boolean"
            },
            {
              "name": "obsoleteSslProtocol",
              "description": "True if the connection is using an obsolete SSL protocol.",
              "type": "boolean"
            },
            {
              "name": "obsoleteSslKeyExchange",
              "description": "True if the connection is using an obsolete SSL key exchange.",
              "type": "boolean"
            },
            {
              "name": "obsoleteSslCipher",
              "description": "如果连接使用过时的 SSL 密码，则为 true。",
              "type": "boolean"
            },
            {
              "name": "obsoleteSslSignature",
              "description": "如果连接使用过时的 SSL 签名，则为 True。",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "SafetyTipStatus",
          "experimental": true,
          "type": "string",
          "enum": [
            "badReputation",
            "lookalike"
          ]
        },
        {
          "id": "SafetyTipInfo",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "safetyTipStatus",
              "description": "描述页面是否触发任何安全提示或声誉警告。默认值未知。",
              "$ref": "SafetyTipStatus"
            },
            {
              "name": "safeUrl",
              "description": "安全提示建议的 URL（“您是说吗？”）。仅填写相似的匹配项。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "VisibleSecurityState",
          "description": "Security state information about the page.",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "securityState",
              "description": "页面的安全级别。",
              "$ref": "SecurityState"
            },
            {
              "name": "certificateSecurityState",
              "description": "Security state details about the page certificate.",
              "optional": true,
              "$ref": "CertificateSecurityState"
            },
            {
              "name": "safetyTipInfo",
              "description": "页面上触发的安全提示类型。请注意，即使实际未显示安全提示 UI，也会设置此字段。",
              "optional": true,
              "$ref": "SafetyTipInfo"
            },
            {
              "name": "securityStateIssueIds",
              "description": "安全状态问题 ID 数组。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "SecurityStateExplanation",
          "description": "对影响安全状态的因素的解释。",
          "type": "object",
          "properties": [
            {
              "name": "securityState",
              "description": "安全状态代表所解释因素的严重性。",
              "$ref": "SecurityState"
            },
            {
              "name": "title",
              "description": "描述因素类型的标题。",
              "type": "string"
            },
            {
              "name": "summary",
              "description": "描述因素类型的简短短语。",
              "type": "string"
            },
            {
              "name": "description",
              "description": "该因素的全文解释。",
              "type": "string"
            },
            {
              "name": "mixedContentType",
              "description": "解释所描述的混合内容的类型。",
              "$ref": "MixedContentType"
            },
            {
              "name": "certificate",
              "description": "页证书。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "recommendations",
              "description": "解决任何问题的建议。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "InsecureContentStatus",
          "description": "有关页面上不安全内容的信息。",
          "deprecated": true,
          "type": "object",
          "properties": [
            {
              "name": "ranMixedContent",
              "description": "总是假的。",
              "type": "boolean"
            },
            {
              "name": "displayedMixedContent",
              "description": "总是假的。",
              "type": "boolean"
            },
            {
              "name": "containedMixedForm",
              "description": "总是假的。",
              "type": "boolean"
            },
            {
              "name": "ranContentWithCertErrors",
              "description": "总是假的。",
              "type": "boolean"
            },
            {
              "name": "displayedContentWithCertErrors",
              "description": "Always false.",
              "type": "boolean"
            },
            {
              "name": "ranInsecureContentStyle",
              "description": "始终设置为未知。",
              "$ref": "SecurityState"
            },
            {
              "name": "displayedInsecureContentStyle",
              "description": "始终设置为未知。",
              "$ref": "SecurityState"
            }
          ]
        },
        {
          "id": "CertificateErrorAction",
          "description": "The action to take when a certificate error occurs. continue will continue processing the\nrequest and cancel will cancel the request.",
          "type": "string",
          "enum": [
            "continue",
            "cancel"
          ]
        }
      ],
      "commands": [
        {
          "name": "disable",
          "description": "禁用跟踪安全状态更改。"
        },
        {
          "name": "enable",
          "description": "启用跟踪安全状态更改。"
        },
        {
          "name": "setIgnoreCertificateErrors",
          "description": "Enable/disable whether all certificate errors should be ignored.",
          "parameters": [
            {
              "name": "ignore",
              "description": "如果为 true，则所有证书错误都将被忽略。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "handleCertificateError",
          "description": "处理引发certificateError 事件的证书错误。",
          "deprecated": true,
          "parameters": [
            {
              "name": "eventId",
              "description": "事件的 ID。",
              "type": "integer"
            },
            {
              "name": "action",
              "description": "对证书错误采取的操作。",
              "$ref": "CertificateErrorAction"
            }
          ]
        },
        {
          "name": "setOverrideCertificateErrors",
          "description": "启用/禁用覆盖证书错误。如果启用，所有证书错误事件都需要\n由 DevTools 客户端处理，并应使用“handleCertificateError”命令进行应答。",
          "deprecated": true,
          "parameters": [
            {
              "name": "override",
              "description": "如果为 true，证书错误将被覆盖。",
              "type": "boolean"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "certificateError",
          "description": "存在证书错误。如果启用了覆盖证书错误，那么应该是\n使用“handleCertificateError”命令处理。注意：如果以下情况，则不会触发此事件\n内部已允许证书错误。每个目标只能覆盖一个客户端\n同时出现证书错误。",
          "deprecated": true,
          "parameters": [
            {
              "name": "eventId",
              "description": "事件的 ID。",
              "type": "integer"
            },
            {
              "name": "errorType",
              "description": "错误的类型。",
              "type": "string"
            },
            {
              "name": "requestURL",
              "description": "请求的 url。",
              "type": "string"
            }
          ]
        },
        {
          "name": "visibleSecurityStateChanged",
          "description": "页面的安全状态已更改。",
          "experimental": true,
          "parameters": [
            {
              "name": "visibleSecurityState",
              "description": "有关页面的安全状态信息。",
              "$ref": "VisibleSecurityState"
            }
          ]
        },
        {
          "name": "securityStateChanged",
          "description": "页面的安全状态已更改。不再发送。",
          "deprecated": true,
          "parameters": [
            {
              "name": "securityState",
              "description": "安全状态。",
              "$ref": "SecurityState"
            },
            {
              "name": "schemeIsCryptographic",
              "description": "True if the page was loaded over cryptographic transport such as HTTPS.",
              "deprecated": true,
              "type": "boolean"
            },
            {
              "name": "explanations",
              "description": "以前是安全状态的解释列表。现在总是\n空的。",
              "deprecated": true,
              "type": "array",
              "items": {
                "$ref": "SecurityStateExplanation"
              }
            },
            {
              "name": "insecureContentStatus",
              "description": "Information about insecure content on the page.",
              "deprecated": true,
              "$ref": "InsecureContentStatus"
            },
            {
              "name": "summary",
              "description": "Overrides user-visible description of the state. Always omitted.",
              "deprecated": true,
              "optional": true,
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "ServiceWorker",
      "experimental": true,
      "dependencies": [
        "Target"
      ],
      "types": [
        {
          "id": "RegistrationID",
          "type": "string"
        },
        {
          "id": "ServiceWorkerRegistration",
          "description": "ServiceWorker registration.",
          "type": "object",
          "properties": [
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "scopeURL",
              "type": "string"
            },
            {
              "name": "isDeleted",
              "type": "boolean"
            }
          ]
        },
        {
          "id": "ServiceWorkerVersionRunningStatus",
          "type": "string",
          "enum": [
            "stopped",
            "starting",
            "running",
            "stopping"
          ]
        },
        {
          "id": "ServiceWorkerVersionStatus",
          "type": "string",
          "enum": [
            "new",
            "installing",
            "installed",
            "activating",
            "activated",
            "redundant"
          ]
        },
        {
          "id": "ServiceWorkerVersion",
          "description": "ServiceWorker 版本。",
          "type": "object",
          "properties": [
            {
              "name": "versionId",
              "type": "string"
            },
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "scriptURL",
              "type": "string"
            },
            {
              "name": "runningStatus",
              "$ref": "ServiceWorkerVersionRunningStatus"
            },
            {
              "name": "status",
              "$ref": "ServiceWorkerVersionStatus"
            },
            {
              "name": "scriptLastModified",
              "description": "主脚本的 Last-Modified 标头值。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "scriptResponseTime",
              "description": "The time at which the response headers of the main script were received from the server.\nFor cached script it is the last time the cache entry was validated.",
              "optional": true,
              "type": "number"
            },
            {
              "name": "controlledClients",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "Target.TargetID"
              }
            },
            {
              "name": "targetId",
              "optional": true,
              "$ref": "Target.TargetID"
            },
            {
              "name": "routerRules",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "ServiceWorkerErrorMessage",
          "description": "ServiceWorker 错误消息。",
          "type": "object",
          "properties": [
            {
              "name": "errorMessage",
              "type": "string"
            },
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "versionId",
              "type": "string"
            },
            {
              "name": "sourceURL",
              "type": "string"
            },
            {
              "name": "lineNumber",
              "type": "integer"
            },
            {
              "name": "columnNumber",
              "type": "integer"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "deliverPushMessage",
          "parameters": [
            {
              "name": "origin",
              "type": "string"
            },
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "data",
              "type": "string"
            }
          ]
        },
        {
          "name": "disable"
        },
        {
          "name": "dispatchSyncEvent",
          "parameters": [
            {
              "name": "origin",
              "type": "string"
            },
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "tag",
              "type": "string"
            },
            {
              "name": "lastChance",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "dispatchPeriodicSyncEvent",
          "parameters": [
            {
              "name": "origin",
              "type": "string"
            },
            {
              "name": "registrationId",
              "$ref": "RegistrationID"
            },
            {
              "name": "tag",
              "type": "string"
            }
          ]
        },
        {
          "name": "enable"
        },
        {
          "name": "setForceUpdateOnPageLoad",
          "parameters": [
            {
              "name": "forceUpdateOnPageLoad",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "skipWaiting",
          "parameters": [
            {
              "name": "scopeURL",
              "type": "string"
            }
          ]
        },
        {
          "name": "startWorker",
          "parameters": [
            {
              "name": "scopeURL",
              "type": "string"
            }
          ]
        },
        {
          "name": "stopAllWorkers"
        },
        {
          "name": "stopWorker",
          "parameters": [
            {
              "name": "versionId",
              "type": "string"
            }
          ]
        },
        {
          "name": "unregister",
          "parameters": [
            {
              "name": "scopeURL",
              "type": "string"
            }
          ]
        },
        {
          "name": "updateRegistration",
          "parameters": [
            {
              "name": "scopeURL",
              "type": "string"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "workerErrorReported",
          "parameters": [
            {
              "name": "errorMessage",
              "$ref": "ServiceWorkerErrorMessage"
            }
          ]
        },
        {
          "name": "workerRegistrationUpdated",
          "parameters": [
            {
              "name": "registrations",
              "type": "array",
              "items": {
                "$ref": "ServiceWorkerRegistration"
              }
            }
          ]
        },
        {
          "name": "workerVersionUpdated",
          "parameters": [
            {
              "name": "versions",
              "type": "array",
              "items": {
                "$ref": "ServiceWorkerVersion"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Storage",
      "experimental": true,
      "dependencies": [
        "Browser",
        "Network"
      ],
      "types": [
        {
          "id": "SerializedStorageKey",
          "type": "string"
        },
        {
          "id": "StorageType",
          "description": "可能的存储类型的枚举。",
          "type": "string",
          "enum": [
            "cookies",
            "file_systems",
            "indexeddb",
            "local_storage",
            "shader_cache",
            "websql",
            "service_workers",
            "cache_storage",
            "interest_groups",
            "shared_storage",
            "storage_buckets",
            "all",
            "other"
          ]
        },
        {
          "id": "UsageForType",
          "description": "存储类型的用法。",
          "type": "object",
          "properties": [
            {
              "name": "storageType",
              "description": "存储类型的名称。",
              "$ref": "StorageType"
            },
            {
              "name": "usage",
              "description": "存储使用量（字节）。",
              "type": "number"
            }
          ]
        },
        {
          "id": "TrustTokens",
          "description": "一对发行人来源和可用（已签名，但未使用）信托数量\n来自该发行人的代币。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "issuerOrigin",
              "type": "string"
            },
            {
              "name": "count",
              "type": "number"
            }
          ]
        },
        {
          "id": "InterestGroupAuctionId",
          "description": "受保护的受众兴趣组拍卖标识符。",
          "type": "string"
        },
        {
          "id": "InterestGroupAccessType",
          "description": "兴趣组访问类型的枚举。",
          "type": "string",
          "enum": [
            "join",
            "leave",
            "update",
            "loaded",
            "bid",
            "win",
            "additionalBid",
            "additionalBidWin",
            "topLevelBid",
            "topLevelAdditionalBid",
            "clear"
          ]
        },
        {
          "id": "InterestGroupAuctionEventType",
          "description": "拍卖事件的枚举。",
          "type": "string",
          "enum": [
            "started",
            "configResolved"
          ]
        },
        {
          "id": "InterestGroupAuctionFetchType",
          "description": "网络获取拍卖可以做的枚举。",
          "type": "string",
          "enum": [
            "bidderJs",
            "bidderWasm",
            "sellerJs",
            "bidderTrustedSignals",
            "sellerTrustedSignals"
          ]
        },
        {
          "id": "SharedStorageAccessScope",
          "description": "Enum of shared storage access scopes.",
          "type": "string",
          "enum": [
            "window",
            "sharedStorageWorklet",
            "protectedAudienceWorklet",
            "header"
          ]
        },
        {
          "id": "SharedStorageAccessMethod",
          "description": "共享存储访问方法的枚举。",
          "type": "string",
          "enum": [
            "addModule",
            "createWorklet",
            "selectURL",
            "run",
            "batchUpdate",
            "set",
            "append",
            "delete",
            "clear",
            "get",
            "keys",
            "values",
            "entries",
            "length",
            "remainingBudget"
          ]
        },
        {
          "id": "SharedStorageEntry",
          "description": "源共享存储中单个键值对的结构。",
          "type": "object",
          "properties": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            }
          ]
        },
        {
          "id": "SharedStorageMetadata",
          "description": "源共享存储的详细信息。",
          "type": "object",
          "properties": [
            {
              "name": "creationTime",
              "description": "上次创建源端共享存储的时间。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "length",
              "description": "存储在源共享存储中的键值对的数量。",
              "type": "integer"
            },
            {
              "name": "remainingBudget",
              "description": "当前导航预算中剩余的熵位数。",
              "type": "number"
            },
            {
              "name": "bytesUsed",
              "description": "在源共享中存储为键值对的总字节数\n存储。",
              "type": "integer"
            }
          ]
        },
        {
          "id": "SharedStoragePrivateAggregationConfig",
          "description": "表示作为 privateAggregationConfig 传入的字典对象\n运行或选择URL。",
          "type": "object",
          "properties": [
            {
              "name": "aggregationCoordinatorOrigin",
              "description": "The chosen aggregation service deployment.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "contextId",
              "description": "提供的上下文 ID。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "filteringIdMaxBytes",
              "description": "配置允许过滤 ID 的最大大小。",
              "type": "integer"
            },
            {
              "name": "maxContributions",
              "description": "最终报告中贡献数量的限制。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "SharedStorageReportingMetadata",
          "description": "`selectURL()` 的候选 URL 的一对报告元数据详细信息。",
          "type": "object",
          "properties": [
            {
              "name": "eventType",
              "type": "string"
            },
            {
              "name": "reportingUrl",
              "type": "string"
            }
          ]
        },
        {
          "id": "SharedStorageUrlWithMetadata",
          "description": "将候选 URL 与其报告元数据捆绑在一起。",
          "type": "object",
          "properties": [
            {
              "name": "url",
              "description": "候选 URL 的规范。",
              "type": "string"
            },
            {
              "name": "reportingMetadata",
              "description": "任何关联的报告元数据。",
              "type": "array",
              "items": {
                "$ref": "SharedStorageReportingMetadata"
              }
            }
          ]
        },
        {
          "id": "SharedStorageAccessParams",
          "description": "捆绑共享存储访问事件的参数，其\n存在/不存在可能会根据 SharedStorageAccessType 的不同而有所不同。",
          "type": "object",
          "properties": [
            {
              "name": "scriptSourceUrl",
              "description": "模块脚本 URL 的规范。\n仅适用于 SharedStorageAccessMethods：addModule 和\n创建工作集。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "dataOrigin",
              "description": "String denoting \"context-origin\", \"script-origin\", or a custom\norigin to be used as the worklet's data origin.\nPresent only for SharedStorageAccessMethod: createWorklet.",
              "optional": true,
              "type": "string"
            },
            {
              "name": "operationName",
              "description": "要运行的已注册操作的名称。\n仅适用于 SharedStorageAccessMethods：运行并选择URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "operationId",
              "description": "操作调用的 ID。\n仅适用于 SharedStorageAccessMethods：运行并选择URL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "keepAlive",
              "description": "Whether or not to keep the worket alive for future run or selectURL\ncalls.\nPresent only for SharedStorageAccessMethods: run and selectURL.",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "privateAggregationConfig",
              "description": "配置私有聚合选项。\n仅适用于 SharedStorageAccessMethods：运行并选择URL。",
              "optional": true,
              "$ref": "SharedStoragePrivateAggregationConfig"
            },
            {
              "name": "serializedData",
              "description": "该操作的序列化数据以字节为单位（转换为字符串）。\n仅适用于 SharedStorageAccessMethods：运行并选择URL。\nTODO(crbug.com/401011862)：考虑将此参数更新为二进制。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "urlsWithMetadata",
              "description": "候选 URL 规范的数组，以及任何关联的元数据。\n仅适用于 SharedStorageAccessMethod：selectURL。",
              "optional": true,
              "type": "array",
              "items": {
                "$ref": "SharedStorageUrlWithMetadata"
              }
            },
            {
              "name": "urnUuid",
              "description": "为 selectURL 调用生成的 URN:UUID 规范。\n仅适用于 SharedStorageAccessMethod：selectURL。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "key",
              "description": "源共享存储中特定条目的密钥。\n仅适用于 SharedStorageAccessMethods：设置、追加、删除和\n得到。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "value",
              "description": "源共享存储中特定条目的值。\n仅适用于 SharedStorageAccessMethods：设置和追加。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "ignoreIfPresent",
              "description": "如果某个键已经存在，是否为该键设置一个条目。\n仅适用于 SharedStorageAccessMethod: 设置。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "workletOrdinal",
              "description": "表示工作集的顺序（从 0 开始）的数字\n相对于创建的所有其他共享存储工作集的创建\n使用当前存储分区的文档。\n仅适用于 SharedStorageAccessMethods：addModule、createWorklet。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "workletTargetId",
              "description": "用作 TargetID 的 DevTools 令牌的十六进制表示形式\n关联的共享存储工作集。\n仅适用于 SharedStorageAccessMethods：addModule、createWorklet、\nrun、selectURL 和任何其他 SharedStorageAccessMethod 时\nSharedStorageAccessScope 是sharedStorageWorklet。",
              "optional": true,
              "$ref": "Target.TargetID"
            },
            {
              "name": "withLock",
              "description": "要获取的锁的名称（如果存在）。\n可选择仅针对 SharedStorageAccessMethods 存在：batchUpdate、\n设置、追加、删除和清除。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "batchUpdateId",
              "description": "如果该方法已作为batchUpdate的一部分被调用，那么这\n编号标识其所属的批次。\n（可选）仅针对 SharedStorageAccessMethods 存在：\n批量更新（必需）、设置、追加、删除和清除。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "batchSize",
              "description": "批量发送的修饰符方法的数量。\n仅适用于 SharedStorageAccessMethod：batchUpdate。",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "StorageBucketsDurability",
          "type": "string",
          "enum": [
            "relaxed",
            "strict"
          ]
        },
        {
          "id": "StorageBucket",
          "type": "object",
          "properties": [
            {
              "name": "storageKey",
              "$ref": "SerializedStorageKey"
            },
            {
              "name": "name",
              "description": "如果不指定，则为storageKey的默认bucket。",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "StorageBucketInfo",
          "type": "object",
          "properties": [
            {
              "name": "bucket",
              "$ref": "StorageBucket"
            },
            {
              "name": "id",
              "type": "string"
            },
            {
              "name": "expiration",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "quota",
              "description": "存储配额（字节）。",
              "type": "number"
            },
            {
              "name": "persistent",
              "type": "boolean"
            },
            {
              "name": "durability",
              "$ref": "StorageBucketsDurability"
            }
          ]
        },
        {
          "id": "AttributionReportingSourceType",
          "experimental": true,
          "type": "string",
          "enum": [
            "navigation",
            "event"
          ]
        },
        {
          "id": "UnsignedInt64AsBase10",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "UnsignedInt128AsBase16",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "SignedInt64AsBase10",
          "experimental": true,
          "type": "string"
        },
        {
          "id": "AttributionReportingFilterDataEntry",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "values",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "AttributionReportingFilterConfig",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "filterValues",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingFilterDataEntry"
              }
            },
            {
              "name": "lookbackWindow",
              "description": "持续时间（以秒为单位）",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "id": "AttributionReportingFilterPair",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "filters",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingFilterConfig"
              }
            },
            {
              "name": "notFilters",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingFilterConfig"
              }
            }
          ]
        },
        {
          "id": "AttributionReportingAggregationKeysEntry",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "$ref": "UnsignedInt128AsBase16"
            }
          ]
        },
        {
          "id": "AttributionReportingEventReportWindows",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "start",
              "description": "持续时间（以秒为单位）",
              "type": "integer"
            },
            {
              "name": "ends",
              "description": "持续时间（以秒为单位）",
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          ]
        },
        {
          "id": "AttributionReportingTriggerDataMatching",
          "experimental": true,
          "type": "string",
          "enum": [
            "exact",
            "modulus"
          ]
        },
        {
          "id": "AttributionReportingAggregatableDebugReportingData",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "keyPiece",
              "$ref": "UnsignedInt128AsBase16"
            },
            {
              "name": "value",
              "description": "数字而不是整数，因为并非所有 uint32 都可以表示\n整数",
              "type": "number"
            },
            {
              "name": "types",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "id": "AttributionReportingAggregatableDebugReportingConfig",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "budget",
              "description": "数字而不是整数，因为并非所有 uint32 都可以表示\nint，仅适用于源注册",
              "optional": true,
              "type": "number"
            },
            {
              "name": "keyPiece",
              "$ref": "UnsignedInt128AsBase16"
            },
            {
              "name": "debugData",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregatableDebugReportingData"
              }
            },
            {
              "name": "aggregationCoordinatorOrigin",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "AttributionScopesData",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "values",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "description": "number instead of integer because not all uint32 can be represented by\nint",
              "type": "number"
            },
            {
              "name": "maxEventStates",
              "type": "number"
            }
          ]
        },
        {
          "id": "AttributionReportingNamedBudgetDef",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "budget",
              "type": "integer"
            }
          ]
        },
        {
          "id": "AttributionReportingSourceRegistration",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "time",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "expiry",
              "description": "持续时间（以秒为单位）",
              "type": "integer"
            },
            {
              "name": "triggerData",
              "description": "数字而不是整数，因为并非所有 uint32 都可以表示\n整数",
              "type": "array",
              "items": {
                "type": "number"
              }
            },
            {
              "name": "eventReportWindows",
              "$ref": "AttributionReportingEventReportWindows"
            },
            {
              "name": "aggregatableReportWindow",
              "description": "持续时间（以秒为单位）",
              "type": "integer"
            },
            {
              "name": "type",
              "$ref": "AttributionReportingSourceType"
            },
            {
              "name": "sourceOrigin",
              "type": "string"
            },
            {
              "name": "reportingOrigin",
              "type": "string"
            },
            {
              "name": "destinationSites",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "eventId",
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "priority",
              "$ref": "SignedInt64AsBase10"
            },
            {
              "name": "filterData",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingFilterDataEntry"
              }
            },
            {
              "name": "aggregationKeys",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregationKeysEntry"
              }
            },
            {
              "name": "debugKey",
              "optional": true,
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "triggerDataMatching",
              "$ref": "AttributionReportingTriggerDataMatching"
            },
            {
              "name": "destinationLimitPriority",
              "$ref": "SignedInt64AsBase10"
            },
            {
              "name": "aggregatableDebugReportingConfig",
              "$ref": "AttributionReportingAggregatableDebugReportingConfig"
            },
            {
              "name": "scopesData",
              "optional": true,
              "$ref": "AttributionScopesData"
            },
            {
              "name": "maxEventLevelReports",
              "type": "integer"
            },
            {
              "name": "namedBudgets",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingNamedBudgetDef"
              }
            },
            {
              "name": "debugReporting",
              "type": "boolean"
            },
            {
              "name": "eventLevelEpsilon",
              "type": "number"
            }
          ]
        },
        {
          "id": "AttributionReportingSourceRegistrationResult",
          "experimental": true,
          "type": "string",
          "enum": [
            "success",
            "internalError",
            "insufficientSourceCapacity",
            "insufficientUniqueDestinationCapacity",
            "excessiveReportingOrigins",
            "prohibitedByBrowserPolicy",
            "successNoised",
            "destinationReportingLimitReached",
            "destinationGlobalLimitReached",
            "destinationBothLimitsReached",
            "reportingOriginsPerSiteLimitReached",
            "exceedsMaxChannelCapacity",
            "exceedsMaxScopesChannelCapacity",
            "exceedsMaxTriggerStateCardinality",
            "exceedsMaxEventStatesLimit",
            "destinationPerDayReportingLimitReached"
          ]
        },
        {
          "id": "AttributionReportingSourceRegistrationTimeConfig",
          "experimental": true,
          "type": "string",
          "enum": [
            "include",
            "exclude"
          ]
        },
        {
          "id": "AttributionReportingAggregatableValueDictEntry",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "description": "number instead of integer because not all uint32 can be represented by\nint",
              "type": "number"
            },
            {
              "name": "filteringId",
              "$ref": "UnsignedInt64AsBase10"
            }
          ]
        },
        {
          "id": "AttributionReportingAggregatableValueEntry",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "values",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregatableValueDictEntry"
              }
            },
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            }
          ]
        },
        {
          "id": "AttributionReportingEventTriggerData",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "data",
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "priority",
              "$ref": "SignedInt64AsBase10"
            },
            {
              "name": "dedupKey",
              "optional": true,
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            }
          ]
        },
        {
          "id": "AttributionReportingAggregatableTriggerData",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "keyPiece",
              "$ref": "UnsignedInt128AsBase16"
            },
            {
              "name": "sourceKeys",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            }
          ]
        },
        {
          "id": "AttributionReportingAggregatableDedupKey",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "dedupKey",
              "optional": true,
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            }
          ]
        },
        {
          "id": "AttributionReportingNamedBudgetCandidate",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "name",
              "optional": true,
              "type": "string"
            },
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            }
          ]
        },
        {
          "id": "AttributionReportingTriggerRegistration",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "filters",
              "$ref": "AttributionReportingFilterPair"
            },
            {
              "name": "debugKey",
              "optional": true,
              "$ref": "UnsignedInt64AsBase10"
            },
            {
              "name": "aggregatableDedupKeys",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregatableDedupKey"
              }
            },
            {
              "name": "eventTriggerData",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingEventTriggerData"
              }
            },
            {
              "name": "aggregatableTriggerData",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregatableTriggerData"
              }
            },
            {
              "name": "aggregatableValues",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingAggregatableValueEntry"
              }
            },
            {
              "name": "aggregatableFilteringIdMaxBytes",
              "type": "integer"
            },
            {
              "name": "debugReporting",
              "type": "boolean"
            },
            {
              "name": "aggregationCoordinatorOrigin",
              "optional": true,
              "type": "string"
            },
            {
              "name": "sourceRegistrationTimeConfig",
              "$ref": "AttributionReportingSourceRegistrationTimeConfig"
            },
            {
              "name": "triggerContextId",
              "optional": true,
              "type": "string"
            },
            {
              "name": "aggregatableDebugReportingConfig",
              "$ref": "AttributionReportingAggregatableDebugReportingConfig"
            },
            {
              "name": "scopes",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "namedBudgets",
              "type": "array",
              "items": {
                "$ref": "AttributionReportingNamedBudgetCandidate"
              }
            }
          ]
        },
        {
          "id": "AttributionReportingEventLevelResult",
          "experimental": true,
          "type": "string",
          "enum": [
            "success",
            "successDroppedLowerPriority",
            "internalError",
            "noCapacityForAttributionDestination",
            "noMatchingSources",
            "deduplicated",
            "excessiveAttributions",
            "priorityTooLow",
            "neverAttributedSource",
            "excessiveReportingOrigins",
            "noMatchingSourceFilterData",
            "prohibitedByBrowserPolicy",
            "noMatchingConfigurations",
            "excessiveReports",
            "falselyAttributedSource",
            "reportWindowPassed",
            "notRegistered",
            "reportWindowNotStarted",
            "noMatchingTriggerData"
          ]
        },
        {
          "id": "AttributionReportingAggregatableResult",
          "experimental": true,
          "type": "string",
          "enum": [
            "success",
            "internalError",
            "noCapacityForAttributionDestination",
            "noMatchingSources",
            "excessiveAttributions",
            "excessiveReportingOrigins",
            "noHistograms",
            "insufficientBudget",
            "insufficientNamedBudget",
            "noMatchingSourceFilterData",
            "notRegistered",
            "prohibitedByBrowserPolicy",
            "deduplicated",
            "reportWindowPassed",
            "excessiveReports"
          ]
        },
        {
          "id": "AttributionReportingReportResult",
          "experimental": true,
          "type": "string",
          "enum": [
            "sent",
            "prohibited",
            "failedToAssemble",
            "expired"
          ]
        },
        {
          "id": "RelatedWebsiteSet",
          "description": "单个相关网站集对象。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "primarySites",
              "description": "该集合的主站点，以及 ccTLD（如果有）。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "associatedSites",
              "description": "该组的关联站点，以及 ccTLD（如果有）。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "serviceSites",
              "description": "该组的服务站点，以及 ccTLD（如果有）。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getStorageKeyForFrame",
          "description": "返回给定帧 ID 的存储键。\n已弃用。请改用 Storage.getStorageKey。",
          "deprecated": true,
          "parameters": [
            {
              "name": "frameId",
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "storageKey",
              "$ref": "SerializedStorageKey"
            }
          ]
        },
        {
          "name": "getStorageKey",
          "description": "返回给定帧的存储密钥。如果没有提供帧 ID，\n返回执行该命令的目标的存储密钥。",
          "experimental": true,
          "parameters": [
            {
              "name": "frameId",
              "optional": true,
              "$ref": "Page.FrameId"
            }
          ],
          "returns": [
            {
              "name": "storageKey",
              "$ref": "SerializedStorageKey"
            }
          ]
        },
        {
          "name": "clearDataForOrigin",
          "description": "清除原始存储。",
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            },
            {
              "name": "storageTypes",
              "description": "要清除的存储类型的逗号分隔列表。",
              "type": "string"
            }
          ]
        },
        {
          "name": "clearDataForStorageKey",
          "description": "清除存储密钥的存储。",
          "parameters": [
            {
              "name": "storageKey",
              "description": "Storage key.",
              "type": "string"
            },
            {
              "name": "storageTypes",
              "description": "要清除的存储类型的逗号分隔列表。",
              "type": "string"
            }
          ]
        },
        {
          "name": "getCookies",
          "description": "返回所有浏览器 cookie。",
          "parameters": [
            {
              "name": "browserContextId",
              "description": "在浏览器端点上调用时使用的浏览器上下文。",
              "optional": true,
              "$ref": "Browser.BrowserContextID"
            }
          ],
          "returns": [
            {
              "name": "cookies",
              "description": "cookie 对象数组。",
              "type": "array",
              "items": {
                "$ref": "Network.Cookie"
              }
            }
          ]
        },
        {
          "name": "setCookies",
          "description": "设置给定的 cookie。",
          "parameters": [
            {
              "name": "cookies",
              "description": "待设置的 Cookie。",
              "type": "array",
              "items": {
                "$ref": "Network.CookieParam"
              }
            },
            {
              "name": "browserContextId",
              "description": "在浏览器端点上调用时使用的浏览器上下文。",
              "optional": true,
              "$ref": "Browser.BrowserContextID"
            }
          ]
        },
        {
          "name": "clearCookies",
          "description": "清除cookie。",
          "parameters": [
            {
              "name": "browserContextId",
              "description": "在浏览器端点上调用时使用的浏览器上下文。",
              "optional": true,
              "$ref": "Browser.BrowserContextID"
            }
          ]
        },
        {
          "name": "getUsageAndQuota",
          "description": "返回使用情况和配额（以字节为单位）。",
          "parameters": [
            {
              "name": "origin",
              "description": "Security origin.",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "usage",
              "description": "存储使用量（字节）。",
              "type": "number"
            },
            {
              "name": "quota",
              "description": "存储配额（字节）。",
              "type": "number"
            },
            {
              "name": "overrideActive",
              "description": "源是否具有活动存储配额覆盖",
              "type": "boolean"
            },
            {
              "name": "usageBreakdown",
              "description": "每种类型的存储使用量（字节）。",
              "type": "array",
              "items": {
                "$ref": "UsageForType"
              }
            }
          ]
        },
        {
          "name": "overrideQuotaForOrigin",
          "description": "覆盖指定来源的配额",
          "experimental": true,
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            },
            {
              "name": "quotaSize",
              "description": "用于覆盖原始配额的配额大小（以字节为单位）。\n如果多次调用，则覆盖的配额将等于\n最终调用中提供的quotaSize。如果调用时没有\n指定quotaSize，配额将重置为默认值\n指定的原产地。如果多次调用不同的\n源，将为每个源保持覆盖，直到它被保留\n禁用（在没有配额大小的情况下调用）。",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "trackCacheStorageForOrigin",
          "description": "注册源，以便在其缓存存储列表发生更新时收到通知。",
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            }
          ]
        },
        {
          "name": "trackCacheStorageForStorageKey",
          "description": "注册存储密钥，以便在其缓存存储列表发生更新时收到通知。",
          "parameters": [
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "type": "string"
            }
          ]
        },
        {
          "name": "trackIndexedDBForOrigin",
          "description": "注册 origin，以便在其 IndexedDB 发生更新时收到通知。",
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            }
          ]
        },
        {
          "name": "trackIndexedDBForStorageKey",
          "description": "注册存储键，以便在其 IndexedDB 发生更新时收到通知。",
          "parameters": [
            {
              "name": "storageKey",
              "description": "存储密钥。",
              "type": "string"
            }
          ]
        },
        {
          "name": "untrackCacheStorageForOrigin",
          "description": "Unregisters origin from receiving notifications for cache storage.",
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            }
          ]
        },
        {
          "name": "untrackCacheStorageForStorageKey",
          "description": "Unregisters storage key from receiving notifications for cache storage.",
          "parameters": [
            {
              "name": "storageKey",
              "description": "Storage key.",
              "type": "string"
            }
          ]
        },
        {
          "name": "untrackIndexedDBForOrigin",
          "description": "取消注册接收 IndexedDB 通知的源。",
          "parameters": [
            {
              "name": "origin",
              "description": "安全起源。",
              "type": "string"
            }
          ]
        },
        {
          "name": "untrackIndexedDBForStorageKey",
          "description": "取消注册存储密钥以接收 IndexedDB 的通知。",
          "parameters": [
            {
              "name": "storageKey",
              "description": "Storage key.",
              "type": "string"
            }
          ]
        },
        {
          "name": "getTrustTokens",
          "description": "返回每个发行者存储的信任令牌数量\n当前的浏览上下文。",
          "experimental": true,
          "returns": [
            {
              "name": "tokens",
              "type": "array",
              "items": {
                "$ref": "TrustTokens"
              }
            }
          ]
        },
        {
          "name": "clearTrustTokens",
          "description": "删除由所提供的发行者来源发行的所有信任令牌。\n保留其他存储的数据，包括发行人的赎回记录，完好无损。",
          "experimental": true,
          "parameters": [
            {
              "name": "issuerOrigin",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "didDeleteTokens",
              "description": "如果删除了任何标记，则为 true，否则为 false。",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getInterestGroupDetails",
          "description": "获取指定兴趣组的详细信息。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "details",
              "description": "This largely corresponds to:\nhttps://wicg.github.io/turtledove/#dictdef-generatebidinterestgroup\nbut has absolute expirationTime instead of relative lifetimeMs and\nalso adds joiningOrigin.",
              "type": "object"
            }
          ]
        },
        {
          "name": "setInterestGroupTracking",
          "description": "启用/禁用发布interestGroupAccessed 事件。",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setInterestGroupAuctionTracking",
          "description": "启用/禁用发布interestGroupAuctionEventOccurred 和\ninterestGroupAuctionNetworkRequest已创建。",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getSharedStorageMetadata",
          "description": "获取源共享存储的元数据。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "metadata",
              "$ref": "SharedStorageMetadata"
            }
          ]
        },
        {
          "name": "getSharedStorageEntries",
          "description": "获取给定源的共享存储中的条目。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "entries",
              "type": "array",
              "items": {
                "$ref": "SharedStorageEntry"
              }
            }
          ]
        },
        {
          "name": "setSharedStorageEntry",
          "description": "为给定源的共享存储设置带有“key”和“value”的条目。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            },
            {
              "name": "key",
              "type": "string"
            },
            {
              "name": "value",
              "type": "string"
            },
            {
              "name": "ignoreIfPresent",
              "description": "如果包含“ignoreIfPresent”并且为 true，则仅设置该条目\n`key` 尚不存在。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "deleteSharedStorageEntry",
          "description": "删除给定源共享存储的“key”条目（如果存在）。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            },
            {
              "name": "key",
              "type": "string"
            }
          ]
        },
        {
          "name": "clearSharedStorageEntries",
          "description": "清除给定源的共享存储的所有条目。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            }
          ]
        },
        {
          "name": "resetSharedStorageBudget",
          "description": "通过清除所有预算提款来重置“ownerOrigin”的预算。",
          "experimental": true,
          "parameters": [
            {
              "name": "ownerOrigin",
              "type": "string"
            }
          ]
        },
        {
          "name": "setSharedStorageTracking",
          "description": "Enables/disables issuing of sharedStorageAccessed events.",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setStorageBucketTracking",
          "description": "设置存储键的存储桶的跟踪。",
          "experimental": true,
          "parameters": [
            {
              "name": "storageKey",
              "type": "string"
            },
            {
              "name": "enable",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "deleteStorageBucket",
          "description": "删除具有给定存储键和存储桶名称的存储桶。",
          "experimental": true,
          "parameters": [
            {
              "name": "bucket",
              "$ref": "StorageBucket"
            }
          ]
        },
        {
          "name": "runBounceTrackingMitigations",
          "description": "立即删除被识别为潜在跳出跟踪器的网站的状态。",
          "experimental": true,
          "returns": [
            {
              "name": "deletedSites",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "setAttributionReportingLocalTestingMode",
          "description": "https://wicg.github.io/attribution-reporting-api/",
          "experimental": true,
          "parameters": [
            {
              "name": "enabled",
              "description": "If enabled, noise is suppressed and reports are sent immediately.",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setAttributionReportingTracking",
          "description": "启用/禁用发布归因报告事件。",
          "experimental": true,
          "parameters": [
            {
              "name": "enable",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "sendPendingAttributionReports",
          "description": "立即发送所有待处理的归因报告，无论其情况如何\n预定报告时间。",
          "experimental": true,
          "returns": [
            {
              "name": "numSent",
              "description": "已发送的报告数量。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "getRelatedWebsiteSets",
          "description": "返回此配置文件为浏览器使用的有效相关网站集\n会议。有效的相关网站集在浏览器会话期间不会改变。",
          "experimental": true,
          "returns": [
            {
              "name": "sets",
              "type": "array",
              "items": {
                "$ref": "RelatedWebsiteSet"
              }
            }
          ]
        },
        {
          "name": "getAffectedUrlsForThirdPartyCookieMetadata",
          "description": "返回页面及其匹配的嵌入资源的 URL 列表\n现有宽限期 URL 模式规则。\nhttps://developers.google.com/privacy-sandbox/cookies/temporary-exceptions/grace-period",
          "experimental": true,
          "parameters": [
            {
              "name": "firstPartyUrl",
              "description": "当前正在访问的页面的 URL。",
              "type": "string"
            },
            {
              "name": "thirdPartyUrls",
              "description": "The list of embedded resource URLs from the page.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "returns": [
            {
              "name": "matchedUrls",
              "description": "匹配 URL 的数组。如果第一个有主要模式匹配\nparty URL，数组中仅返回第一方 URL。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "setProtectedAudienceKAnonymity",
          "parameters": [
            {
              "name": "owner",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "hashes",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      ],
      "events": [
        {
          "name": "cacheStorageContentUpdated",
          "description": "A cache's contents have been modified.",
          "parameters": [
            {
              "name": "origin",
              "description": "Origin to update.",
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "要更新的存储密钥。",
              "type": "string"
            },
            {
              "name": "bucketId",
              "description": "要更新的存储桶。",
              "type": "string"
            },
            {
              "name": "cacheName",
              "description": "源中缓存的名称。",
              "type": "string"
            }
          ]
        },
        {
          "name": "cacheStorageListUpdated",
          "description": "已添加/删除缓存。",
          "parameters": [
            {
              "name": "origin",
              "description": "来源更新。",
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "要更新的存储密钥。",
              "type": "string"
            },
            {
              "name": "bucketId",
              "description": "Storage bucket to update.",
              "type": "string"
            }
          ]
        },
        {
          "name": "indexedDBContentUpdated",
          "description": "源的 IndexedDB 对象存储已被修改。",
          "parameters": [
            {
              "name": "origin",
              "description": "来源更新。",
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "要更新的存储密钥。",
              "type": "string"
            },
            {
              "name": "bucketId",
              "description": "Storage bucket to update.",
              "type": "string"
            },
            {
              "name": "databaseName",
              "description": "Database to update.",
              "type": "string"
            },
            {
              "name": "objectStoreName",
              "description": "ObjectStore to update.",
              "type": "string"
            }
          ]
        },
        {
          "name": "indexedDBListUpdated",
          "description": "源站的 IndexedDB 数据库列表已被修改。",
          "parameters": [
            {
              "name": "origin",
              "description": "Origin to update.",
              "type": "string"
            },
            {
              "name": "storageKey",
              "description": "要更新的存储密钥。",
              "type": "string"
            },
            {
              "name": "bucketId",
              "description": "要更新的存储桶。",
              "type": "string"
            }
          ]
        },
        {
          "name": "interestGroupAccessed",
          "description": "访问了其中一个兴趣小组。请注意，这些事件是全球性的\n共享兴趣组商店的所有目标。",
          "parameters": [
            {
              "name": "accessTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "type",
              "$ref": "InterestGroupAccessType"
            },
            {
              "name": "ownerOrigin",
              "type": "string"
            },
            {
              "name": "name",
              "type": "string"
            },
            {
              "name": "componentSellerOrigin",
              "description": "对于 topLevelBid/topLevelAdditionalBid，并在适当时，\n中标和额外中标",
              "optional": true,
              "type": "string"
            },
            {
              "name": "bid",
              "description": "对于 bid 或 SomethingBid 事件，如果在本地而不是在服务器上完成。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "bidCurrency",
              "optional": true,
              "type": "string"
            },
            {
              "name": "uniqueAuctionId",
              "description": "对于非全局事件 ---interestGroupAuctionEvent 的链接",
              "optional": true,
              "$ref": "InterestGroupAuctionId"
            }
          ]
        },
        {
          "name": "interestGroupAuctionEventOccurred",
          "description": "一场涉及利益集团的拍卖正在进行。这些事件是\n特定目标。",
          "parameters": [
            {
              "name": "eventTime",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "type",
              "$ref": "InterestGroupAuctionEventType"
            },
            {
              "name": "uniqueAuctionId",
              "$ref": "InterestGroupAuctionId"
            },
            {
              "name": "parentAuctionId",
              "description": "专为儿童拍卖而设置。",
              "optional": true,
              "$ref": "InterestGroupAuctionId"
            },
            {
              "name": "auctionConfig",
              "description": "设置为started和configResolved",
              "optional": true,
              "type": "object"
            }
          ]
        },
        {
          "name": "interestGroupAuctionNetworkRequestCreated",
          "description": "指定特定网络获取可能与哪些拍卖相关，以及\n扮演什么角色。请注意，它不是针对以下方面进行排序的\nNetwork.requestWillBeSent（但会在loadingFinished之前发生\n加载失败）。",
          "parameters": [
            {
              "name": "type",
              "$ref": "InterestGroupAuctionFetchType"
            },
            {
              "name": "requestId",
              "$ref": "Network.RequestId"
            },
            {
              "name": "auctions",
              "description": "这是使用发布此工作集的拍卖集\n请求。  在可信信号的情况下，可能只有某些信号\n他们实际上关心被查询的键。",
              "type": "array",
              "items": {
                "$ref": "InterestGroupAuctionId"
              }
            }
          ]
        },
        {
          "name": "sharedStorageAccessed",
          "description": "共享存储由关联页面访问。\n所有事件中都包含以下参数。",
          "parameters": [
            {
              "name": "accessTime",
              "description": "访问时间。",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "scope",
              "description": "表示访问范围的枚举值。",
              "$ref": "SharedStorageAccessScope"
            },
            {
              "name": "method",
              "description": "指示调用的共享存储 API 方法的枚举值。",
              "$ref": "SharedStorageAccessMethod"
            },
            {
              "name": "mainFrameId",
              "description": "主框架树根的 DevTools 框架令牌。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "ownerOrigin",
              "description": "Serialization of the origin owning the Shared Storage data.",
              "type": "string"
            },
            {
              "name": "ownerSite",
              "description": "拥有共享存储数据的站点的序列化。",
              "type": "string"
            },
            {
              "name": "params",
              "description": "`params` 包裹的子参数都是可选的，它们\n存在/不存在取决于“类型”。",
              "$ref": "SharedStorageAccessParams"
            }
          ]
        },
        {
          "name": "sharedStorageWorkletOperationExecutionFinished",
          "description": "共享存储运行或 selectURL 操作已完成其执行。\n所有事件中都包含以下参数。",
          "parameters": [
            {
              "name": "finishedTime",
              "description": "Time that the operation finished.",
              "$ref": "Network.TimeSinceEpoch"
            },
            {
              "name": "executionTime",
              "description": "Time, in microseconds, from start of shared storage JS API call until\nend of operation execution in the worklet.",
              "type": "integer"
            },
            {
              "name": "method",
              "description": "指示调用的共享存储 API 方法的枚举值。",
              "$ref": "SharedStorageAccessMethod"
            },
            {
              "name": "operationId",
              "description": "操作调用的 ID。",
              "type": "string"
            },
            {
              "name": "workletTargetId",
              "description": "用作 TargetID 的 DevTools 令牌的十六进制表示形式\n关联的共享存储工作集。",
              "$ref": "Target.TargetID"
            },
            {
              "name": "mainFrameId",
              "description": "主框架树根的 DevTools 框架令牌。",
              "$ref": "Page.FrameId"
            },
            {
              "name": "ownerOrigin",
              "description": "拥有共享存储数据的源的序列化。",
              "type": "string"
            }
          ]
        },
        {
          "name": "storageBucketCreatedOrUpdated",
          "parameters": [
            {
              "name": "bucketInfo",
              "$ref": "StorageBucketInfo"
            }
          ]
        },
        {
          "name": "storageBucketDeleted",
          "parameters": [
            {
              "name": "bucketId",
              "type": "string"
            }
          ]
        },
        {
          "name": "attributionReportingSourceRegistered",
          "experimental": true,
          "parameters": [
            {
              "name": "registration",
              "$ref": "AttributionReportingSourceRegistration"
            },
            {
              "name": "result",
              "$ref": "AttributionReportingSourceRegistrationResult"
            }
          ]
        },
        {
          "name": "attributionReportingTriggerRegistered",
          "experimental": true,
          "parameters": [
            {
              "name": "registration",
              "$ref": "AttributionReportingTriggerRegistration"
            },
            {
              "name": "eventLevel",
              "$ref": "AttributionReportingEventLevelResult"
            },
            {
              "name": "aggregatable",
              "$ref": "AttributionReportingAggregatableResult"
            }
          ]
        },
        {
          "name": "attributionReportingReportSent",
          "experimental": true,
          "parameters": [
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "body",
              "type": "object"
            },
            {
              "name": "result",
              "$ref": "AttributionReportingReportResult"
            },
            {
              "name": "netError",
              "description": "如果结果是“已发送”，则填充网络/HTTP 状态。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "netErrorName",
              "optional": true,
              "type": "string"
            },
            {
              "name": "httpStatusCode",
              "optional": true,
              "type": "integer"
            }
          ]
        },
        {
          "name": "attributionReportingVerboseDebugReportSent",
          "experimental": true,
          "parameters": [
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "body",
              "optional": true,
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            {
              "name": "netError",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "netErrorName",
              "optional": true,
              "type": "string"
            },
            {
              "name": "httpStatusCode",
              "optional": true,
              "type": "integer"
            }
          ]
        }
      ]
    },
    {
      "domain": "SystemInfo",
      "description": "The SystemInfo domain defines methods and events for querying low-level system information.",
      "experimental": true,
      "types": [
        {
          "id": "GPUDevice",
          "description": "描述单个图形处理器 (GPU)。",
          "type": "object",
          "properties": [
            {
              "name": "vendorId",
              "description": "GPU 供应商的 PCI ID（如果有）；否则为 0。",
              "type": "number"
            },
            {
              "name": "deviceId",
              "description": "GPU 设备的 PCI ID（如果有）；否则为 0。",
              "type": "number"
            },
            {
              "name": "subSysId",
              "description": "Sub sys ID of the GPU, only available on Windows.",
              "optional": true,
              "type": "number"
            },
            {
              "name": "revision",
              "description": "GPU 的修订，仅适用于 Windows。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "vendorString",
              "description": "GPU 供应商的字符串描述（如果 PCI ID 不可用）。",
              "type": "string"
            },
            {
              "name": "deviceString",
              "description": "GPU 设备的字符串描述（如果 PCI ID 不可用）。",
              "type": "string"
            },
            {
              "name": "driverVendor",
              "description": "GPU 驱动程序供应商的字符串描述。",
              "type": "string"
            },
            {
              "name": "driverVersion",
              "description": "GPU 驱动程序版本的字符串描述。",
              "type": "string"
            }
          ]
        },
        {
          "id": "Size",
          "description": "描述实体的宽度和高度尺寸。",
          "type": "object",
          "properties": [
            {
              "name": "width",
              "description": "宽度（以像素为单位）。",
              "type": "integer"
            },
            {
              "name": "height",
              "description": "Height in pixels.",
              "type": "integer"
            }
          ]
        },
        {
          "id": "VideoDecodeAcceleratorCapability",
          "description": "描述受支持的视频解码配置文件及其相关的最小和\n最大分辨率。",
          "type": "object",
          "properties": [
            {
              "name": "profile",
              "description": "Video codec profile that is supported, e.g. VP9 Profile 2.",
              "type": "string"
            },
            {
              "name": "maxResolution",
              "description": "此|配置文件| 支持的最大视频尺寸（以像素为单位）。",
              "$ref": "Size"
            },
            {
              "name": "minResolution",
              "description": "Minimum video dimensions in pixels supported for this |profile|.",
              "$ref": "Size"
            }
          ]
        },
        {
          "id": "VideoEncodeAcceleratorCapability",
          "description": "Describes a supported video encoding profile with its associated maximum\nresolution and maximum framerate.",
          "type": "object",
          "properties": [
            {
              "name": "profile",
              "description": "Video codec profile that is supported, e.g H264 Main.",
              "type": "string"
            },
            {
              "name": "maxResolution",
              "description": "此|配置文件| 支持的最大视频尺寸（以像素为单位）。",
              "$ref": "Size"
            },
            {
              "name": "maxFramerateNumerator",
              "description": "支持的最大编码帧速率（以每秒帧数为单位）\n|profile|，作为分数的分子和分母，例如24/1 帧/秒，\n24000/1001 fps 等",
              "type": "integer"
            },
            {
              "name": "maxFramerateDenominator",
              "type": "integer"
            }
          ]
        },
        {
          "id": "SubsamplingFormat",
          "description": "YUV subsampling type of the pixels of a given image.",
          "type": "string",
          "enum": [
            "yuv420",
            "yuv422",
            "yuv444"
          ]
        },
        {
          "id": "ImageType",
          "description": "给定图像的图像格式。",
          "type": "string",
          "enum": [
            "jpeg",
            "webp",
            "unknown"
          ]
        },
        {
          "id": "GPUInfo",
          "description": "提供有关系统上 GPU 的信息。",
          "type": "object",
          "properties": [
            {
              "name": "devices",
              "description": "系统上的图形设备。元素 0 是主 GPU。",
              "type": "array",
              "items": {
                "$ref": "GPUDevice"
              }
            },
            {
              "name": "auxAttributes",
              "description": "其他 GPU 相关属性的可选字典。",
              "optional": true,
              "type": "object"
            },
            {
              "name": "featureStatus",
              "description": "图形功能及其状态的可选字典。",
              "optional": true,
              "type": "object"
            },
            {
              "name": "driverBugWorkarounds",
              "description": "一系列可选的 GPU 驱动程序错误解决方法。",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "videoDecoding",
              "description": "Supported accelerated video decoding capabilities.",
              "type": "array",
              "items": {
                "$ref": "VideoDecodeAcceleratorCapability"
              }
            },
            {
              "name": "videoEncoding",
              "description": "Supported accelerated video encoding capabilities.",
              "type": "array",
              "items": {
                "$ref": "VideoEncodeAcceleratorCapability"
              }
            }
          ]
        },
        {
          "id": "ProcessInfo",
          "description": "代表进程信息。",
          "type": "object",
          "properties": [
            {
              "name": "type",
              "description": "指定进程类型。",
              "type": "string"
            },
            {
              "name": "id",
              "description": "指定进程 ID。",
              "type": "integer"
            },
            {
              "name": "cpuTime",
              "description": "Specifies cumulative CPU usage in seconds across all threads of the\nprocess since the process start.",
              "type": "number"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "getInfo",
          "description": "返回有关系统的信息。",
          "returns": [
            {
              "name": "gpu",
              "description": "Information about the GPUs on the system.",
              "$ref": "GPUInfo"
            },
            {
              "name": "modelName",
              "description": "机器模型的平台相关描述。在 Mac OS 上，这是\n例如，“MacBookPro”。如果不支持，将为空字符串。",
              "type": "string"
            },
            {
              "name": "modelVersion",
              "description": "机器版本的平台相关描述。在 Mac OS 上，这是\n例如，“10.1”。如果不支持，将为空字符串。",
              "type": "string"
            },
            {
              "name": "commandLine",
              "description": "The command line string used to launch the browser. Will be the empty string if not\nsupported.",
              "type": "string"
            }
          ]
        },
        {
          "name": "getFeatureState",
          "description": "返回有关功能状态的信息。",
          "parameters": [
            {
              "name": "featureState",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "featureEnabled",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "getProcessInfo",
          "description": "返回有关所有正在运行的进程的信息。",
          "returns": [
            {
              "name": "processInfo",
              "description": "进程信息块的数组。",
              "type": "array",
              "items": {
                "$ref": "ProcessInfo"
              }
            }
          ]
        }
      ]
    },
    {
      "domain": "Target",
      "description": "支持其他目标发现并允许附加到它们。",
      "types": [
        {
          "id": "TargetID",
          "type": "string"
        },
        {
          "id": "SessionID",
          "description": "Unique identifier of attached debugging session.",
          "type": "string"
        },
        {
          "id": "TargetInfo",
          "type": "object",
          "properties": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            },
            {
              "name": "type",
              "description": "类型列表：https://source.chromium.org/chromium/chromium/src/+/main:content/browser/devtools/devtools_agent_host_impl.cc?ss=chromium&q=f:devtools%20-f:out%20%22::kTypeTab%5B%5D%22",
              "type": "string"
            },
            {
              "name": "title",
              "type": "string"
            },
            {
              "name": "url",
              "type": "string"
            },
            {
              "name": "attached",
              "description": "目标是否有附加的客户端。",
              "type": "boolean"
            },
            {
              "name": "openerId",
              "description": "Opener target Id",
              "optional": true,
              "$ref": "TargetID"
            },
            {
              "name": "canAccessOpener",
              "description": "目标是否有权访问原始窗口。",
              "experimental": true,
              "type": "boolean"
            },
            {
              "name": "openerFrameId",
              "description": "原始窗口的框架 ID（仅当目标具有开启器时才设置）。",
              "experimental": true,
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "parentFrameId",
              "description": "Id of the parent frame, only present for the \"iframe\" targets.",
              "experimental": true,
              "optional": true,
              "$ref": "Page.FrameId"
            },
            {
              "name": "browserContextId",
              "experimental": true,
              "optional": true,
              "$ref": "Browser.BrowserContextID"
            },
            {
              "name": "subtype",
              "description": "提供特定目标类型的附加详细信息。例如，对于\n“页面”的类型，可以设置为“预渲染”。",
              "experimental": true,
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "FilterEntry",
          "description": "目标查询/发现/自动附加操作使用的过滤器。",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "exclude",
              "description": "如果设置，则会导致从列表中排除匹配的目标。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "type",
              "description": "If not present, matches any type.",
              "optional": true,
              "type": "string"
            }
          ]
        },
        {
          "id": "TargetFilter",
          "description": "TargetFilter 中的条目按顺序与目标进行匹配，\n第一个匹配的条目确定目标是否包含在内，\n取决于条目中“排除”字段的值。\n如果未指定过滤器，则假定为\n[{type: \"浏览器\", 排除: true}, {type: \"tab\", 排除: true}, {}]\n（即包括除“浏览器”和“选项卡”之外的所有内容）。",
          "experimental": true,
          "type": "array",
          "items": {
            "$ref": "FilterEntry"
          }
        },
        {
          "id": "RemoteLocation",
          "experimental": true,
          "type": "object",
          "properties": [
            {
              "name": "host",
              "type": "string"
            },
            {
              "name": "port",
              "type": "integer"
            }
          ]
        },
        {
          "id": "WindowState",
          "description": "目标窗口的状态。",
          "experimental": true,
          "type": "string",
          "enum": [
            "normal",
            "minimized",
            "maximized",
            "fullscreen"
          ]
        }
      ],
      "commands": [
        {
          "name": "activateTarget",
          "description": "激活（聚焦）目标。",
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "attachToTarget",
          "description": "附加到具有给定 id 的目标。",
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            },
            {
              "name": "flatten",
              "description": "通过在命令中指定 sessionId 属性启用对会话的“平面”访问。\n我们计划将其设为默认值，弃用非扁平模式，\n并最终将其退役。请参阅 crbug.com/991325。",
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "sessionId",
              "description": "分配给会话的 ID。",
              "$ref": "SessionID"
            }
          ]
        },
        {
          "name": "attachToBrowserTarget",
          "description": "Attaches to the browser target, only uses flat sessionId mode.",
          "experimental": true,
          "returns": [
            {
              "name": "sessionId",
              "description": "分配给会话的 ID。",
              "$ref": "SessionID"
            }
          ]
        },
        {
          "name": "closeTarget",
          "description": "关闭目标。如果目标是一个也被关闭的页面。",
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            }
          ],
          "returns": [
            {
              "name": "success",
              "description": "Always set to true. If an error occurs, the response indicates protocol error.",
              "deprecated": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "exposeDevToolsProtocol",
          "description": "将对象注入到提供通信的目标主机\n具有浏览器目标的通道。\n\n注入的对象将作为“window[bindingName]”可用。\n\n该对象具有以下 API：\n- `binding.send(json)` - 通过远程调试协议发送消息的方法\n- `binding.onmessage = json => handleMessage(json)` - 将为协议通知和命令响应调用的回调。",
          "experimental": true,
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            },
            {
              "name": "bindingName",
              "description": "绑定名称，如果未指定，则为“cdp”。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "inheritPermissions",
              "description": "如果为 true，则继承当前根会话的权限（默认值：false）。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "createBrowserContext",
          "description": "创建一个新的空 BrowserContext。类似于隐身个人资料，但您可以拥有超过\n一。",
          "parameters": [
            {
              "name": "disposeOnDetach",
              "description": "如果指定，则在调试会话断开连接时处置此上下文。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "proxyServer",
              "description": "代理服务器，类似于传递给 --proxy-server 的代理服务器",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "proxyBypassList",
              "description": "代理绕过列表，类似于传递给 --proxy-bypass-list 的列表",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "originsWithUniversalNetworkAccess",
              "description": "用于授予无限制跨源访问的可选来源列表。\nURL 中除构成源的部分之外的部分将被忽略。",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ],
          "returns": [
            {
              "name": "browserContextId",
              "description": "创建的上下文的 id。",
              "$ref": "Browser.BrowserContextID"
            }
          ]
        },
        {
          "name": "getBrowserContexts",
          "description": "返回使用“Target.createBrowserContext”方法创建的所有浏览器上下文。",
          "returns": [
            {
              "name": "browserContextIds",
              "description": "浏览器上下文 ID 数组。",
              "type": "array",
              "items": {
                "$ref": "Browser.BrowserContextID"
              }
            }
          ]
        },
        {
          "name": "createTarget",
          "description": "创建一个新页面。",
          "parameters": [
            {
              "name": "url",
              "description": "页面将导航到的初始 URL。空字符串表示 about:blank。",
              "type": "string"
            },
            {
              "name": "left",
              "description": "框架在 DIP 中离开原点（要求 newWindow 为 true 或无头 shell）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "top",
              "description": "DIP 中的框架顶部原点（要求 newWindow 为 true 或无头 shell）。",
              "experimental": true,
              "optional": true,
              "type": "integer"
            },
            {
              "name": "width",
              "description": "DIP 中的帧宽度（要求 newWindow 为 true 或无头 shell）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "height",
              "description": "DIP 中的框架高度（要求 newWindow 为 true 或无头 shell）。",
              "optional": true,
              "type": "integer"
            },
            {
              "name": "windowState",
              "description": "Frame window state (requires newWindow to be true or headless shell).\nDefault is normal.",
              "optional": true,
              "$ref": "WindowState"
            },
            {
              "name": "browserContextId",
              "description": "用于创建页面的浏览器上下文。",
              "experimental": true,
              "optional": true,
              "$ref": "Browser.BrowserContextID"
            },
            {
              "name": "enableBeginFrameControl",
              "description": "是否通过 DevTools 控制此目标的 BeginFrames（仅限无头 shell，\nMacOS 尚不支持，默认为 false）。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "newWindow",
              "description": "是否创建新的窗口或选项卡（默认为 false，headless shell 不支持）。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "background",
              "description": "Whether to create the target in background or foreground (false by default, not supported\nby headless shell).",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "forTab",
              "description": "是否创建“tab”类型的目标。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hidden",
              "description": "Whether to create a hidden target. The hidden target is observable via protocol, but not\npresent in the tab UI strip. Cannot be created with `forTab: true`, `newWindow: true` or\n`background: false`. The life-time of the tab is limited to the life-time of the session.",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            }
          ],
          "returns": [
            {
              "name": "targetId",
              "description": "打开的页面的id。",
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "detachFromTarget",
          "description": "分离具有给定 id 的会话。",
          "parameters": [
            {
              "name": "sessionId",
              "description": "要分离的会话。",
              "optional": true,
              "$ref": "SessionID"
            },
            {
              "name": "targetId",
              "description": "已弃用。",
              "deprecated": true,
              "optional": true,
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "disposeBrowserContext",
          "description": "删除 BrowserContext。所有所属页面将被关闭，而不调用它们的\n在卸载钩子之前。",
          "parameters": [
            {
              "name": "browserContextId",
              "$ref": "Browser.BrowserContextID"
            }
          ]
        },
        {
          "name": "getTargetInfo",
          "description": "返回有关目标的信息。",
          "experimental": true,
          "parameters": [
            {
              "name": "targetId",
              "optional": true,
              "$ref": "TargetID"
            }
          ],
          "returns": [
            {
              "name": "targetInfo",
              "$ref": "TargetInfo"
            }
          ]
        },
        {
          "name": "getTargets",
          "description": "Retrieves a list of available targets.",
          "parameters": [
            {
              "name": "filter",
              "description": "Only targets matching filter will be reported. If filter is not specified\nand target discovery is currently enabled, a filter used for target discovery\nis used for consistency.",
              "experimental": true,
              "optional": true,
              "$ref": "TargetFilter"
            }
          ],
          "returns": [
            {
              "name": "targetInfos",
              "description": "目标清单。",
              "type": "array",
              "items": {
                "$ref": "TargetInfo"
              }
            }
          ]
        },
        {
          "name": "sendMessageToTarget",
          "description": "通过给定 ID 的会话发送协议消息。\n考虑改用平面模式；请参阅命令 AttachToTarget、setAutoAttach、\n和 crbug.com/991325。",
          "deprecated": true,
          "parameters": [
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "sessionId",
              "description": "会话的标识符。",
              "optional": true,
              "$ref": "SessionID"
            },
            {
              "name": "targetId",
              "description": "Deprecated.",
              "deprecated": true,
              "optional": true,
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "setAutoAttach",
          "description": "控制是否自动附加到所考虑的新目标\n与此直接相关（例如，iframe 或工人）。\n打开后，也会附加到所有现有的相关目标。当关闭时，\n自动与所有当前连接的目标分离。\n这还会从要监视的目标列表中清除“autoAttachRelated”添加的所有目标\n用于创建相关目标。\n您可能想递归地调用此函数以附加自动附加的目标\n到所有可用的目标。",
          "parameters": [
            {
              "name": "autoAttach",
              "description": "是否自动附加到相关目标。",
              "type": "boolean"
            },
            {
              "name": "waitForDebuggerOnStart",
              "description": "附加新目标时是否暂停。使用“Runtime.runIfWaitingForDebugger”\n运行暂停的目标。",
              "type": "boolean"
            },
            {
              "name": "flatten",
              "description": "通过在命令中指定 sessionId 属性启用对会话的“平面”访问。\n我们计划将其设为默认值，弃用非扁平模式，\n并最终将其退役。请参阅 crbug.com/991325。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "filter",
              "description": "仅附加与过滤器匹配的目标。",
              "experimental": true,
              "optional": true,
              "$ref": "TargetFilter"
            }
          ]
        },
        {
          "name": "autoAttachRelated",
          "description": "将指定目标添加到将监视任何相关目标的目标列表\n创建（例如子框架、子工作人员和新版本的服务工作人员）并报告\n通过“attachedToTarget”。指定的目标也会自动附加。\n这会取消任何先前的“setAutoAttach”的效果，并且也会被后续的“setAutoAttach”取消。\n`设置自动附加`。仅在浏览器目标上可用。",
          "experimental": true,
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            },
            {
              "name": "waitForDebuggerOnStart",
              "description": "附加新目标时是否暂停。使用“Runtime.runIfWaitingForDebugger”\n运行暂停的目标。",
              "type": "boolean"
            },
            {
              "name": "filter",
              "description": "Only targets matching filter will be attached.",
              "experimental": true,
              "optional": true,
              "$ref": "TargetFilter"
            }
          ]
        },
        {
          "name": "setDiscoverTargets",
          "description": "控制是否发现可用目标并通过以下方式通知\n`targetCreated/targetInfoChanged/targetDestroyed` 事件。",
          "parameters": [
            {
              "name": "discover",
              "description": "是否发现可用目标。",
              "type": "boolean"
            },
            {
              "name": "filter",
              "description": "Only targets matching filter will be attached. If `discover` is false,\n`filter` must be omitted or empty.",
              "experimental": true,
              "optional": true,
              "$ref": "TargetFilter"
            }
          ]
        },
        {
          "name": "setRemoteLocations",
          "description": "当“setDiscoverTargets”设置为时，启用指定位置的目标发现\n‘真实’。",
          "experimental": true,
          "parameters": [
            {
              "name": "locations",
              "description": "远程位置列表。",
              "type": "array",
              "items": {
                "$ref": "RemoteLocation"
              }
            }
          ]
        },
        {
          "name": "openDevTools",
          "description": "打开目标的 DevTools 窗口。",
          "experimental": true,
          "parameters": [
            {
              "name": "targetId",
              "description": "这可以是页面或选项卡目标 ID。",
              "$ref": "TargetID"
            }
          ],
          "returns": [
            {
              "name": "targetId",
              "description": "DevTools 页面目标的 targetId。",
              "$ref": "TargetID"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "attachedToTarget",
          "description": "由于自动附加或“attachToTarget”命令附加到目标时发出。",
          "experimental": true,
          "parameters": [
            {
              "name": "sessionId",
              "description": "分配给用于发送/接收消息的会话的标识符。",
              "$ref": "SessionID"
            },
            {
              "name": "targetInfo",
              "$ref": "TargetInfo"
            },
            {
              "name": "waitingForDebugger",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "detachedFromTarget",
          "description": "Issued when detached from target for any reason (including `detachFromTarget` command). Can be\nissued multiple times per target if multiple sessions have been attached to it.",
          "experimental": true,
          "parameters": [
            {
              "name": "sessionId",
              "description": "分离的会话标识符。",
              "$ref": "SessionID"
            },
            {
              "name": "targetId",
              "description": "已弃用。",
              "deprecated": true,
              "optional": true,
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "receivedMessageFromTarget",
          "description": "通知从会话收到的新协议消息（如\n`attachedToTarget` 事件）。",
          "parameters": [
            {
              "name": "sessionId",
              "description": "发送消息的会话的标识符。",
              "$ref": "SessionID"
            },
            {
              "name": "message",
              "type": "string"
            },
            {
              "name": "targetId",
              "description": "已弃用。",
              "deprecated": true,
              "optional": true,
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "targetCreated",
          "description": "创建可能的检查目标时发出。",
          "parameters": [
            {
              "name": "targetInfo",
              "$ref": "TargetInfo"
            }
          ]
        },
        {
          "name": "targetDestroyed",
          "description": "当目标被摧毁时发出。",
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            }
          ]
        },
        {
          "name": "targetCrashed",
          "description": "当目标崩溃时发出。",
          "parameters": [
            {
              "name": "targetId",
              "$ref": "TargetID"
            },
            {
              "name": "status",
              "description": "终止状态类型。",
              "type": "string"
            },
            {
              "name": "errorCode",
              "description": "终止错误代码。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "targetInfoChanged",
          "description": "当有关目标的某些信息发生更改时发出。这仅发生在\n`targetCreated` 和 `targetDestroyed`。",
          "parameters": [
            {
              "name": "targetInfo",
              "$ref": "TargetInfo"
            }
          ]
        }
      ]
    },
    {
      "domain": "Tethering",
      "description": "网络共享域定义了浏览器端口绑定的方法和事件。",
      "experimental": true,
      "commands": [
        {
          "name": "bind",
          "description": "请求浏览器端口绑定。",
          "parameters": [
            {
              "name": "port",
              "description": "要绑定的端口号。",
              "type": "integer"
            }
          ]
        },
        {
          "name": "unbind",
          "description": "Request browser port unbinding.",
          "parameters": [
            {
              "name": "port",
              "description": "要解除绑定的端口号。",
              "type": "integer"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "accepted",
          "description": "通知端口已成功绑定并获得指定的连接 ID。",
          "parameters": [
            {
              "name": "port",
              "description": "绑定成功的端口号。",
              "type": "integer"
            },
            {
              "name": "connectionId",
              "description": "Connection id to be used.",
              "type": "string"
            }
          ]
        }
      ]
    },
    {
      "domain": "Tracing",
      "dependencies": [
        "IO"
      ],
      "types": [
        {
          "id": "MemoryDumpConfig",
          "description": "内存转储的配置。仅当启用“内存基础设施”类别时使用。",
          "experimental": true,
          "type": "object"
        },
        {
          "id": "TraceConfig",
          "type": "object",
          "properties": [
            {
              "name": "recordMode",
              "description": "控制跟踪缓冲区存储数据的方式。默认为“recordUntilFull”。",
              "experimental": true,
              "optional": true,
              "type": "string",
              "enum": [
                "recordUntilFull",
                "recordContinuously",
                "recordAsMuchAsPossible",
                "echoToConsole"
              ]
            },
            {
              "name": "traceBufferSizeInKb",
              "description": "跟踪缓冲区的大小（以千字节为单位）。如果未指定或传递零，则使用默认值\n将使用 200 MB。",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "enableSampling",
              "description": "打开 JavaScript 堆栈采样。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "enableSystrace",
              "description": "打开系统跟踪。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "enableArgumentFilter",
              "description": "打开参数过滤器。",
              "experimental": true,
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "includedCategories",
              "description": "包括类别过滤器。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "excludedCategories",
              "description": "排除类别过滤器。",
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "syntheticDelays",
              "description": "Configuration to synthesize the delays in tracing.",
              "experimental": true,
              "optional": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "name": "memoryDumpConfig",
              "description": "内存转储触发器的配置。仅当启用“内存基础设施”类别时使用。",
              "experimental": true,
              "optional": true,
              "$ref": "MemoryDumpConfig"
            }
          ]
        },
        {
          "id": "StreamFormat",
          "description": "轨迹的数据格式。可以是旧版 JSON 格式，也可以是\n协议缓冲区格式。请注意，JSON 格式很快就会被弃用。",
          "experimental": true,
          "type": "string",
          "enum": [
            "json",
            "proto"
          ]
        },
        {
          "id": "StreamCompression",
          "description": "用于通过流返回的跟踪的压缩类型。",
          "experimental": true,
          "type": "string",
          "enum": [
            "none",
            "gzip"
          ]
        },
        {
          "id": "MemoryDumpLevelOfDetail",
          "description": "显式声明内存请求时公开的详细信息。\n与memory_dump_request_args.h保持一致\n记忆仪器.mojom",
          "experimental": true,
          "type": "string",
          "enum": [
            "background",
            "light",
            "detailed"
          ]
        },
        {
          "id": "TracingBackend",
          "description": "用于跟踪的后端类型。 `chrome` 使用 Chrome 集成\n跟踪服务并在所有平台上均受支持。 “系统”只是\n在 Chrome 操作系统上受支持并使用 Perfetto 系统跟踪服务。\n当 perfettoConfig 提供给 Tracing.start 时，“auto”选择“system”\n指定至少一个非 Chrome 数据源；否则使用“chrome”。",
          "experimental": true,
          "type": "string",
          "enum": [
            "auto",
            "chrome",
            "system"
          ]
        }
      ],
      "commands": [
        {
          "name": "end",
          "description": "Stop trace events collection."
        },
        {
          "name": "getCategories",
          "description": "获取支持的跟踪类别。",
          "experimental": true,
          "returns": [
            {
              "name": "categories",
              "description": "支持的跟踪类别列表。",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        {
          "name": "recordClockSyncMarker",
          "description": "在迹线中记录时钟同步标记。",
          "experimental": true,
          "parameters": [
            {
              "name": "syncId",
              "description": "该时钟同步标记的ID",
              "type": "string"
            }
          ]
        },
        {
          "name": "requestMemoryDump",
          "description": "Request a global memory dump.",
          "experimental": true,
          "parameters": [
            {
              "name": "deterministic",
              "description": "通过强制垃圾收集实现更具确定性的结果",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "levelOfDetail",
              "description": "指定内存转储中的详细信息级别。默认为“详细”。",
              "optional": true,
              "$ref": "MemoryDumpLevelOfDetail"
            }
          ],
          "returns": [
            {
              "name": "dumpGuid",
              "description": "生成的全局内存转储的 GUID。",
              "type": "string"
            },
            {
              "name": "success",
              "description": "True iff the global memory dump succeeded.",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "start",
          "description": "开始跟踪事件收集。",
          "parameters": [
            {
              "name": "categories",
              "description": "类别/标签过滤器",
              "experimental": true,
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "options",
              "description": "Tracing options",
              "experimental": true,
              "deprecated": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "bufferUsageReportingInterval",
              "description": "如果设置，代理将在此时间间隔（以毫秒为单位指定）发出 bufferUsage 事件",
              "experimental": true,
              "optional": true,
              "type": "number"
            },
            {
              "name": "transferMode",
              "description": "是否将跟踪事件报告为一系列 dataCollected 事件或将跟踪保存到\n流（默认为“ReportEvents”）。",
              "optional": true,
              "type": "string",
              "enum": [
                "ReportEvents",
                "ReturnAsStream"
              ]
            },
            {
              "name": "streamFormat",
              "description": "要使用的跟踪数据格式。这只适用于使用“ReturnAsStream”时\n传输模式（默认为“json”）。",
              "optional": true,
              "$ref": "StreamFormat"
            },
            {
              "name": "streamCompression",
              "description": "要使用的压缩格式。这只适用于使用“ReturnAsStream”时\n传输模式（默认为“无”）",
              "experimental": true,
              "optional": true,
              "$ref": "StreamCompression"
            },
            {
              "name": "traceConfig",
              "optional": true,
              "$ref": "TraceConfig"
            },
            {
              "name": "perfettoConfig",
              "description": "Base64 编码的序列化 perfetto.protos.TraceConfig protobuf 消息\n指定后，参数 `categories`、`options`、`traceConfig`\n被忽略。 （通过 JSON 传递时编码为 base64 字符串）",
              "experimental": true,
              "optional": true,
              "type": "string"
            },
            {
              "name": "tracingBackend",
              "description": "后端类型（默认为“auto”）",
              "experimental": true,
              "optional": true,
              "$ref": "TracingBackend"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "bufferUsage",
          "experimental": true,
          "parameters": [
            {
              "name": "percentFull",
              "description": "范围 [0..1] 中的数字，指示事件缓冲区的已使用大小（作为其大小的一部分）\n总大小。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "eventCount",
              "description": "跟踪日志中事件的大致数量。",
              "optional": true,
              "type": "number"
            },
            {
              "name": "value",
              "description": "A number in range [0..1] that indicates the used size of event buffer as a fraction of its\ntotal size.",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "dataCollected",
          "description": "包含收集的跟踪事件的存储桶。当跟踪停止时，收集的事件将被\n作为 dataCollected 事件序列发送，后跟 TracingComplete 事件。",
          "experimental": true,
          "parameters": [
            {
              "name": "value",
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          ]
        },
        {
          "name": "tracingComplete",
          "description": "表示跟踪已停止并且没有等待刷新的跟踪缓冲区，所有数据均已\n通过 dataCollected 事件传递。",
          "parameters": [
            {
              "name": "dataLossOccurred",
              "description": "指示是否已知某些跟踪数据已丢失，例如因为痕迹环\n缓冲区缠绕。",
              "type": "boolean"
            },
            {
              "name": "stream",
              "description": "保存生成的跟踪数据的流的句柄。",
              "optional": true,
              "$ref": "IO.StreamHandle"
            },
            {
              "name": "traceFormat",
              "description": "跟踪返回流的数据格式。",
              "optional": true,
              "$ref": "StreamFormat"
            },
            {
              "name": "streamCompression",
              "description": "返回流的压缩格式。",
              "optional": true,
              "$ref": "StreamCompression"
            }
          ]
        }
      ]
    },
    {
      "domain": "WebAudio",
      "description": "该域允许检查 Web 音频 API。\nhttps://webaudio.github.io/web-audio-api/",
      "experimental": true,
      "types": [
        {
          "id": "GraphObjectId",
          "description": "Web Audio API 中图形对象（AudioContext、AudioNode、AudioParam）的唯一 ID",
          "type": "string"
        },
        {
          "id": "ContextType",
          "description": "BaseAudioContext 类型的枚举",
          "type": "string",
          "enum": [
            "realtime",
            "offline"
          ]
        },
        {
          "id": "ContextState",
          "description": "规范中的 AudioContextState 枚举",
          "type": "string",
          "enum": [
            "suspended",
            "running",
            "closed",
            "interrupted"
          ]
        },
        {
          "id": "NodeType",
          "description": "AudioNode 类型的枚举",
          "type": "string"
        },
        {
          "id": "ChannelCountMode",
          "description": "Enum of AudioNode::ChannelCountMode from the spec",
          "type": "string",
          "enum": [
            "clamped-max",
            "explicit",
            "max"
          ]
        },
        {
          "id": "ChannelInterpretation",
          "description": "规范中的 AudioNode::ChannelInterpretation 枚举",
          "type": "string",
          "enum": [
            "discrete",
            "speakers"
          ]
        },
        {
          "id": "ParamType",
          "description": "Enum of AudioParam types",
          "type": "string"
        },
        {
          "id": "AutomationRate",
          "description": "规范中的 AudioParam::AutomationRate 枚举",
          "type": "string",
          "enum": [
            "a-rate",
            "k-rate"
          ]
        },
        {
          "id": "ContextRealtimeData",
          "description": "AudioContext 中实时变化的字段。",
          "type": "object",
          "properties": [
            {
              "name": "currentTime",
              "description": "BaseAudioContext 中的当前上下文时间（以秒为单位）。",
              "type": "number"
            },
            {
              "name": "renderCapacity",
              "description": "渲染图所花费的时间除以渲染量子持续时间，\n并乘以 100。100 表示音频渲染器已达到最大\n容量和故障可能会发生。",
              "type": "number"
            },
            {
              "name": "callbackIntervalMean",
              "description": "回调间隔的运行平均值。",
              "type": "number"
            },
            {
              "name": "callbackIntervalVariance",
              "description": "回调间隔的运行方差。",
              "type": "number"
            }
          ]
        },
        {
          "id": "BaseAudioContext",
          "description": "BaseAudioContext 的协议对象",
          "type": "object",
          "properties": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "contextType",
              "$ref": "ContextType"
            },
            {
              "name": "contextState",
              "$ref": "ContextState"
            },
            {
              "name": "realtimeData",
              "optional": true,
              "$ref": "ContextRealtimeData"
            },
            {
              "name": "callbackBufferSize",
              "description": "与平台相关的回调缓冲区大小。",
              "type": "number"
            },
            {
              "name": "maxOutputChannelCount",
              "description": "正在使用的音频硬件支持的输出通道数。",
              "type": "number"
            },
            {
              "name": "sampleRate",
              "description": "Context sample rate.",
              "type": "number"
            }
          ]
        },
        {
          "id": "AudioListener",
          "description": "AudioListener 的协议对象",
          "type": "object",
          "properties": [
            {
              "name": "listenerId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            }
          ]
        },
        {
          "id": "AudioNode",
          "description": "AudioNode 的协议对象",
          "type": "object",
          "properties": [
            {
              "name": "nodeId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "nodeType",
              "$ref": "NodeType"
            },
            {
              "name": "numberOfInputs",
              "type": "number"
            },
            {
              "name": "numberOfOutputs",
              "type": "number"
            },
            {
              "name": "channelCount",
              "type": "number"
            },
            {
              "name": "channelCountMode",
              "$ref": "ChannelCountMode"
            },
            {
              "name": "channelInterpretation",
              "$ref": "ChannelInterpretation"
            }
          ]
        },
        {
          "id": "AudioParam",
          "description": "AudioParam 的协议对象",
          "type": "object",
          "properties": [
            {
              "name": "paramId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "nodeId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "paramType",
              "$ref": "ParamType"
            },
            {
              "name": "rate",
              "$ref": "AutomationRate"
            },
            {
              "name": "defaultValue",
              "type": "number"
            },
            {
              "name": "minValue",
              "type": "number"
            },
            {
              "name": "maxValue",
              "type": "number"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "启用 WebAudio 域并开始发送上下文生存期事件。"
        },
        {
          "name": "disable",
          "description": "禁用 WebAudio 域。"
        },
        {
          "name": "getRealtimeData",
          "description": "从注册的上下文中获取实时数据。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            }
          ],
          "returns": [
            {
              "name": "realtimeData",
              "$ref": "ContextRealtimeData"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "contextCreated",
          "description": "通知已创建新的 BaseAudioContext。",
          "parameters": [
            {
              "name": "context",
              "$ref": "BaseAudioContext"
            }
          ]
        },
        {
          "name": "contextWillBeDestroyed",
          "description": "Notifies that an existing BaseAudioContext will be destroyed.",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            }
          ]
        },
        {
          "name": "contextChanged",
          "description": "通知现有的 BaseAudioContext 已更改一些属性（id 保持不变）。",
          "parameters": [
            {
              "name": "context",
              "$ref": "BaseAudioContext"
            }
          ]
        },
        {
          "name": "audioListenerCreated",
          "description": "通知 AudioListener 的构造已完成。",
          "parameters": [
            {
              "name": "listener",
              "$ref": "AudioListener"
            }
          ]
        },
        {
          "name": "audioListenerWillBeDestroyed",
          "description": "通知已创建新的 AudioListener。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "listenerId",
              "$ref": "GraphObjectId"
            }
          ]
        },
        {
          "name": "audioNodeCreated",
          "description": "通知已创建一个新的 AudioNode。",
          "parameters": [
            {
              "name": "node",
              "$ref": "AudioNode"
            }
          ]
        },
        {
          "name": "audioNodeWillBeDestroyed",
          "description": "通知现有的 AudioNode 已被销毁。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "nodeId",
              "$ref": "GraphObjectId"
            }
          ]
        },
        {
          "name": "audioParamCreated",
          "description": "通知已创建新的 AudioParam。",
          "parameters": [
            {
              "name": "param",
              "$ref": "AudioParam"
            }
          ]
        },
        {
          "name": "audioParamWillBeDestroyed",
          "description": "通知现有的 AudioParam 已被销毁。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "nodeId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "paramId",
              "$ref": "GraphObjectId"
            }
          ]
        },
        {
          "name": "nodesConnected",
          "description": "通知两个 AudioNode 已连接。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "destinationId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceOutputIndex",
              "optional": true,
              "type": "number"
            },
            {
              "name": "destinationInputIndex",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "nodesDisconnected",
          "description": "通知 AudioNode 已断开连接。目的地可以为空，这意味着来自源的所有传出连接都被断开。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "destinationId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceOutputIndex",
              "optional": true,
              "type": "number"
            },
            {
              "name": "destinationInputIndex",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "nodeParamConnected",
          "description": "通知 AudioNode 连接到 AudioParam。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "destinationId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceOutputIndex",
              "optional": true,
              "type": "number"
            }
          ]
        },
        {
          "name": "nodeParamDisconnected",
          "description": "通知 AudioNode 与 AudioParam 断开连接。",
          "parameters": [
            {
              "name": "contextId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "destinationId",
              "$ref": "GraphObjectId"
            },
            {
              "name": "sourceOutputIndex",
              "optional": true,
              "type": "number"
            }
          ]
        }
      ]
    },
    {
      "domain": "WebAuthn",
      "description": "This domain allows configuring virtual authenticators to test the WebAuthn\nAPI.",
      "experimental": true,
      "types": [
        {
          "id": "AuthenticatorId",
          "type": "string"
        },
        {
          "id": "AuthenticatorProtocol",
          "type": "string",
          "enum": [
            "u2f",
            "ctap2"
          ]
        },
        {
          "id": "Ctap2Version",
          "type": "string",
          "enum": [
            "ctap2_0",
            "ctap2_1"
          ]
        },
        {
          "id": "AuthenticatorTransport",
          "type": "string",
          "enum": [
            "usb",
            "nfc",
            "ble",
            "cable",
            "internal"
          ]
        },
        {
          "id": "VirtualAuthenticatorOptions",
          "type": "object",
          "properties": [
            {
              "name": "protocol",
              "$ref": "AuthenticatorProtocol"
            },
            {
              "name": "ctap2Version",
              "description": "默认为 ctap2_0。如果 |协议| 则忽略== u2f。",
              "optional": true,
              "$ref": "Ctap2Version"
            },
            {
              "name": "transport",
              "$ref": "AuthenticatorTransport"
            },
            {
              "name": "hasResidentKey",
              "description": "Defaults to false.",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hasUserVerification",
              "description": "默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hasLargeBlob",
              "description": "如果设置为 true，身份验证器将支持 largeBlob 扩展。\nhttps://w3c.github.io/webauthn#largeBlob\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hasCredBlob",
              "description": "如果设置为 true，身份验证器将支持 credBlob 扩展。\nhttps://fidoalliance.org/specs/fido-v2.1-rd-20201208/fido-client-to-authenticator-protocol-v2.1-rd-20201208.html#sctn-credBlob-extension\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hasMinPinLength",
              "description": "如果设置为 true，身份验证器将支持 minPinLength 扩展。\nhttps://fidoalliance.org/specs/fido-v2.1-ps-20210615/fido-client-to-authenticator-protocol-v2.1-ps-20210615.html#sctn-minpinlength-extension\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "hasPrf",
              "description": "如果设置为 true，身份验证器将支持 prf 扩展。\nhttps://w3c.github.io/webauthn/#prf-extension\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "automaticPresenceSimulation",
              "description": "If set to true, tests of user presence will succeed immediately.\nOtherwise, they will not be resolved. Defaults to true.",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isUserVerified",
              "description": "设置身份验证器的用户验证是成功还是失败。\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "defaultBackupEligibility",
              "description": "该验证器创建的凭证将有备份\n资格 (BE) 标志设置为此值。默认为 false。\nhttps://w3c.github.io/webauthn/#sctn-credential-backup",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "defaultBackupState",
              "description": "此验证器创建的凭证将具有备份状态\n(BS) 标志设置为此值。默认为 false。\nhttps://w3c.github.io/webauthn/#sctn-credential-backup",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "id": "Credential",
          "type": "object",
          "properties": [
            {
              "name": "credentialId",
              "type": "string"
            },
            {
              "name": "isResidentCredential",
              "type": "boolean"
            },
            {
              "name": "rpId",
              "description": "凭证范围内的依赖方 ID。添加时必须设置\n凭证。",
              "optional": true,
              "type": "string"
            },
            {
              "name": "privateKey",
              "description": "PKCS#8 格式的 ECDSA P-256 私钥。 （通过 JSON 传递时编码为 base64 字符串）",
              "type": "string"
            },
            {
              "name": "userHandle",
              "description": "最大大小为 64 字节的不透明字节序列映射\n特定用户的凭证。 （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "signCount",
              "description": "签名计数器。每成功一次，该值就会加一\n断言。\n请参阅 https://w3c.github.io/webauthn/#signature-counter",
              "type": "integer"
            },
            {
              "name": "largeBlob",
              "description": "与凭证关联的大斑点。\n请参阅 https://w3c.github.io/webauthn/#sctn-large-blob-extension （通过 JSON 传递时编码为 base64 字符串）",
              "optional": true,
              "type": "string"
            },
            {
              "name": "backupEligibility",
              "description": "此凭证返回的断言将具有备份资格\n(BE) 标志设置为此值。默认为验证者的\n默认备份资格值。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "backupState",
              "description": "此凭证返回的断言将具有备份状态（BS）\n标志设置为此值。默认为验证者的\n默认备份状态值。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "userName",
              "description": "凭证的 user.name 属性。如果不设置则相当于空。\nhttps://w3c.github.io/webauthn/#dom-publickeycredentialentity-name",
              "optional": true,
              "type": "string"
            },
            {
              "name": "userDisplayName",
              "description": "凭据的 user.displayName 属性。相当于空如果\n未设置。\nhttps://w3c.github.io/webauthn/#dom-publickeycredentialuserentity-displayname",
              "optional": true,
              "type": "string"
            }
          ]
        }
      ],
      "commands": [
        {
          "name": "enable",
          "description": "启用 WebAuthn 域并开始拦截凭证存储并\n使用虚拟验证器进行检索。",
          "parameters": [
            {
              "name": "enableUI",
              "description": "是否启用WebAuthn用户界面。启用 UI 是\n建议用于调试和演示目的，因为它更接近真实情况\n经验。建议禁用 UI 以进行自动化测试。\n如果 UI 可用，则由嵌入者自行决定是否支持。\n默认为 false。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "disable",
          "description": "禁用 WebAuthn 域。"
        },
        {
          "name": "addVirtualAuthenticator",
          "description": "创建并添加虚拟身份验证器。",
          "parameters": [
            {
              "name": "options",
              "$ref": "VirtualAuthenticatorOptions"
            }
          ],
          "returns": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            }
          ]
        },
        {
          "name": "setResponseOverrideBits",
          "description": "如果参数 isBogusSignature、isBadUV、isBadUP 不存在，则将其重置为 false。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "isBogusSignature",
              "description": "如果设置了 isBogusSignature，则将验证器响应中的签名覆盖为零。\n默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isBadUV",
              "description": "如果设置了 isBadUV，则覆盖验证器响应中标志中的 UV 位\n为零。默认为 false。",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "isBadUP",
              "description": "如果设置了 isBadUP，则覆盖验证器响应中标志中的 UP 位\n为零。默认为 false。",
              "optional": true,
              "type": "boolean"
            }
          ]
        },
        {
          "name": "removeVirtualAuthenticator",
          "description": "删除给定的验证器。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            }
          ]
        },
        {
          "name": "addCredential",
          "description": "Adds the credential to the specified authenticator.",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credential",
              "$ref": "Credential"
            }
          ]
        },
        {
          "name": "getCredential",
          "description": "返回存储在给定虚拟身份验证器中的单个凭证\n与凭证 ID 匹配。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credentialId",
              "type": "string"
            }
          ],
          "returns": [
            {
              "name": "credential",
              "$ref": "Credential"
            }
          ]
        },
        {
          "name": "getCredentials",
          "description": "返回给定虚拟身份验证器中存储的所有凭据。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            }
          ],
          "returns": [
            {
              "name": "credentials",
              "type": "array",
              "items": {
                "$ref": "Credential"
              }
            }
          ]
        },
        {
          "name": "removeCredential",
          "description": "从验证器中删除凭证。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credentialId",
              "type": "string"
            }
          ]
        },
        {
          "name": "clearCredentials",
          "description": "清除指定设备中的所有凭据。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            }
          ]
        },
        {
          "name": "setUserVerified",
          "description": "设置身份验证器的用户验证是成功还是失败。\n默认为 true。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "isUserVerified",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setAutomaticPresenceSimulation",
          "description": "设置对身份验证器的用户存在测试是立即成功（如果为 true）还是无法解析（如果为 false）。\n默认为 true。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "enabled",
              "type": "boolean"
            }
          ]
        },
        {
          "name": "setCredentialProperties",
          "description": "允许设置凭证属性。\nhttps://w3c.github.io/webauthn/#sctn-automation-set-credential-properties",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credentialId",
              "type": "string"
            },
            {
              "name": "backupEligibility",
              "optional": true,
              "type": "boolean"
            },
            {
              "name": "backupState",
              "optional": true,
              "type": "boolean"
            }
          ]
        }
      ],
      "events": [
        {
          "name": "credentialAdded",
          "description": "Triggered when a credential is added to an authenticator.",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credential",
              "$ref": "Credential"
            }
          ]
        },
        {
          "name": "credentialDeleted",
          "description": "当凭证被删除时触发，例如通过\nPublicKeyCredential.signalUnknownCredential()。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credentialId",
              "type": "string"
            }
          ]
        },
        {
          "name": "credentialUpdated",
          "description": "当凭证更新时触发，例如通过\nPublicKeyCredential.signalCurrentUserDetails()。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credential",
              "$ref": "Credential"
            }
          ]
        },
        {
          "name": "credentialAsserted",
          "description": "在 webauthn 断言中使用凭证时触发。",
          "parameters": [
            {
              "name": "authenticatorId",
              "$ref": "AuthenticatorId"
            },
            {
              "name": "credential",
              "$ref": "Credential"
            }
          ]
        }
      ]
    }
  ]
}